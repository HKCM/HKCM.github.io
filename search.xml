<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语入门11-状语</title>
      <link href="2020/12/02/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A811-%E7%8A%B6%E8%AF%AD/"/>
      <url>2020/12/02/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A811-%E7%8A%B6%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>描述:</p><a id="more"></a><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疑难杂症-AWS Not Authorized to Use Launch Template</title>
      <link href="2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-AWS-Not-Authorized-to-Use-Launch-Template/"/>
      <url>2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-AWS-Not-Authorized-to-Use-Launch-Template/</url>
      
        <content type="html"><![CDATA[<p>描述: 当使用AutoScaling时遇到报错,You are not authorized to use launch template</p><a id="more"></a><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>这个报错代表,当前ASG无法通过launch template启动EC2.这个问题甚至会出现延期,可能你成功创建了ASG和Launch Template,在真正需要启动EC2时才报错.</p><p>对于这个问题只能提供解决思路.</p><p>导致问题的原因大致有三个:</p><ol><li>运行命令的用户缺少权限(可能性低)</li></ol><p>运行命令的用户需要具有最低相应权限,但是通常情况如果能通过AWS console界面创建EC2,则说明权限没有问题</p><p>以下是最低权限要求:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Action&quot;: [</span><br><span class="line">    &quot;ec2:runInstances&quot;,</span><br><span class="line">    &quot;ec2:DescribeLaunchTemplates&quot;,</span><br><span class="line">    &quot;ec2:DescribeLaunchTemplateVersions&quot;,</span><br><span class="line">    &quot;ec2:DescribeVpcs&quot;,</span><br><span class="line">    &quot;ec2:DescribeSubnets&quot;,</span><br><span class="line">    &quot;ec2:DescribeAvailabilityZones&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;Resource&quot;: [</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:launch-template/lt-05xxxxxxxxxxxxxa5&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:subnet/subnet-0axxxxxxxxxxxxxad&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:security-group/sg-0axxxxxxxxxxxxx78&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:instance/*&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:network-interface/*&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1:xxxxxxxxxxxx:volume/*&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1::image/&quot;,</span><br><span class="line">    &quot;arn:aws:ec2:ap-southeast-1::snapshot/&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;Effect&quot;: &quot;Allow&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果用户具有相应权限但是无法启动,下一条.</p><ol start="2"><li>Template错误(常见原因)</li></ol><p>正如我之前所说,这个报错是在正在启动EC2时才报错的.所以当你创建ASG和Launch Template时,只要没有语法错误都能创建成功.但是其中的值是否真实有效则需要启动时才能确认.</p><p>所以很有可能是Template的值出错. 常见于多账户,多可用区使用,账户B或可用区B没有你指定的AMI 或者 Key.</p><ul><li>AMIID不存在或值错误</li><li>Keypair不存在或值错误</li><li>SecurityGroup不存在或值错误</li><li>……</li></ul><ol start="3"><li>AWS账户和AWS organize限制导致(常见原因)</li></ol><p>这是最多且最复杂的原因.我只能列出一些常见的,具体的需要自己探究</p><ul><li>AWS账户或组织设置限定EC2类型和Template不一致</li><li>AWS账户或组织设置限定资源只能在指定区域创建</li><li>AWS账户或组织设置限定资源必须附带标签</li><li>AWS账户或组织设置限定不能有公共IP</li><li>AWS账户或组织设置限定资源必须加密</li><li>……</li></ul><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 疑难杂症 </category>
          
          <category> AWS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难杂症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疑难杂症-修改MAC默认截图地址和截图格式</title>
      <link href="2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-%E4%BF%AE%E6%94%B9MAC%E9%BB%98%E8%AE%A4%E6%88%AA%E5%9B%BE%E5%9C%B0%E5%9D%80/"/>
      <url>2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-%E4%BF%AE%E6%94%B9MAC%E9%BB%98%E8%AE%A4%E6%88%AA%E5%9B%BE%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p>描述: 修改MAC默认截图地址</p><a id="more"></a><ol><li><p>创建截图存放位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/Desktop/Snapshot</span><br></pre></td></tr></table></figure></li><li><p>修改存储位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.screencapture location ~/Desktop/Snapshot</span><br></pre></td></tr></table></figure></li><li><p>修改截图格式(可选)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># png gif pdf jpg</span><br><span class="line">defaults write com.apple.screencapture type jpg</span><br></pre></td></tr></table></figure></li><li><p>重启UI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall SystemUIServer</span><br></pre></td></tr></table></figure></li></ol><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 疑难杂症 </category>
          
          <category> MAC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难杂症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疑难杂症-VSCode字体等宽</title>
      <link href="2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-VSCode%E5%AD%97%E4%BD%93%E7%AD%89%E5%AE%BD/"/>
      <url>2020/11/27/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87-VSCode%E5%AD%97%E4%BD%93%E7%AD%89%E5%AE%BD/</url>
      
        <content type="html"><![CDATA[<p>描述: 用VSCode写markdown时,原生字体在中英文字体下不等宽,导致写table时强迫症很难受</p><a id="more"></a><p>解决方案:</p><ol><li>下载字体</li></ol><p><a href="https://github.com/be5invis/Sarasa-Gothic/releases" target="_blank" rel="noopener">https://github.com/be5invis/Sarasa-Gothic/releases</a></p><p>分为ttc和ttf:</p><p>下载<code>ttc</code>格式则安装<code>ttcsarasa-regular.ttc</code></p><p>下载<code>ttf</code>格式则安装<code>sarasa-mono-sc-regular.ttf</code></p><ol start="2"><li>VSCode设置</li></ol><p>因为我只希望markdown使用该字体,所以在当前工作区添加<code>.vscode/settings.json</code>文件<br><img src="1.png" alt></p><p>以我的git路径为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim ~/git/.vscode/settings.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;[markdown]&quot;: &#123;</span><br><span class="line">        &quot;editor.fontFamily&quot;: &quot;Sarasa Mono SC&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启或重载VSCode</li></ol><p><code>Command + shift + P</code> 查找 <code>Reload Window</code></p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 疑难杂症 </category>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难杂症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（13）实用代码</title>
      <link href="2020/11/26/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8813%EF%BC%89%E5%AE%9E%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
      <url>2020/11/26/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8813%EF%BC%89%E5%AE%9E%E7%94%A8%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>描述: 实用代码</p><a id="more"></a><h3 id="shell-执行命令失败则中断执行"><a href="#shell-执行命令失败则中断执行" class="headerlink" title="shell 执行命令失败则中断执行"></a>shell 执行命令失败则中断执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Command || ! echo &apos;Something Wrong&apos; || exit 1</span><br><span class="line"></span><br><span class="line"># or</span><br><span class="line"></span><br><span class="line">Command</span><br><span class="line">if [[ $? -ne 0 ]]; then</span><br><span class="line">    echo &apos;Something Wrong&apos;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="在脚本中写入系统日志"><a href="#在脚本中写入系统日志" class="headerlink" title="在脚本中写入系统日志"></a>在脚本中写入系统日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger –t ScriptName "Hello World"</span><br></pre></td></tr></table></figure><h3 id="在脚本中输出并记录日志"><a href="#在脚本中输出并记录日志" class="headerlink" title="在脚本中输出并记录日志"></a>在脚本中输出并记录日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "somethong wrong" | tee -a /var/log/script_log</span><br></pre></td></tr></table></figure><h3 id="在脚本中写日志函数"><a href="#在脚本中写日志函数" class="headerlink" title="在脚本中写日志函数"></a>在脚本中写日志函数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LOG_FILE='/var/log/script_'$(date +"%Y-%m-%d_%H-%M-%S")'.log'</span><br><span class="line"></span><br><span class="line">function write_log()</span><br><span class="line">&#123;</span><br><span class="line">  now_time='['$(date +"%Y-%m-%d %H:%M:%S")']'</span><br><span class="line">  echo $&#123;now_time&#125; $1 | tee -a $&#123;log_file&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write_log "everything is ok"</span><br></pre></td></tr></table></figure><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门9-定语</title>
      <link href="2020/11/26/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A85-%E5%AE%9A%E8%AF%AD/"/>
      <url>2020/11/26/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A85-%E5%AE%9A%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>描述:定语将一个名词从泛泛到具体,定语修饰名词</p><a id="more"></a><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>定语将一个名词从泛泛到具体,将大的名词缩小.定语修饰名词</p><p>名词是词性,定语是成份</p><p>One-third of students in this class are girls<br><code>of students</code> 修饰 <code>One-third</code> </p><h3 id="定语分类"><a href="#定语分类" class="headerlink" title="定语分类"></a>定语分类</h3><h4 id="前置定语"><a href="#前置定语" class="headerlink" title="前置定语"></a>前置定语</h4><p>a good boy</p><p>[单独的,独立的]词可以用于前置定语</p><p>American country music</p><h4 id="后置定语"><a href="#后置定语" class="headerlink" title="后置定语"></a>后置定语</h4><p>a boy under the tree</p><p>短语和句子做后置定语</p><h3 id="定语构成"><a href="#定语构成" class="headerlink" title="定语构成"></a>定语构成</h3><h4 id="副词做定语"><a href="#副词做定语" class="headerlink" title="副词做定语"></a>副词做定语</h4><p>there[adv] 修饰动词[v]<br>People there are very friendly.</p><p>People living/being there are very friendly.  <code>living</code> 为 <code>live</code> 的现在分词,现在分词是动词[v], <code>living/being there</code> 是短语做后置定语;整个变为现在分词短语做定语</p><p>He didn’t like the man downstairs. (他不喜欢楼下的男人)<br>He didn’t like the man living downstairs.(他不喜欢住在楼下的男人)  <code>living</code> 为 <code>live</code> 的现在分词,现在分词是动词[v],整个变为现在分词短语做定语</p><h4 id="形容词短语做定语"><a href="#形容词短语做定语" class="headerlink" title="形容词短语做定语"></a>形容词短语做定语</h4><p>The next man is a scientist.<br><code>next</code> 修饰<code>man</code></p><p>The man next to me is a scientist.<br><code>next to me</code> 修饰<code>the man</code></p><h4 id="介词短语做定语"><a href="#介词短语做定语" class="headerlink" title="介词短语做定语"></a>介词短语做定语</h4><p>The boy <code>under the tree</code> is Tom.<br>The tallest boy <code>in our class</code> is John.  </p><h4 id="现在分词短语-过去分词短语-动词不定式做定语"><a href="#现在分词短语-过去分词短语-动词不定式做定语" class="headerlink" title="现在分词短语,过去分词短语,动词不定式做定语"></a>现在分词短语,过去分词短语,动词不定式做定语</h4><p>The boy <code>crying over there</code> is my classmate.<br>The house <code>built last year</code> is impressive.<br>I have something <code>to say</code>.</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> 定语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门8-主语</title>
      <link href="2020/11/26/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A84-%E4%B8%BB%E8%AF%AD/"/>
      <url>2020/11/26/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A84-%E4%B8%BB%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>描述:</p><a id="more"></a><p>During the 1990s, American country music has become more and more popular.<br><code>American country music</code> 作主语, 名词做主语</p><p>We often speak English in class<br><code>We</code> 人称代词作主语</p><p><strong>One-third of students in this class are girls.</strong><br>One-third 数词作主语</p><p>To swim in the river is a great pleasure.<br><code>To swim in the river</code> 不定式做主语</p><p>The rich should help the poor.</p><p>When we are going to have an English test has not been decided.</p><p>It is necessary to master a foreign language.<br>It 做形式主语, to master a foreign language 不定式做真正的主语</p><p>That he isn’t at home is not true.<br>he isn’t at home, 句子作主语, 可改为 It is not true that he isn’t at home</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> 主语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门3-动词</title>
      <link href="2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A83-%E5%8A%A8%E8%AF%8D/"/>
      <url>2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A83-%E5%8A%A8%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>描述:动词可以是谓语,也可以是非谓语. 谓语一定是动词,动词不一定是谓语</p><a id="more"></a><p>行为动词, 感官动词,系动词,谓语动词,非谓语动词,实义动词.延续动词,非延续动词,助动词,瞬间动词,情态动词,及物动词,不及物动词,be动词,情态动词</p><p><strong>动词可以是谓语,也可以是非谓语. 谓语一定是动词,动词不一定是谓语</strong></p><h2 id="动词分类"><a href="#动词分类" class="headerlink" title="动词分类"></a>动词分类</h2><h3 id="助动词"><a href="#助动词" class="headerlink" title="助动词"></a>助动词</h3><ul><li>助动词起辅助作用,不能单独构成谓语</li></ul><ol><li><p>Be动词</p><p>am, is, are, was, were, be</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>Be动词 + doing</td><td>表进行</td><td>The boy is crying.</td></tr><tr><td>Be动词 + done</td><td>表被动</td><td>He was struck by a stone.</td></tr></tbody></table></li></ol><ol start="2"><li><p>情态动词</p><ul><li>后面跟动词原型</li><li>无人称变化</li><li>有本身含义</li></ul><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>can</td><td>will</td><td>shall</td><td>may</td><td>must</td><td>need</td><td>had better</td></tr><tr><td>could</td><td>would</td><td>should</td><td>might</td><td>have to</td><td>dare</td><td>had better</td></tr></tbody></table><p>情态助动词 + do<br>Could you help me?<br>You should finish your homework.</p></li><li><p>狭义助动词</p><p>do, does, did</p><p>狭义助动词 + do<br>He did[助动词] do[实义动词] it 表强调<br>Did you do your homework? 表疑问</p></li><li><p>完成助动词</p><p>have, has, had</p><p>have/has/had + done 表完成</p><p>He has had supper already.</p></li><li><p>助动词综合</p></li></ol><p>The boy is crying.  进行时<br>He was struck by a stone.  表被动<br>He has arrived.  完成式<br>I have been painting all day. 完成进行式<br>I have been waiting for you. 完成进行式<br>The house has been pulled down. 完成被动式<br>The bridge has been built now. 完成被动式<br>He doesn’t have launch at home. 表否定<br>Trees are planted in spring. 表被动<br>He did come yesterday. 表强调<br>So much did he love his mother that he bought her many presents on her birthday.<br>If he had come yesterday, I wouldn’t have made such a mistake.   </p><h3 id="实义动词-行为动词"><a href="#实义动词-行为动词" class="headerlink" title="实义动词(行为动词)"></a>实义动词(行为动词)</h3><p>  能表示具体动作,可以分为外部动作和内部动作.例如:<br>    he run<br>    I miss you  </p><ol><li><p>及物动词 vt<br>S + V + O<br>I love you.</p></li><li><p>不及物动词 vi<br>S + V 主语 + 谓语<br>Time flies.</p><p>S + V + Prep + O 主语 + 谓语 + 介词 + 谓语<br>I look at the man</p></li></ol><h3 id="系动词"><a href="#系动词" class="headerlink" title="系动词"></a>系动词</h3><p>  系动词后面需要加表语.表语表示主语是什么或怎么样,不表示具体动作</p><p>  表状态: be stay keep remain lie stand exist</p><p>  表感官: feel smell taste look sound</p><p>  表变化: become go get turn fall</p><p>  表像: seem appear like</p><p>He is[系动词] a student.<br>He is[助动词] being[系动词] a student.<br>He is[助动词] killed[实义动词].<br>He is[助动词] asked[实义动词] to do this job.<br>His hobby is[系动词] playing basketball.<br>He can[助动词] be[系动词] a student.<br>You can[助动词] help[实义动词] me.<br>he does[助动词] is[系动词] a student.<br>He has[助动词] been[系动词] a student.<br>I would[助动词] stay[实义动词] at home all the time.<br>I have[实义动词] a dream.<br>I have[助动词] finished[实义动词] my homework.<br>I have[助动词] had[实义动词] supper.<br>He goes[实义动词] to school by bike.<br>The food goes[系动词] bad.<br>He turns[实义动词] around.<br>The leaf turns[系动词] yellow.<br>I have[助动词] been[助动词] waiting[实义动词] for you all the time.<br>I would[助动词] have[助动词] been[助动词] looking[实义动词] for you. 过去将来完成进行时</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> 动词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门3-感叹句</title>
      <link href="2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A83-%E6%84%9F%E5%8F%B9%E5%8F%A5/"/>
      <url>2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A83-%E6%84%9F%E5%8F%B9%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<p>描述: 感叹句</p><a id="more"></a><p>What do you want?<br>What[n] what在这代表名词</p><p>What color do you want?<br>What[adj] color[n] what在这代表形容词</p><p>What + [名词短语] + (主语 + 谓语)<br>What a good boy the boy is!<br>What a good boy he is!<br>What a good boy!<br>What good weather!</p><p>How do you come here?<br>How[adv] come[v] how在这代表副词</p><p>How + adj<br>How good the boy is!</p><p>How + adv<br>He runs fast<br>How fast he runs</p><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 英语语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门2-名词</title>
      <link href="2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A82-%E5%90%8D%E8%AF%8D/"/>
      <url>2020/11/25/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A82-%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>描述: 名词</p><a id="more"></a><h2 id="六种名词"><a href="#六种名词" class="headerlink" title="六种名词"></a>六种名词</h2><h3 id="名词短语"><a href="#名词短语" class="headerlink" title="名词短语"></a>名词短语</h3><p>a good boy 限定词 + 修饰词 + 名词</p><p>限定词构成</p><ol><li>冠词 - a, an, the</li><li>形容词性的物主代词 - my, his, her, their</li><li>名词所有格 - Tom’s </li><li>指示代词 - these, that</li><li>不定代词 - some</li><li>基数词 - one, two</li><li>疑问代词 - what</li></ol><table><thead><tr><th>限定词</th><th>修饰词</th><th>主体名词</th><th>注释</th></tr></thead><tbody><tr><td>a</td><td>good</td><td>boy</td><td></td></tr><tr><td>a</td><td></td><td>boy</td><td></td></tr><tr><td></td><td>good</td><td>boys</td><td>Countable 可数名词复数可以省略限定词</td></tr><tr><td></td><td></td><td>boys</td><td></td></tr><tr><td></td><td>good</td><td>news</td><td>[UnCountable] 不可数名词复数可以省略限定词</td></tr><tr><td></td><td></td><td>news</td><td></td></tr><tr><td></td><td></td><td>China</td><td>专有名词</td></tr><tr><td></td><td></td><td>Tom</td><td></td></tr><tr><td>The</td><td>rich</td><td>people</td><td></td></tr></tbody></table><h3 id="代词"><a href="#代词" class="headerlink" title="代词"></a>代词</h3><h4 id="人称代词"><a href="#人称代词" class="headerlink" title="人称代词"></a>人称代词</h4><table><thead><tr><th>主格</th><th>宾格</th><th>形物代</th><th>名物代</th><th>反身代</th></tr></thead><tbody><tr><td>I</td><td>me</td><td>my</td><td>mine</td><td>myself</td></tr><tr><td>you</td><td>you</td><td>your</td><td>yours</td><td>yourself</td></tr><tr><td>he</td><td>him</td><td>his</td><td>his</td><td>himself</td></tr><tr><td>she</td><td>her</td><td>her</td><td>hers</td><td>herself</td></tr><tr><td>it</td><td>it</td><td>its</td><td>its</td><td>itself</td></tr><tr><td>we</td><td>us</td><td>our</td><td>ours</td><td>ourselves</td></tr><tr><td>you</td><td>you</td><td>your</td><td>yours</td><td>yourselves</td></tr><tr><td>they</td><td>them</td><td>their</td><td>theirs</td><td>themselves</td></tr></tbody></table><p>主格名词<br><code>I</code> like english</p><p>宾格名词<br>It is <code>me</code></p><p>形物代<br><code>my book</code>,book是名词,修饰名词的是形容词,所以<code>my</code>就是形容词性的物主代词<br>This is my book</p><p>名物代<br>同上<code>my book</code> 是 形容词性物主代词 + 名词 = 名词性的物主代词 <code>mine</code><br>This book is my book<br>This book is mine</p><p>反身代词<br>I love myself</p><h4 id="指示代词"><a href="#指示代词" class="headerlink" title="指示代词"></a>指示代词</h4><table><thead><tr><th>单数</th><th>复数</th></tr></thead><tbody><tr><td>this</td><td>these</td></tr><tr><td>that</td><td>those</td></tr></tbody></table><p>This is a book<br>These are books</p><p>That is a book<br>Those are books  </p><p>that 可用于可数名词的单数和不可数名词</p><p><code>weather</code> 为不可数名词<br>The weather of Chengdu is cooler than the weather of Chongqin.<br>The weather of Chengdu is cooler than that of Chongqin.  </p><p><code>oranges</code> 为复数<br>The oranges of Huainan are sweeter than the oranges of Huibei.<br>The oranges of Huainan are sweeter than those of Huibei.  </p><h4 id="不定代词"><a href="#不定代词" class="headerlink" title="不定代词"></a>不定代词</h4><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>some 一些</td><td>both 两者都</td><td>little</td><td>many</td><td>other</td><td>everybody</td><td>everything</td><td>everyone</td></tr><tr><td>any 否定和疑问</td><td>either 两者之一</td><td>a little</td><td>much</td><td>others</td><td>somebody</td><td>something</td><td>someone</td></tr><tr><td>every</td><td>neither 两者都不</td><td>few</td><td>more</td><td>another</td><td>anybody</td><td>anything</td><td>anyone</td></tr><tr><td>each</td><td>all</td><td>a few</td><td>most</td><td>the other</td><td>nobody</td><td>nothing</td><td>noone</td></tr><tr><td>no</td><td>none 三者都不</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="疑问代词"><a href="#疑问代词" class="headerlink" title="疑问代词"></a>疑问代词</h4><h3 id="数词"><a href="#数词" class="headerlink" title="数词"></a>数词</h3><h5 id="基数词"><a href="#基数词" class="headerlink" title="基数词"></a>基数词</h5><ol><li><p>整数<br>one twe three</p></li><li><p>小数<br>1.3 one point 3</p></li><li><p>分数</p><ol><li>分子为1<br>三分之一: one third</li><li>分子大于1<br>三分之二: two thirds</li></ol></li><li><p>百分数<br>100% one hundred percent</p><p>Two thirds of the students in the class are girls. 三分之二是名词</p><h5 id="序数词-序数词"><a href="#序数词-序数词" class="headerlink" title="序数词(序数词)"></a>序数词(序数词)</h5><p>first second third</p><p>He was the first one to top the mountain peak.<br>The second student is a girl. 序数词做形容词</p></li></ol><h3 id="不定式"><a href="#不定式" class="headerlink" title="不定式"></a>不定式</h3><p><code>To learn english well</code><br>To learn english well is very important.<br>It is very important to learn english well.</p><h3 id="动名词"><a href="#动名词" class="headerlink" title="动名词"></a>动名词</h3><p><code>Smoking</code><br>Smoking is bad.</p><h3 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h3><p><code>You are a good man.</code><br>That you are a good man is a fact.<br>It is a fact that you are a good man.   </p><h2 id="名词分类"><a href="#名词分类" class="headerlink" title="名词分类"></a>名词分类</h2><ol><li>专有名词<br>人名,地名,机构名  Tom, Shanghai</li><li>普通名词<ol><li>可数名词<ol><li>个体名词<br>boy</li><li>集体名词<br>family</li></ol></li><li>不可数名词<ol><li>物质名词<br>milk, bread</li><li>抽象名词<br>power</li></ol></li></ol></li></ol><p>可数名词复数变化</p><table><thead><tr><th>名词</th><th>构成</th><th>示例</th></tr></thead><tbody><tr><td>一般名词</td><td>+ s</td><td>map - maps, soldier - soldiers</td></tr><tr><td>以 s,x,sh,ch 结尾</td><td>+ es</td><td>bus - buses, box - boxes, brush - brushes, watch - watcher</td></tr><tr><td>辅音字母 + y 结尾</td><td>去y + ies</td><td>baby - babies, lady - ladies</td></tr><tr><td>元音字母 + y 结尾</td><td>+ s</td><td>monkey - monkeys, toy - toys</td></tr><tr><td>f,fe 结尾</td><td>去f,fe + ves</td><td>self - selves, knife - knives, roof - roofs</td></tr><tr><td>o 结尾有生命</td><td>+ es</td><td>hero - heroes, potato - potato potatoes</td></tr><tr><td>o 结尾无生命</td><td>+ s</td><td>radio - radios, piano - pianos</td></tr></tbody></table><p>可数名词不规则复数变化</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>元音字母变化</td><td>man - men, foot - feet, goose - geese, tooth - teeth</td></tr><tr><td>单复同型</td><td>sheep, deer</td></tr><tr><td>特殊</td><td>mouse - mice, child - children, ox - oxen</td></tr><tr><td>更特殊</td><td>fish - fish: 表数目; fish - fishes: 表种类; fish - fish: 表鱼肉</td></tr><tr><td>chicken - chickens: 表数目; chicken - chicken: 表鸡肉</td><td></td></tr></tbody></table><ol><li>单数</li><li>复数<ul><li>规则变化<ul><li>book - books</li></ul></li><li>不规则变化<ul><li>German - Germans, American - Americans</li><li>Frenchman - Frenchmen, man - men</li><li>man teacher - men teachers</li></ul></li></ul></li></ol><p>不可数名词</p><ol><li>不变</li><li>量化<ul><li>a glass of water</li><li>a pice of paper</li></ul></li><li>可数化<ul><li>have a good time</li></ul></li><li>转义<br>time - times 时间-次数 |exercise - exercises 练习-练习题,演习|paper - papers 纸 - 论文<pre><code>|</code></pre></li></ol><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> 名词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语入门1-音标</title>
      <link href="2020/11/24/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A81-%E9%9F%B3%E6%A0%87/"/>
      <url>2020/11/24/%E8%8B%B1%E8%AF%AD%E5%85%A5%E9%97%A81-%E9%9F%B3%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<p>描述: 英语入门1-音标</p><a id="more"></a><table><thead><tr><th>音标</th><th>常见发音法字母</th><th>单词1</th><th>单词2</th><th>单词3</th><th>单词4</th><th>单词5</th></tr></thead><tbody><tr><td>/ɪ/ 短元音</td><td>i,y, e</td><td>sit /sɪt/ vi. 坐</td><td>fish /fɪʃ/ n. 鱼</td><td>economy /ɪ’kɒnəmɪ/ n. 经济</td><td></td><td></td></tr><tr><td>/iː/ 长元音</td><td>ee, ea, ie, ei</td><td>bee /biː/ n. 蜜蜂</td><td>steam /stiːm/ n. 蒸汽</td><td>belief /bɪ’liːf/ n. 相信</td><td>receive /rɪ’siːv/ vt. 收到</td><td></td></tr><tr><td>/ʊ/ 短元音</td><td>oo, oul, u</td><td>book /bʊk/ n. 书籍</td><td>bush /bʊʃ/ n.矮树丛</td><td>would /wʊd/ aux. 将</td><td></td><td></td></tr><tr><td>/u:/ 长元音</td><td>o, u, oo, ew, ui, oe, ou</td><td>lose /luːz/ vi. 失败</td><td>rude /ruːd/ adj. 粗鲁的</td><td>school /skuːl/ n. 学校</td><td>threw /θruː/ v. 抛</td><td>juice /dʒuːs/ n.(水果)汁</td></tr><tr><td>/ʌ/ 短元音</td><td>ou, om , on, ov, u</td><td>touch /tʌtʃ/ vt. 接触</td><td>some /sʌm/ pron. 一些</td><td>sun /sʌn/ n. 太阳</td><td>love /lʌv/ vi. 爱</td><td>hurry /‘hʌrɪ/ n. 匆忙</td></tr><tr><td>/ɑː/ 长元音</td><td>ar, au, al(f,m)</td><td>mark /mɑːk/ n. 标志</td><td>laugh /lɑːf/ n. 笑</td><td>half /hɑːf/ n. 一半</td><td></td><td></td></tr><tr><td>/ɒ/ 短元音</td><td>o, a(在w,wh后)</td><td>dog /dɒg/ n. 狗    box /bɒks/ n. 箱</td><td>what /wɒt/ pron. 什么</td><td></td><td></td><td></td></tr><tr><td>/ɔː/ 长元音</td><td>al, au, aw, or, oar,oor,ore,ar(在w后)</td><td>walk /wɔːk/ n. 步行</td><td>law /lɔː/ n. 法律</td><td>border /‘bɔːdə/ n. 边境</td><td>store /stɔː/ n. 商店</td><td>war /wɔː/ n. 战争</td></tr><tr><td>/ə/ 短元音</td><td>a, e, o, u, or, er</td><td>sofa /‘səʊfə/ n. 沙发</td><td>president /‘prezɪdənt/ n. 校长</td><td>today /tə’deɪ/ n. 今天</td><td>support /sə’pɔːt/ vt. 支持</td><td>visitor /‘vɪzɪtə/ n. 访问者</td></tr><tr><td>/ɜː/ 长元音</td><td>er, ir, ur, ear, or(在w后)</td><td>serve /sɜːv/ vi. 服务</td><td>bird /bɜːd/ n. 鸟</td><td>nurse /nɜːs/ n. 护士</td><td>earth /ɜːθ/ n. 地球</td><td>work /wɜːk/ n. 工作</td></tr><tr><td>/e/ 短元音</td><td>e, ea</td><td>egg /eg/ n. 蛋</td><td>bed /bed/ n. 床</td><td>check /tʃek/ vi. 核实</td><td>health /helθ/ n. 健康</td><td></td></tr><tr><td>/æ/ 短元音</td><td>a</td><td>family /ˈfæməlɪ/ n. 家庭</td><td>rabbit /‘ræbɪt/ n. 兔子</td><td>happy /‘hæpɪ/ adj. 幸福的</td><td></td><td></td></tr><tr><td>/ɪə/ 双元音</td><td>ear, ere, ea, eer</td><td>near /nɪə/ adj. 近的</td><td>here /hɪə/ adv. 在这里</td><td>area /‘eərɪə/ n. 区域</td><td>deer /dɪə/ n. 鹿</td><td></td></tr><tr><td>/ʊə/ 双元音</td><td>our, oor, ure</td><td>tour /tʊə/ n. 旅游</td><td>poor /pʊə/ adj. 贫穷的</td><td>ensure /enˈʃʊə/ vt. 保证</td><td></td><td></td></tr><tr><td>/aɪ/ 双元音</td><td>i, y    write /raɪt/ vi. 写</td><td>fight /faɪt/ vi. 打架</td><td>why /waɪ/ adv. 为什么</td><td></td><td></td><td></td></tr><tr><td>/ɔɪ/ 双元音</td><td>oy, oi    boy /bɔɪ/ n. 男孩</td><td>noise /nɔɪz/ n. 噪音</td><td>choice /tʃɔɪs/ n. 选择</td><td></td><td></td><td></td></tr><tr><td>/əʊ/ 双元音</td><td>o, oa, oe, ow</td><td>smoke /sməʊk/ n. 烟</td><td>boat /bəʊt/ n. 小船</td><td>toe /təʊ/ n. 脚趾</td><td>know /nəʊ/ vt. 知道</td><td></td></tr><tr><td>/eə/ 双元音</td><td>are, air, ear, ere</td><td>share /ʃeə/ vt. 分享</td><td>air /eə/ n. 空气</td><td>bear /beə/ n. 熊</td><td>where /weə/ pron. 哪里</td><td></td></tr><tr><td>/aʊ/ 双元音</td><td>ou, ow</td><td>mouse /maʊs/ n. 鼠标</td><td>cloud /klaʊd/ n. 云</td><td>town /taʊn/ n. 城镇</td><td></td><td></td></tr><tr><td>/eɪ/ 双元音</td><td>a, ai, ay, ei</td><td>shake /ʃeɪk/ vt. 动摇</td><td>wait /weɪt/ vt. 等候</td><td>pay /peɪ/ vt. 支付</td><td>weight /weɪt/ n. 重量</td><td></td></tr><tr><td>/p/</td><td>p, pp</td><td>cup /kʌp/ n. 杯子</td><td>open /‘əʊpn/ v.打开</td><td>supper /‘sʌpə/ n. 晚餐</td><td></td><td></td></tr><tr><td>/b/</td><td>b, bb</td><td>bread /bred/ n. 面包</td><td>club /klʌb/ n. 俱乐部</td><td>cabbage /ˈkæbɪdʒ/ n. 卷心菜</td><td></td><td></td></tr><tr><td>/t/</td><td>t, tt</td><td>talk /tɔːk/ vt. 讲</td><td>better /‘betə/ adv. 更好的</td><td>night /naɪt/ n. 夜晚</td><td></td><td></td></tr><tr><td>/d/</td><td>d, dd</td><td>duck /dʌk/ n. 鸭子</td><td>murder /‘mɜːdə/ vt. 谋杀</td><td>middle /‘mɪd(ə)l/ adj. 中间的</td><td></td><td></td></tr><tr><td>/k/</td><td>c, k, ch, ck</td><td>card /kɑːd/ n. 卡片    ache /eɪk/ n. 疼痛</td><td>archive /‘ɑrkaɪv/ n. 档案馆</td><td>kick /kɪk/ vt. 踢</td><td></td><td></td></tr><tr><td>/g/</td><td>g, gg, gu, gh</td><td>gate /geɪt/ n. 大门</td><td>luggage /‘lʌgɪdʒ/ n. 行李</td><td>catalogue /‘kæt(ə)lɒg/ n. 目录</td><td>ghost /gəʊst/ n. 鬼</td><td></td></tr><tr><td>/f/</td><td>f, ff, ph, gh</td><td>five /faɪv/ n. 五</td><td>offer /‘ɒfə/ n. 提议</td><td>alpha /‘ælfə/ n.开端</td><td>laugh /lɑːf/ n. 笑</td><td></td></tr><tr><td>/v/</td><td>v</td><td>very /‘verɪ/ adv. 非常</td><td>leave /liːv/ vt. 离开</td><td>heavy /‘hevɪ/ adj. 沉重的</td><td></td><td></td></tr><tr><td>/s/</td><td>s, ss, c, sc</td><td>sea /siː/ n. 海</td><td>lesson /‘les(ə)n/ n. 教训</td><td>ice /aɪs/ n. 冰</td><td>science /‘saɪəns/ n. 科学</td><td></td></tr><tr><td>/z/</td><td>z, ze, zz, s, se</td><td>zoom /zuːm/ n.变焦摄影</td><td>doze /dəʊz/ n. 瞌睡</td><td>puzzle /‘pʌz(ə)l/ vi. 迷惑</td><td>is /ɪz/ v. 是</td><td>rise /raɪz/ vi. 上升</td></tr><tr><td>/ʃ/</td><td>sh, s(在u前), ss, ci, ti, si</td><td>ship /ʃɪp/ n. 船</td><td>sugar /‘ʃʊgə/ n. 糖</td><td>pressure /‘preʃə/ n. 压力</td><td>social /‘səʊʃ(ə)l/ adj. 社会的</td><td>station /‘steɪʃ(ə)n/ n. 车站</td></tr><tr><td>/ʒ/</td><td>si, su, ge</td><td>vision /‘vɪʒ(ə)n/ n. 视力</td><td>pleasure /‘pleʒə/ n. 快乐</td><td>massage /‘mæsɑːʒ/ n. 按摩</td><td></td><td></td></tr><tr><td>/θ/</td><td>th</td><td>think /θɪŋk/ vt. 想</td><td>cloth /klɒθ/ n. 布</td><td>health /helθ/ n. 健康</td><td></td><td></td></tr><tr><td>/ð/</td><td>th</td><td>they /ðeɪ/ pron. 他们</td><td>other /‘ʌðə/ adj. 其他的</td><td>breathe /briːð/ vi. 呼吸</td><td></td><td></td></tr><tr><td>/h/</td><td>h</td><td>hair /heə/ n.头发</td><td>hate /heɪt/ vt.憎恨</td><td>high /haɪ/ adj.高的</td><td></td><td></td></tr><tr><td>/r/</td><td>r, rr, wr</td><td>read /ri:d/ vt. 阅读</td><td>arrive /ə’raɪv/ vi. 到达</td><td>wrinkle /‘rɪŋkl/ n. 皱纹</td><td></td><td></td></tr><tr><td>/tʃ/</td><td>ch, tch, tua, ture</td><td>chair /tʃeə/ n. 椅子</td><td>catch /kætʃ/ n. 捕捉</td><td>natural /ˈnætʃrəl/ adj. 自然的</td><td>future /‘fjuːtʃə/ n. 未来</td><td></td></tr><tr><td>/dʒ/</td><td>g, dge, j, du</td><td>page /peɪdʒ/ n. 页</td><td>bridge /brɪdʒ/ n. 桥</td><td>July /dʒʊˈlaɪ/ n. 七月</td><td>procedure /prə’siːdʒə/ n. 程序</td><td></td></tr><tr><td>/tr/</td><td>tr</td><td>tree /triː/ n. 树</td><td>trade /treɪd/ n. 贸易</td><td>metric /‘metrɪk/ adj. 公制的</td><td></td><td></td></tr><tr><td>/dr/</td><td>dr</td><td>drink /drɪŋk/ vt. 喝</td><td>dress /dres/ n. 连衣裙</td><td>dream /driːm/ n. 梦想</td><td></td><td></td></tr><tr><td>/ts/</td><td>ts</td><td>pets /pets/ n. (复数)宠物</td><td>cats /kæts/ n. (复数)猫</td><td>gifts /gɪfts/ n. (复数)礼物</td><td></td><td></td></tr><tr><td>/dz/</td><td>ds</td><td>heads /hedz/ n. 头(复数)</td><td>roads /rəʊdz/ n.道路(复数)</td><td>friends /frendz/ n. 朋友(复数)</td><td></td><td></td></tr><tr><td>/m/</td><td>m, mm, mb</td><td>mail /meɪl/ n. 邮件</td><td>grammar /‘græmə/ n. 语法</td><td>climb /klaɪm/ vi. 爬</td><td></td><td></td></tr><tr><td>/n/</td><td>n, nn, gn</td><td>no /nəʊ/ adv. 不</td><td>sunny /‘sʌnɪ/ adj. 阳光的</td><td>foreign /‘fɒrɪn/ adj. 外国的</td><td></td><td></td></tr><tr><td>/ŋ/</td><td>n, ng, nk</td><td>long /lɒŋ/ adj. 长的</td><td>spring /sprɪŋ/ n. 春天</td><td>bank /bæŋk/ n. 银行</td><td></td><td></td></tr><tr><td>/l/</td><td>l, ll</td><td>line /laɪn/ n. 路线</td><td>all /ɔːl/ adj. 全部的</td><td>wheel /wiːl/ n. 车轮</td><td></td><td></td></tr><tr><td>/j/</td><td>y, i</td><td>youth /juːθ/ n. 青年</td><td>unit /‘juːnɪt/ n. 单位</td><td>yolk /jəʊk/ n. 蛋黄</td><td></td><td></td></tr><tr><td>/w/</td><td>w, wh, qu</td><td>white /waɪt/ n. 白色</td><td>what /wɒt/ pron. 什么</td><td>queen /kwiːn/ n. 女王</td><td></td><td></td></tr></tbody></table><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS-S3(4)访问点AccessPoint</title>
      <link href="2020/11/22/AWS-S3-4-%E8%AE%BF%E9%97%AE%E7%82%B9AccessPoint/"/>
      <url>2020/11/22/AWS-S3-4-%E8%AE%BF%E9%97%AE%E7%82%B9AccessPoint/</url>
      
        <content type="html"><![CDATA[<p>描述: 访问点的意义和使用</p><a id="more"></a><h3 id="什么是访问点AccessPoint"><a href="#什么是访问点AccessPoint" class="headerlink" title="什么是访问点AccessPoint"></a>什么是访问点AccessPoint</h3><p>了解一个东西最方便的就是看它的使用场景.那么访问点的使用场景是什么呢?以下以存储桶策略为例,不谈IAM.</p><p>想象一下,公司有一个桶,桶里面有IT,财务,开发和HR各自的文件夹(其实S3并没有文件夹概念,这里是为了方便理解),目前存储桶策略只允许各自部门访问各自的文件夹.<br>随着公司壮大,多了一个部门,这个部门要求要访问IT和开发的文件夹,怎么办呢?那只有修改存储桶策略.有后来又多了一个部门,要求访问HR和财务的文件夹…<br>随着部门的扩展,存储桶策略会越来越复杂且难以追踪和管理,存储桶策略的修改还很有可能会影响到其他部门.  </p><p>所以访问点应运而生,当有新的部门需要访问,可以通过创建访问点和访问点策略以达到访问需求,新的访问点策略不会影响现有的访问点<br><img src="1.png" alt></p><p>所以访问点是简化了 S3 中共享数据集的大规模数据访问管理问题.</p><h3 id="访问点限制和局限性"><a href="#访问点限制和局限性" class="headerlink" title="访问点限制和局限性"></a>访问点限制和局限性</h3><ol><li>访问点策略的大小限制为 20 KB</li><li>只能为自己拥有的存储桶创建访问点</li><li>每个访问点只与一个存储桶相关联</li><li>使用 REST API 向访问点发出请求时，必须使用 AWS Signature Version 4</li><li>每个区域每个 AWS 账户最多可以创建 1,000 个访问点。可以增加配额</li><li>创建访问点之后不可更改访问点的阻止公有访问设置</li><li>访问点不支持跨区域复制</li></ol><h3 id="Access-Point-CLI"><a href="#Access-Point-CLI" class="headerlink" title="Access Point CLI"></a>Access Point CLI</h3><p>创建一个访问点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3control create-access-point --name example-ap --account-id 123456789012 --bucket example-bucket</span><br></pre></td></tr></table></figure><p>创建仅限 VPC 访问的访问点并验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3control create-access-point --name example-vpc-ap --account-id 123456789012 --bucket example-bucket --vpc-configuration VpcId=vpc-1a2b3c</span><br><span class="line">$ aws s3control get-access-point --name example-vpc-ap --account-id 123456789012</span><br></pre></td></tr></table></figure><p>创建具有非默认阻止公有访问设置的访问点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3control create-access-point --name example-ap --account-id 123456789012 --bucket example-bucket \</span><br><span class="line">  --public-access-block-configuration BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=true,RestrictPublicBuckets=true</span><br></pre></td></tr></table></figure><p>要将访问点与 VPC 搭配使用，必须修改 VPC 终端节点的访问策略。VPC 终端节点允许流量从 VPC 流向 Amazon S3。它们具有访问控制策略，用于控制如何允许 VPC 内的资源与 S3 交互。仅当 VPC 终端节点策略同时对访问点和底层存储桶授予访问权限时，从 VPC 通过访问点到 S3 的请求才会成功。</p><p>配置 VPC 终端节点策略,需要同时具有bucket和access point的资源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">        &quot;Action&quot;: [</span><br><span class="line">            &quot;s3:GetObject&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">        &quot;Resource&quot;: [</span><br><span class="line">            &quot;arn:aws:s3:::awsexamplebucket1/*&quot;,</span><br><span class="line">            &quot;arn:aws:s3:us-west-2:123456789012:accesspoint/example-vpc-ap/object/*&quot;</span><br><span class="line">        ]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问点条件键"><a href="#访问点条件键" class="headerlink" title="访问点条件键"></a>访问点条件键</h3><p>匹配访问点 ARN 的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;Condition&quot; : &#123;</span><br><span class="line">    &quot;StringLike&quot;: &#123;</span><br><span class="line">        &quot;s3:DataAccessPointArn&quot;: &quot;arn:aws:s3:us-west-2:123456789012:accesspoint/*&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配访问点拥有者的账户 ID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;Condition&quot; : &#123;</span><br><span class="line">    &quot;StringEquals&quot;: &#123;</span><br><span class="line">        &quot;s3:DataAccessPointAccount&quot;: &quot;123456789012&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配网络起源（Internet 或 VPC）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;Condition&quot; : &#123;</span><br><span class="line">    &quot;StringEquals&quot;: &#123;</span><br><span class="line">        &quot;s3:AccessPointNetworkOrigin&quot;: &quot;VPC&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="策略示例"><a href="#策略示例" class="headerlink" title="策略示例"></a>策略示例</h3><h4 id="只能从访问点访问"><a href="#只能从访问点访问" class="headerlink" title="只能从访问点访问"></a>只能从访问点访问</h4><p>如果希望存储桶只通过访问点访问,可以设置如下<code>存储桶策略</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot; : &#123; &quot;AWS&quot;: &quot;*&quot; &#125;,</span><br><span class="line">        &quot;Action&quot; : &quot;*&quot;,</span><br><span class="line">        &quot;Resource&quot; : [ &quot;Bucket ARN&quot;, &quot;Bucket ARN/*&quot;],</span><br><span class="line">        &quot;Condition&quot;: &#123;</span><br><span class="line">            &quot;StringEquals&quot; : &#123; &quot;s3:DataAccessPointAccount&quot; : &quot;Bucket owner&apos;s account ID&quot; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="访问点策略授予"><a href="#访问点策略授予" class="headerlink" title="访问点策略授予"></a>访问点策略授予</h4><p>以下访问点策略通过账户 123456789012 中的访问点 my-access-point 向账户 123456789012 中的 IAM 用户 Alice 授予对具有前缀 <code>Alice/</code> 的 <code>GET</code> 和 <code>PUT</code> 对象的权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot;: &#123;</span><br><span class="line">            &quot;AWS&quot;: &quot;arn:aws:iam::123456789012:user/Alice&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Action&quot;: [&quot;s3:GetObject&quot;, &quot;s3:PutObject&quot;],</span><br><span class="line">        &quot;Resource&quot;: &quot;arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/Alice/*&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="带标签条件的访问点策略"><a href="#带标签条件的访问点策略" class="headerlink" title="带标签条件的访问点策略"></a>带标签条件的访问点策略</h4><p>以下访问点策略通过账户 123456789012 中的访问点 my-access-point 向账户 123456789012 中的 IAM 用户 Bob 授予对 <code>GET</code> 对象的权限，这些权限仅能访问标签为data 值为 finance的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot; : &#123;</span><br><span class="line">            &quot;AWS&quot;: &quot;arn:aws:iam::123456789012:user/Bob&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Action&quot;:&quot;s3:GetObject&quot;,</span><br><span class="line">        &quot;Resource&quot; : &quot;arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/*&quot;,</span><br><span class="line">        &quot;Condition&quot; : &#123;</span><br><span class="line">            &quot;StringEquals&quot;: &#123;</span><br><span class="line">                &quot;s3:ExistingObjectTag/data&quot;: &quot;finance&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="允许查看存储桶列示内容的访问点策略"><a href="#允许查看存储桶列示内容的访问点策略" class="headerlink" title="允许查看存储桶列示内容的访问点策略"></a>允许查看存储桶列示内容的访问点策略</h4><p>以下访问点策略通过账户 123456789012 中的访问点 my-access-point 授予账户 123456789012 中的 IAM 用户 Charles 查看底层存储桶中包含的对象的权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot;: &#123;</span><br><span class="line">            &quot;AWS&quot;: &quot;arn:aws:iam::123456789012:user/Charles&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Action&quot;: &quot;s3:ListBucket&quot;,</span><br><span class="line">        &quot;Resource&quot;: &quot;arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务控制策略"><a href="#服务控制策略" class="headerlink" title="服务控制策略"></a>服务控制策略</h4><p><strong>以下服务控制策略要求使用 VPC 网络起源创建所有新访问点。实施此策略时，组织中的用户无法创建可从 Internet 访问的新访问点。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">        &quot;Action&quot;: &quot;s3:CreateAccessPoint&quot;,</span><br><span class="line">        &quot;Resource&quot;: &quot;*&quot;,</span><br><span class="line">        &quot;Condition&quot;: &#123;</span><br><span class="line">            &quot;StringNotEquals&quot;: &#123;</span><br><span class="line">                &quot;s3:AccessPointNetworkOrigin&quot;: &quot;VPC&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="将-S3-操作限制为-VPC-网络起源的存储桶策略"><a href="#将-S3-操作限制为-VPC-网络起源的存储桶策略" class="headerlink" title="将 S3 操作限制为 VPC 网络起源的存储桶策略"></a>将 S3 操作限制为 VPC 网络起源的存储桶策略</h4><p>以下存储桶策略限制为只能通过具有 VPC 网络起源的访问点来访问存储桶 examplebucket 的所有 S3 对象操作。</p><p><strong>重要</strong></p><p>在使用类似此示例的语句之前，请确保您不需要使用访问点不支持的功能，例如跨区域复制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">            &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:AbortMultipartUpload&quot;,</span><br><span class="line">                &quot;s3:BypassGovernanceRetention&quot;,</span><br><span class="line">                &quot;s3:DeleteObject&quot;,</span><br><span class="line">                &quot;s3:DeleteObjectTagging&quot;,</span><br><span class="line">                &quot;s3:DeleteObjectVersion&quot;,</span><br><span class="line">                &quot;s3:DeleteObjectVersionTagging&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;,</span><br><span class="line">                &quot;s3:GetObjectAcl&quot;,</span><br><span class="line">                &quot;s3:GetObjectLegalHold&quot;,</span><br><span class="line">                &quot;s3:GetObjectRetention&quot;,</span><br><span class="line">                &quot;s3:GetObjectTagging&quot;,</span><br><span class="line">                &quot;s3:GetObjectVersion&quot;,</span><br><span class="line">                &quot;s3:GetObjectVersionAcl&quot;,</span><br><span class="line">                &quot;s3:GetObjectVersionTagging&quot;,</span><br><span class="line">                &quot;s3:ListMultipartUploadParts&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;,</span><br><span class="line">                &quot;s3:PutObjectAcl&quot;,</span><br><span class="line">                &quot;s3:PutObjectLegalHold&quot;,</span><br><span class="line">                &quot;s3:PutObjectRetention&quot;,</span><br><span class="line">                &quot;s3:PutObjectTagging&quot;,</span><br><span class="line">                &quot;s3:PutObjectVersionAcl&quot;,</span><br><span class="line">                &quot;s3:PutObjectVersionTagging&quot;,</span><br><span class="line">                &quot;s3:RestoreObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: &quot;arn:aws:s3:::examplebucket/*&quot;,</span><br><span class="line">            &quot;Condition&quot;: &#123;</span><br><span class="line">                &quot;StringNotEquals&quot;: &#123;</span><br><span class="line">                    &quot;s3:AccessPointNetworkOrigin&quot;: &quot;VPC&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3api get-object --key Alice/my-image.jpg --bucket arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point download.jpg</span><br><span class="line">$ aws s3api put-object --bucket arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point --key Alice/test.log --body test.log</span><br><span class="line">$ aws s3api delete-object --bucket arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point --key Alice/my-image.jpg</span><br><span class="line">$ aws s3api list-objects-v2 --bucket arn:aws:s3:us-east-1:123456789012:accesspoint/my-access-point</span><br></pre></td></tr></table></figure><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（12）示例</title>
      <link href="2020/11/20/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8812%EF%BC%89%E7%A4%BA%E4%BE%8B/"/>
      <url>2020/11/20/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8812%EF%BC%89%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p>描述: 基于AWS EC2的Bash脚本示例</p><a id="more"></a><p>本文基于AWS EC2的CLI命令,实现EC2 instance type的转化.代码源于<a href="https://docs.amazonaws.cn/cli/latest/userguide/cli-services-ec2-instance-type-script.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cli-services-ec2-instance-type-script.html</a></p><p>主要是学习Bash shell脚本的格式和规范.例如,函数声明使用,提示信息,测试以及说明文档</p><h3 id="change-ec2-instance-type-sh"><a href="#change-ec2-instance-type-sh" class="headerlink" title="change_ec2_instance_type.sh"></a>change_ec2_instance_type.sh</h3><p>该主脚本文件包含执行以下任务的 change_ec2_instance_type() 函数：</p><ul><li>验证指定的 EC2 实例是否存在。</li><li>除非选择了 -f，否则函数会在停止实例之前向用户发出警告。</li><li>更改实例类型</li><li>如果您设置了 -r，请重启实例并确认实例正在运行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>##############################################################################</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> function change_ec2_instance_type</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> This function changes the instance type of the specified Amazon EC2 instance.</span><br><span class="line"><span class="meta">#</span> </span><br><span class="line"><span class="meta">#</span> Parameters:</span><br><span class="line"><span class="meta">#</span>   -i   [string, mandatory] The instance ID of the instance whose type you</span><br><span class="line"><span class="meta">#</span>                            want to change.</span><br><span class="line"><span class="meta">#</span>   -t   [string, mandatory] The instance type to switch the instance to.</span><br><span class="line"><span class="meta">#</span>   -f   [switch, optional]  If set, the function doesn't pause and ask before</span><br><span class="line"><span class="meta">#</span>                            stopping the instance.</span><br><span class="line"><span class="meta">#</span>   -r   [switch, optional]  If set, the function restarts the instance after</span><br><span class="line"><span class="meta">#</span>                            changing the type.</span><br><span class="line"><span class="meta">#</span>   -h   [switch, optional]  Displays this help.</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Example:</span><br><span class="line"><span class="meta">#</span>      The following example converts the specified instance to type "t2.micro"</span><br><span class="line"><span class="meta">#</span>      without pausing to ask permission. It automatically restarts the</span><br><span class="line"><span class="meta">#</span>      instance after changing the type.</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span>      change-instance-type -i i-123456789012 -f -r</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Returns:</span><br><span class="line"><span class="meta">#</span>      0 if successful</span><br><span class="line"><span class="meta">#</span>      1 if it fails</span><br><span class="line"><span class="meta">#</span>##############################################################################</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Import the general_purpose functions.</span><br><span class="line">source awsdocs_general.sh </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>##############################################################################</span><br><span class="line"><span class="meta">#</span> function instance-exists</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> This function checks to see if the specified instance already exists. If it</span><br><span class="line"><span class="meta">#</span> does, it sets two global parameters to return the running state and the </span><br><span class="line"><span class="meta">#</span> instance type.</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Input parameters:</span><br><span class="line"><span class="meta">#</span>       $1 - The id of the instance to check</span><br><span class="line"><span class="meta">#</span> </span><br><span class="line"><span class="meta">#</span> Returns:</span><br><span class="line"><span class="meta">#</span>       0 if the instance already exists</span><br><span class="line"><span class="meta">#</span>       1 if the instance doesn't exist</span><br><span class="line"><span class="meta">#</span>     AND: </span><br><span class="line"><span class="meta">#</span>       Sets two global variables:</span><br><span class="line"><span class="meta">#</span>            EXISTING_STATE - Contains the running/stopped state of the instance.</span><br><span class="line"><span class="meta">#</span>            EXISTING_TYPE  - Contains the current type of the instance.</span><br><span class="line"><span class="meta">#</span>##############################################################################</span><br><span class="line">function get_instance_info &#123;</span><br><span class="line"></span><br><span class="line">    # Declare local variables.</span><br><span class="line">    local INSTANCE_ID RESPONSE</span><br><span class="line">    </span><br><span class="line">    # This function accepts a single parameter.</span><br><span class="line">    INSTANCE_ID=$1</span><br><span class="line"></span><br><span class="line">    # The following --filters parameter causes server-side filtering to limit</span><br><span class="line">    # results to only the records that match the specified ID. The --query </span><br><span class="line">    # parameter causes CLI client-side filtering to include only the values of</span><br><span class="line">    # the InstanceType and State.Code fields. </span><br><span class="line">    </span><br><span class="line">    RESPONSE=$(aws ec2 describe-instances \</span><br><span class="line">                   --query 'Reservations[*].Instances[*].[State.Name, InstanceType]' \</span><br><span class="line">                   --filters Name=instance-id,Values="$INSTANCE_ID" \</span><br><span class="line">                   --output text \</span><br><span class="line">               )</span><br><span class="line"></span><br><span class="line">    if [[ $? -ne 0 ]] || [[ -z "$RESPONSE" ]]; then</span><br><span class="line">        # There was no response, so no such instance.</span><br><span class="line">        return 1        # 1 in Bash script means error/false</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # If we got a response, the instance exists.</span><br><span class="line">    # Retrieve the values of interest and set them as global variables.</span><br><span class="line">    EXISTING_STATE=$(echo "$RESPONSE" | cut -f 1 )        </span><br><span class="line">    EXISTING_TYPE=$(echo "$RESPONSE" | cut -f 2 )</span><br><span class="line"></span><br><span class="line">    return 0        # 0 in Bash script means no error/true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#####################################</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span>  See header at top of this file</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span>#####################################</span><br><span class="line"></span><br><span class="line">function change_ec2_instance_type &#123;</span><br><span class="line"></span><br><span class="line">    function usage() (</span><br><span class="line">        echo ""</span><br><span class="line">        echo "This function changes the instance type of the specified instance."</span><br><span class="line">        echo "Parameter:"</span><br><span class="line">        echo "  -i  Specify the instance ID whose type you want to modify."</span><br><span class="line">        echo "  -t  Specify the instance type to convert the instance to."</span><br><span class="line">        echo "  -d  If the instance was originally running, this option prevents"</span><br><span class="line">        echo "      automatically restarting the instance."</span><br><span class="line">        echo "  -f  If the instance was originally running, this option prevents"</span><br><span class="line">        echo "      the script from asking permission before stopping the instance."</span><br><span class="line">        echo ""</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    local FORCE RESTART REQUESTED_TYPE INSTANCE_ID VERBOSE OPTION RESPONSE ANSWER </span><br><span class="line">    local OPTIND OPTARG # Required to use getopts command in a function.</span><br><span class="line">    </span><br><span class="line">    # Set default values.</span><br><span class="line">    FORCE=false</span><br><span class="line">    RESTART=false</span><br><span class="line">    REQUESTED_TYPE=""</span><br><span class="line">    INSTANCE_ID=""</span><br><span class="line">    VERBOSE=false</span><br><span class="line"></span><br><span class="line">    # Retrieve the calling parameters.</span><br><span class="line">    while getopts "i:t:frvh" OPTION; do</span><br><span class="line">        case "$&#123;OPTION&#125;"</span><br><span class="line">        in</span><br><span class="line">            i)  INSTANCE_ID="$&#123;OPTARG&#125;";;</span><br><span class="line">            t)  REQUESTED_TYPE="$&#123;OPTARG&#125;";;</span><br><span class="line">            f)  FORCE=true;;</span><br><span class="line">            r)  RESTART=true;;</span><br><span class="line">            v)  VERBOSE=true;;</span><br><span class="line">            h)  usage; return 0;;</span><br><span class="line">            \?) echo "Invalid parameter"; usage; return 1;; </span><br><span class="line">        esac</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">    if [[ -z "$INSTANCE_ID" ]]; then</span><br><span class="line">        errecho "ERROR: You must provide an instance ID with the -i parameter."</span><br><span class="line">        usage</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    if [[ -z "$REQUESTED_TYPE" ]]; then</span><br><span class="line">        errecho "ERROR: You must provide an instance type with the -t parameter."</span><br><span class="line">        usage</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    iecho "Parameters:\n"</span><br><span class="line">    iecho "    Instance ID:   $INSTANCE_ID"</span><br><span class="line">    iecho "    Requests type: $REQUESTED_TYPE"</span><br><span class="line">    iecho "    Force stop:    $FORCE"</span><br><span class="line">    iecho "    Restart:       $RESTART"</span><br><span class="line">    iecho "    Verbose:       $VERBOSE"</span><br><span class="line">    iecho ""</span><br><span class="line">    </span><br><span class="line">    # Check that the specified instance exists.</span><br><span class="line">    iecho -n "Confirming that instance $INSTANCE_ID exists..."</span><br><span class="line">    get_instance_info "$INSTANCE_ID"</span><br><span class="line">    # If the instance doesn't exist, the function returns an error code &lt;&gt; 0.</span><br><span class="line">    if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">        errecho "ERROR: I can't find the instance \"$INSTANCE_ID\" in the current AWS account."</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    # Function get_instance_info has returned two global values:</span><br><span class="line">    #   $EXISTING_TYPE  -- The instance type of the specified instance</span><br><span class="line">    #   $EXISTING_STATE -- Whether the specified instance is running</span><br><span class="line"></span><br><span class="line">    iecho "confirmed $INSTANCE_ID exists."</span><br><span class="line">    iecho "      Current type: $EXISTING_TYPE"</span><br><span class="line">    iecho "      Current state code: $EXISTING_STATE"</span><br><span class="line"></span><br><span class="line">    # Are we trying to change the instance to the same type?</span><br><span class="line">    if [[ "$EXISTING_TYPE" == "$REQUESTED_TYPE" ]]; then</span><br><span class="line">        errecho "ERROR: Can't change instance type to the same type: $REQUESTED_TYPE."</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # Check if the instance is currently running.</span><br><span class="line">    # 16="running"</span><br><span class="line">    if [[ "$EXISTING_STATE" == "running" ]]; then</span><br><span class="line">        # If it is, we need to stop it.</span><br><span class="line">        # Do we have permission to stop it? </span><br><span class="line">        # If -f (FORCE) was set, we do.</span><br><span class="line">        # If not, we need to ask the user.</span><br><span class="line">        if [[ $FORCE == false ]]; then</span><br><span class="line">            while true; do</span><br><span class="line">                echo ""</span><br><span class="line">                echo "The instance $INSTANCE_ID is currently running. It must be stopped to change the type."</span><br><span class="line">                read -r -p "ARE YOU SURE YOU WANT TO STOP THE INSTANCE? (Y or N) " ANSWER</span><br><span class="line">                case $ANSWER in</span><br><span class="line">                    [yY]* )</span><br><span class="line">                        break;;</span><br><span class="line">                    [nN]* )</span><br><span class="line">                        echo "Aborting."</span><br><span class="line">                        exit;;</span><br><span class="line">                    * ) </span><br><span class="line">                        echo "Please answer Y or N."</span><br><span class="line">                        ;;</span><br><span class="line">                esac</span><br><span class="line">            done</span><br><span class="line">        else</span><br><span class="line">            iecho "Forcing stop of instance without prompt because of -f."</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">        # stop the instance</span><br><span class="line">        iecho -n "Attempting to stop instance $INSTANCE_ID..."</span><br><span class="line">        RESPONSE=$( aws ec2 stop-instances \</span><br><span class="line">                        --instance-ids "$INSTANCE_ID" )</span><br><span class="line"></span><br><span class="line">        if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">            echo "ERROR - AWS reports that it's unable to stop instance $INSTANCE_ID.\n$RESPONSE"</span><br><span class="line">            return 1</span><br><span class="line">        fi</span><br><span class="line">        iecho "request accepted."</span><br><span class="line">    else</span><br><span class="line">        iecho "Instance is not in running state, so not requesting a stop."</span><br><span class="line">    fi;</span><br><span class="line"></span><br><span class="line">    # Wait until stopped.</span><br><span class="line">    iecho "Waiting for $INSTANCE_ID to report 'stopped' state..."</span><br><span class="line">    aws ec2 wait instance-stopped \</span><br><span class="line">        --instance-ids "$INSTANCE_ID"</span><br><span class="line">    if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">        echo "\nERROR - AWS reports that Wait command failed.\n$RESPONSE"</span><br><span class="line">        return 1</span><br><span class="line">    fi </span><br><span class="line">    iecho "stopped.\n"</span><br><span class="line"></span><br><span class="line">    # Change the type - command produces no output.</span><br><span class="line">    iecho "Attempting to change type from $EXISTING_TYPE to $REQUESTED_TYPE..."</span><br><span class="line">    RESPONSE=$(aws ec2 modify-instance-attribute \</span><br><span class="line">                   --instance-id "$INSTANCE_ID" \</span><br><span class="line">                   --instance-type "&#123;\"Value\":\"$REQUESTED_TYPE\"&#125;"</span><br><span class="line">              )</span><br><span class="line">    if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">        errecho "ERROR - AWS reports that it's unable to change the instance type for instance $INSTANCE_ID from $EXISTING_TYPE to $REQUESTED_TYPE.\n$RESPONSE"</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    iecho "changed.\n"</span><br><span class="line"></span><br><span class="line">    # Restart if asked</span><br><span class="line">    if [[ "$RESTART" == "true" ]]; then</span><br><span class="line"></span><br><span class="line">        iecho "Requesting to restart instance $INSTANCE_ID..."</span><br><span class="line">        RESPONSE=$(aws ec2 start-instances \</span><br><span class="line">                        --instance-ids "$INSTANCE_ID" \</span><br><span class="line">                   )</span><br><span class="line">        if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">            errecho "ERROR - AWS reports that it's unable to restart instance $INSTANCE_ID.\n$RESPONSE"</span><br><span class="line">            return 1</span><br><span class="line">        fi</span><br><span class="line">        iecho "started.\n"</span><br><span class="line">        iecho "Waiting for instance $INSTANCE_ID to report 'running' state..."</span><br><span class="line">        RESPONSE=$(aws ec2 wait instance-running \</span><br><span class="line">                       --instance-ids "$INSTANCE_ID" )</span><br><span class="line">        if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">            errecho "ERROR - AWS reports that Wait command failed.\n$RESPONSE"</span><br><span class="line">            return 1</span><br><span class="line">        fi </span><br><span class="line">        </span><br><span class="line">        iecho "running.\n"</span><br><span class="line">        </span><br><span class="line">    else</span><br><span class="line">        iecho "Restart was not requested with -r.\n"</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="test-change-ec2-instance-type-sh"><a href="#test-change-ec2-instance-type-sh" class="headerlink" title="test_change_ec2_instance_type.sh"></a>test_change_ec2_instance_type.sh</h3><p>脚本文件 change_ec2_instance_type_test.sh 会测试 change_ec2_instance_type 函数的各种代码路径。如果测试脚本中的所有步骤都正确完成，测试脚本将会删除它创建的所有资源。</p><p>您可以使用以下参数运行该测试脚本：</p><ul><li>-v -（开关）每个测试在运行时都会显示通过/失败状态。默认情况下，测试以静默方式运行，输出仅包含最终的总体通过/失败状态。</li><li>-i -（开关）脚本会在每个测试后暂停，以便您能查看每个步骤的中间结果。让您能够使用 Amazon EC2 控制台检查实例的当前状态。您在系统提示符处按 Enter 后，脚本才会继续执行下一步。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.</span><br><span class="line"># This file is licensed under the Apache License, Version 2.0 (the &quot;License&quot;).</span><br><span class="line">#</span><br><span class="line"># You may not use this file except in compliance with the License. A copy of</span><br><span class="line"># the License is located at http://aws.amazon.com/apache2.0/.</span><br><span class="line">#</span><br><span class="line"># This file is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR</span><br><span class="line"># CONDITIONS OF ANY KIND, either express or implied. See the License for the</span><br><span class="line"># specific language governing permissions and limitations under the License.</span><br><span class="line">###############################################################################</span><br><span class="line"></span><br><span class="line">source ./awsdocs_general.sh</span><br><span class="line">source ./change_ec2_instance_type.sh</span><br><span class="line"></span><br><span class="line">function usage &#123;</span><br><span class="line">    echo &quot;This script tests the change_ec2_instance_type function by calling the&quot;</span><br><span class="line">    echo &quot;function in a variety of ways and checking the output. It converts the&quot;</span><br><span class="line">    echo &quot;instance between types t2.nano and t2.micro.&quot;</span><br><span class="line">    echo &quot;&quot;</span><br><span class="line">    echo &quot;Parameters:&quot;</span><br><span class="line">    echo &quot;&quot;</span><br><span class="line">    echo &quot;  -v  Verbose. Shows diagnostic messages about the tests as they run.&quot;</span><br><span class="line">    echo &quot;  -i  Interactive. Pauses the script between steps so you can browse&quot;</span><br><span class="line">    echo &quot;      the results in the AWS Management Console as they occur.&quot;</span><br><span class="line">    echo &quot;&quot;</span><br><span class="line">    echo &quot;IMPORTANT: Running this test script creates an Amazon EC2 instance in&quot;</span><br><span class="line">    echo &quot;   your Amazon account that can incur charges. It is your responsibility&quot;</span><br><span class="line">    echo &quot;   to ensure that no resources are left in your account after the script&quot;</span><br><span class="line">    echo &quot;   completes. If an error occurs during the operation of the script,this&quot;</span><br><span class="line">    echo &quot;   instance can remain. Check for the instance and delete it manually to&quot;</span><br><span class="line">    echo &quot;   avoid charges.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Set default values.</span><br><span class="line">INTERACTIVE=false</span><br><span class="line"></span><br><span class="line"># Retrieve the calling parameters.</span><br><span class="line">while getopts &quot;ivh&quot; OPTION; do</span><br><span class="line">    case &quot;$&#123;OPTION&#125;&quot;</span><br><span class="line">    in</span><br><span class="line">        i)</span><br><span class="line">            INTERACTIVE=true</span><br><span class="line">            VERBOSE=true</span><br><span class="line">            ;;</span><br><span class="line">        v)</span><br><span class="line">            VERBOSE=true</span><br><span class="line">            ;;</span><br><span class="line">        h)</span><br><span class="line">            usage</span><br><span class="line">            return 0</span><br><span class="line">            ;;</span><br><span class="line">        \?)</span><br><span class="line">            echo &quot;Invalid parameter.&quot;</span><br><span class="line">            usage</span><br><span class="line">            return 1</span><br><span class="line">            ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">if [ &quot;$VERBOSE&quot; == &quot;true&quot; ]; then iecho &quot;Tests running in verbose mode.&quot;; fi</span><br><span class="line">if [ &quot;$INTERACTIVE&quot; == &quot;true&quot; ]; then iecho &quot;Tests running in interactive mode.&quot;; fi</span><br><span class="line"></span><br><span class="line">iecho &quot;&quot;</span><br><span class="line">iecho &quot;***************SETUP STEPS******************&quot;</span><br><span class="line">    # First, get the AMI ID for the one running the latest Amazon Linix 2.</span><br><span class="line">    iecho -n &quot;Retrieving the AMI ID for the latest Amazon Linux 2 AMI...&quot;</span><br><span class="line">    AMI_ID=$(aws ec2 describe-images \</span><br><span class="line">                --owners &apos;amazon&apos; \</span><br><span class="line">                --filters &apos;Name=name,Values=amzn2-ami-hvm-2.0.????????-x86_64-gp2&apos; &apos;Name=state,Values=available&apos; \</span><br><span class="line">                --query &apos;sort_by(Images, &amp;CreationDate)[-1].[ImageId]&apos; \</span><br><span class="line">                --output &apos;text&apos;)</span><br><span class="line">    if [ $&#123;?&#125; -ne 0 ]; then</span><br><span class="line">        echo &quot;ERROR: Unable to retrieve latest Amazon Linux 2 AMI ID: $AMI_ID&quot;</span><br><span class="line">        echo &quot;Tests canceled.&quot;</span><br><span class="line">        return 1</span><br><span class="line">    else</span><br><span class="line">        iecho &quot;retrieved $AMI_ID.&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # Now launch the instance as a t2.micro and capture its instance ID.</span><br><span class="line">    # All other instance settings are left to default.</span><br><span class="line">    iecho -n &quot;Requesting new Amazon EC2 instance of type t2.micro...&quot;</span><br><span class="line">    EC2_INSTANCE_ID=$(aws ec2 run-instances \</span><br><span class="line">                        --image-id &quot;$AMI_ID&quot; \</span><br><span class="line">                        --instance-type t2.micro \</span><br><span class="line">                        --query &apos;Instances[0].InstanceId&apos; \</span><br><span class="line">                        --output text)</span><br><span class="line">    if [ $&#123;?&#125; -ne 0 ]; then</span><br><span class="line">        echo &quot;ERROR: Unable to launch EC2 instance: $EC2_INSTANCE_ID&quot;</span><br><span class="line">        echo &quot;Tests canceled.&quot;</span><br><span class="line">        return 1</span><br><span class="line">    else</span><br><span class="line">        iecho &quot;launched. ID:$EC2_INSTANCE_ID&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    iecho -n &quot;Waiting for instance $EC2_INSTANCE_ID to exist...&quot;</span><br><span class="line">    aws ec2 wait instance-exists \</span><br><span class="line">        --instance-id &quot;$EC2_INSTANCE_ID&quot;</span><br><span class="line">    iecho &quot;confirmed.&quot;</span><br><span class="line"></span><br><span class="line">iecho &quot;***************END OF SETUP*****************&quot;</span><br><span class="line">iecho &quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">run_test &quot;1. Missing mandatory -i parameter&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type&quot; \</span><br><span class="line">         1 \</span><br><span class="line">         &quot;ERROR: You must provide an instance id.&quot;</span><br><span class="line"></span><br><span class="line">run_test &quot;2. Missing mandatory -t parameter&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type -i abc&quot; \</span><br><span class="line">         1 \</span><br><span class="line">         &quot;ERROR: You must provide an instance type.&quot;</span><br><span class="line"></span><br><span class="line">run_test &quot;3. Using an instance ID that doesn&apos;t exist&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type -i abc -t t2.micro&quot; \</span><br><span class="line">         1 \</span><br><span class="line">         &quot;ERROR: I can&apos;t find the instance.&quot;</span><br><span class="line"></span><br><span class="line"># Test changing to the same type. We can do this while the instance is starting up.</span><br><span class="line">run_test &quot;4. Trying to change to same type&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type -v -i $EC2_INSTANCE_ID -t t2.micro&quot; \</span><br><span class="line">         1 \</span><br><span class="line">         &quot;ERROR: Can&apos;t change instance type to the same type.&quot;</span><br><span class="line"></span><br><span class="line">iecho -n &quot;Waiting for instance $EC2_INSTANCE_ID to reach running state...&quot;</span><br><span class="line">RESPONSE=$(aws ec2 wait instance-running --instance-id &quot;$EC2_INSTANCE_ID&quot;)</span><br><span class="line">if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">    errecho &quot;\nERROR: AWS reports that the Wait command failed.\n$RESPONSE&quot;</span><br><span class="line">    return 1</span><br><span class="line">fi </span><br><span class="line">iecho &quot;running.&quot;</span><br><span class="line"></span><br><span class="line"># Test changing to t2.micro without -r : should still be in stopped state.</span><br><span class="line">run_test &quot;5. Changing to type t2.nano without restart&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type -f -i $EC2_INSTANCE_ID -t t2.nano&quot; \</span><br><span class="line">         0</span><br><span class="line"></span><br><span class="line">         # Validate result was &quot;t2.nano&quot; and that it&apos;s in &quot;stopped&quot; state.</span><br><span class="line">         get_instance_info &quot;$EC2_INSTANCE_ID&quot;</span><br><span class="line">         if [ &quot;$EXISTING_TYPE&quot; != &quot;t2.nano&quot; ]; then</span><br><span class="line">             test_failed &quot;Unable to validate change. Should be t2.nano. Found $EXISTING_TYPE.&quot;</span><br><span class="line">         fi</span><br><span class="line">         if [ &quot;$EXISTING_STATE&quot; != &quot;stopped&quot; ]; then</span><br><span class="line">             test_failed &quot;Unable to validate state. Should be stopped. Found $EXISTING_STATE.&quot;</span><br><span class="line">         fi</span><br><span class="line"></span><br><span class="line"># Test changing back to t2.micro with -r. Should now be in running state</span><br><span class="line">run_test &quot;6. Changing to type t2.micro with restart&quot; \</span><br><span class="line">         &quot;change_ec2_instance_type -f -r -i $EC2_INSTANCE_ID -t t2.micro&quot; \</span><br><span class="line">         0</span><br><span class="line"></span><br><span class="line">         # Validate result was &quot;t2.micro&quot; and that it&apos;s in &quot;running&quot; state.</span><br><span class="line">         get_instance_info &quot;$EC2_INSTANCE_ID&quot;</span><br><span class="line">         if [ &quot;$EXISTING_TYPE&quot; != &quot;t2.micro&quot; ]; then</span><br><span class="line">             test_failed &quot;Unable to validate change. Should be t2.micro. Found $EXISTING_TYPE.&quot;</span><br><span class="line">         fi</span><br><span class="line">         if [ &quot;$EXISTING_STATE&quot; != &quot;running&quot; ]; then</span><br><span class="line">             test_failed &quot;Unable to validate state. Should be running. Found $EXISTING_STATE.&quot;</span><br><span class="line">         fi</span><br><span class="line"></span><br><span class="line">iecho &quot;&quot;</span><br><span class="line">iecho &quot;*************TEAR DOWN STEPS****************&quot;</span><br><span class="line">    iecho -n &quot;Requesting termination of instance $EC2_INSTANCE_ID...&quot;</span><br><span class="line">    # Delete and terminate the instance.</span><br><span class="line">    RESPONSE=$(aws ec2 terminate-instances \</span><br><span class="line">                        --instance-ids &quot;$EC2_INSTANCE_ID&quot;</span><br><span class="line">              )</span><br><span class="line">    if [ $&#123;?&#125; -ne 0 ]; then</span><br><span class="line">        errecho &quot;**** ERROR ****&quot;</span><br><span class="line">        errecho &quot;AWS reported a failure to terminate EC2 instance: $EC2_INSTANCE_ID&quot;</span><br><span class="line">        errecho &quot;You must terminate the instance using the AWS Management Console&quot;</span><br><span class="line">        errecho &quot;or CLI commands. Failure to terminate the instance can result in&quot;</span><br><span class="line">        errecho &quot;charges to your AWS account.\n&quot;</span><br><span class="line">    else</span><br><span class="line">        iecho &quot;request accepted.&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    iecho -n &quot;Waiting for instance $EC2_INSTANCE_ID to terminate...&quot;</span><br><span class="line">    aws ec2 wait instance-terminated \</span><br><span class="line">        --instance-id &quot;$EC2_INSTANCE_ID&quot;</span><br><span class="line">    iecho &quot;confirmed.&quot;</span><br><span class="line">    if [[ $&#123;?&#125; -ne 0 ]]; then</span><br><span class="line">        errecho &quot;ERROR - AWS reports that Wait command failed.&quot;</span><br><span class="line">        errecho &quot;You must ensure that the instance terminated successfully yourself using the&quot;</span><br><span class="line">        errecho &quot;AWS Management Console or CLI commands. Failure to terminate the instance can&quot; </span><br><span class="line">        errecho &quot;result in charges to your AWS account.\n&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iecho &quot;************END OF TEAR DOWN****************&quot;</span><br><span class="line">iecho &quot;&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;Tests completed successfully.&quot;</span><br></pre></td></tr></table></figure><h3 id="awsdocs-general-sh"><a href="#awsdocs-general-sh" class="headerlink" title="awsdocs_general.sh"></a>awsdocs_general.sh</h3><p>脚本文件 awsdocs_general.sh 中包含了在 AWS CLI 的高级示例中使用的通用函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line">###############################################################################</span><br><span class="line"># Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.</span><br><span class="line"># This file is licensed under the Apache License, Version 2.0 (the &quot;License&quot;).</span><br><span class="line">#</span><br><span class="line"># You may not use this file except in compliance with the License. A copy of</span><br><span class="line"># the License is located at http://aws.amazon.com/apache2.0/.</span><br><span class="line">#</span><br><span class="line"># This file is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR</span><br><span class="line"># CONDITIONS OF ANY KIND, either express or implied. See the License for the</span><br><span class="line"># specific language governing permissions and limitations under the License.</span><br><span class="line">###############################################################################</span><br><span class="line">#</span><br><span class="line"># This script contains general-purpose functions that are used throughout </span><br><span class="line"># the AWS Command Line Interface (AWS CLI) code examples that are maintained</span><br><span class="line"># in the repo at https://github.com/awsdocs/aws-doc-sdk-examples.</span><br><span class="line">#</span><br><span class="line"># They are intended to abstract functionality that is required for the tests</span><br><span class="line"># to work without cluttering up the code. The intent is to ensure that the </span><br><span class="line"># purpose of the code is clear.</span><br><span class="line"></span><br><span class="line"># Set global defaults:</span><br><span class="line">VERBOSE=false</span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># function run_test</span><br><span class="line">#</span><br><span class="line"># This function is used to perform a command and compare its output to both</span><br><span class="line"># the expected error code and the expected output string. If there isn&apos;t a </span><br><span class="line"># match, then the function invokes the test_failed function.</span><br><span class="line">###############################################################################</span><br><span class="line">function run_test &#123;</span><br><span class="line">    local DESCRIPTION COMMAND EXPECTED_ERR_CODE EXPECTED_OUTPUT RESPONSE</span><br><span class="line">    </span><br><span class="line">    DESCRIPTION=&quot;$1&quot;</span><br><span class="line">    COMMAND=&quot;$2&quot;</span><br><span class="line">    EXPECTED_ERR_CODE=&quot;$3&quot;</span><br><span class="line">    if [[ -z &quot;$4&quot; ]]; then EXPECTED_OUTPUT=&quot;$4&quot;; else EXPECTED_OUTPUT=&quot;&quot;; fi</span><br><span class="line">    </span><br><span class="line">    iecho -n &quot;Running test: $DESCRIPTION...&quot;</span><br><span class="line">    RESPONSE=&quot;$($COMMAND)&quot;</span><br><span class="line">    ERR=&quot;$&#123;?&#125;&quot;</span><br><span class="line"></span><br><span class="line">    # Check to see if we got the expected error code.</span><br><span class="line">    if [[ &quot;$EXPECTED_ERR_CODE&quot; -ne &quot;$ERR&quot; ]]; then</span><br><span class="line">        test_failed &quot;The test \&quot;$DESCRIPTION\&quot; returned an unexpected error code: $ERR&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # Now check the error message, if we provided other than &quot;&quot;.</span><br><span class="line">    if [[ -n &quot;$EXPECTED_OUTPUT&quot; ]]; then</span><br><span class="line">        MATCH=$(echo &quot;$RESPONSE&quot; | grep &quot;$EXPECTED_OUTPUT&quot;)</span><br><span class="line">        # If there was no match (it&apos;s an empty string), then fail.</span><br><span class="line">        if [[ -z &quot;$MATCH&quot; ]]; then</span><br><span class="line">            test_failed &quot;The test \&quot;$DESCRIPTION\&quot; returned an unexpected output: $RESPONSE&quot;</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    iecho &quot;OK&quot;</span><br><span class="line">    ipause</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># function test_failed</span><br><span class="line">#</span><br><span class="line"># This function is used to terminate a failed test and to warn the customer</span><br><span class="line"># about possible undeleted resources that could incur costs to their account.</span><br><span class="line">###############################################################################</span><br><span class="line"></span><br><span class="line">function test_failed &#123;</span><br><span class="line">    </span><br><span class="line">    errecho &quot;&quot;</span><br><span class="line">    errecho &quot;===TEST FAILED===&quot;</span><br><span class="line">    errecho &quot;$@&quot;</span><br><span class="line">    errecho &quot;&quot;</span><br><span class="line">    errecho &quot;    One or more of the tests failed to complete successfully. This means that&quot;</span><br><span class="line">    errecho &quot;    any tests after the one that failed didn&apos;t run and might have left resources&quot;</span><br><span class="line">    errecho &quot;    still active in your account.&quot;</span><br><span class="line">    errecho &quot;&quot;</span><br><span class="line">    errecho &quot;IMPORTANT:&quot;</span><br><span class="line">    errecho &quot;    Resources created by this script can incur charges to your AWS account. If the&quot;</span><br><span class="line">    errecho &quot;    script didn&apos;t complete successfully, then you must review and manually delete&quot;</span><br><span class="line">    errecho &quot;    any resources created by this script that were not automatically removed.&quot;</span><br><span class="line">    errecho &quot;&quot;</span><br><span class="line">    exit 1 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># function errecho</span><br><span class="line">#</span><br><span class="line"># This function outputs everything sent to it to STDERR (standard error output).</span><br><span class="line">###############################################################################</span><br><span class="line">function errecho &#123;</span><br><span class="line">    printf &quot;%s\n&quot; &quot;$*&quot; 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># function iecho</span><br><span class="line">#</span><br><span class="line"># This function enables the script to display the specified text only if </span><br><span class="line"># the global variable $VERBOSE is set to true.</span><br><span class="line">###############################################################################</span><br><span class="line">function iecho &#123;</span><br><span class="line">    if [[ $VERBOSE == true ]]; then</span><br><span class="line">        echo &quot;$@&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###############################################################################</span><br><span class="line"># function ipause</span><br><span class="line">#</span><br><span class="line"># This function enables the script to pause after each command if interactive</span><br><span class="line"># mode is set (by including -i on the script invocation command).</span><br><span class="line">###############################################################################</span><br><span class="line">function ipause &#123;</span><br><span class="line">    if [[ $INTERACTIVE == true ]]; then</span><br><span class="line">        read -r -p &quot;Press ENTER to continue...&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Initialize the shell&apos;s RANDOM variable.</span><br><span class="line">RANDOM=$$</span><br><span class="line">###############################################################################</span><br><span class="line"># function generate_random_name</span><br><span class="line">#</span><br><span class="line"># This function generates a random file name with using the specified root,</span><br><span class="line"># followed by 4 groups that each have 4 digits.</span><br><span class="line"># The default root name is &quot;test&quot;.</span><br><span class="line">###############################################################################</span><br><span class="line">function generate_random_name &#123;</span><br><span class="line"></span><br><span class="line">    ROOTNAME=&quot;test&quot;</span><br><span class="line">    if [[ -n $1 ]]; then</span><br><span class="line">        ROOTNAME=$1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # Initialize the FILENAME variable</span><br><span class="line">    FILENAME=&quot;$ROOTNAME&quot;</span><br><span class="line">    # Configure random number generator to issue numbers between 1000 and 9999, </span><br><span class="line">    # inclusive.</span><br><span class="line">    DIFF=$((9999-1000+1))</span><br><span class="line"></span><br><span class="line">    for _ in &#123;1..4&#125;</span><br><span class="line">    do</span><br><span class="line">        rnd=$(($((RANDOM%DIFF))+X))</span><br><span class="line">        # Make sure that the number is 4 digits long.</span><br><span class="line">        while [ &quot;$&#123;#rnd&#125;&quot; -lt 4 ]; do rnd=&quot;0$rnd&quot;; done</span><br><span class="line">        FILENAME+=&quot;-$rnd&quot;</span><br><span class="line">    done</span><br><span class="line">    echo $FILENAME</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS CLI </tag>
            
            <tag> AWS EC2 </tag>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS CLI(4)示例</title>
      <link href="2020/11/19/AWS-CLI-4-%E7%A4%BA%E4%BE%8B/"/>
      <url>2020/11/19/AWS-CLI-4-%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p>描述: 将 Amazon 服务 与 AWS CLI 结合使用</p><a id="more"></a><p>演示一些常见命令</p><h3 id="DynamoDB"><a href="#DynamoDB" class="headerlink" title="DynamoDB"></a>DynamoDB</h3><h4 id="创建table"><a href="#创建table" class="headerlink" title="创建table"></a>创建table</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ aws dynamodb create-table \</span><br><span class="line">    --table-name MusicCollection \</span><br><span class="line">    --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S \</span><br><span class="line">    --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE \</span><br><span class="line">    --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1</span><br></pre></td></tr></table></figure><h4 id="插入项目"><a href="#插入项目" class="headerlink" title="插入项目"></a>插入项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ aws dynamodb put-item \</span><br><span class="line">    --table-name MusicCollection \</span><br><span class="line">    --item &apos;&#123;</span><br><span class="line">        &quot;Artist&quot;: &#123;&quot;S&quot;: &quot;No One You Know&quot;&#125;,</span><br><span class="line">        &quot;SongTitle&quot;: &#123;&quot;S&quot;: &quot;Call Me Today&quot;&#125; ,</span><br><span class="line">        &quot;AlbumTitle&quot;: &#123;&quot;S&quot;: &quot;Somewhat Famous&quot;&#125; </span><br><span class="line">      &#125;&apos; \</span><br><span class="line">    --return-consumed-capacity TOTAL</span><br><span class="line">&#123;</span><br><span class="line">    &quot;ConsumedCapacity&quot;: &#123;</span><br><span class="line">        &quot;CapacityUnits&quot;: 1.0,</span><br><span class="line">        &quot;TableName&quot;: &quot;MusicCollection&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ aws dynamodb put-item \</span><br><span class="line">    --table-name MusicCollection \</span><br><span class="line">    --item &apos;&#123; </span><br><span class="line">        &quot;Artist&quot;: &#123;&quot;S&quot;: &quot;Acme Band&quot;&#125;, </span><br><span class="line">        &quot;SongTitle&quot;: &#123;&quot;S&quot;: &quot;Happy Day&quot;&#125; , </span><br><span class="line">        &quot;AlbumTitle&quot;: &#123;&quot;S&quot;: &quot;Songs About Life&quot;&#125; </span><br><span class="line">      &#125;&apos; \</span><br><span class="line">    --return-consumed-capacity TOTAL</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;ConsumedCapacity&quot;: &#123;</span><br><span class="line">        &quot;CapacityUnits&quot;: 1.0,</span><br><span class="line">        &quot;TableName&quot;: &quot;MusicCollection&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用json文件"><a href="#使用json文件" class="headerlink" title="使用json文件"></a>使用json文件</h4><p>json文件<code>expression-attributes.json</code>的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;:v1&quot;: &#123;&quot;S&quot;: &quot;No One You Know&quot;&#125;,</span><br><span class="line">  &quot;:v2&quot;: &#123;&quot;S&quot;: &quot;Call Me Today&quot;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ aws dynamodb query --table-name MusicCollection \</span><br><span class="line">    --key-condition-expression &quot;Artist = :v1 AND SongTitle = :v2&quot; \</span><br><span class="line">    --expression-attribute-values file://expression-attributes.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;Count&quot;: 1,</span><br><span class="line">    &quot;Items&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;AlbumTitle&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;Somewhat Famous&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;SongTitle&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;Call Me Today&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Artist&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;No One You Know&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ScannedCount&quot;: 1,</span><br><span class="line">    &quot;ConsumedCapacity&quot;: null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="EC2"><a href="#EC2" class="headerlink" title="EC2"></a>EC2</h3><h4 id="创建keypair"><a href="#创建keypair" class="headerlink" title="创建keypair"></a>创建keypair</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 create-key-pair --key-name MyKeyPair --query &apos;KeyMaterial&apos; --output text &gt; MyKeyPair.pem</span><br></pre></td></tr></table></figure><h4 id="创建安全组"><a href="#创建安全组" class="headerlink" title="创建安全组"></a>创建安全组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 create-security-group --group-name my-sg --description &quot;My security group&quot; --vpc-id vpc-1a2b3c4d</span><br><span class="line">&#123;</span><br><span class="line">    &quot;GroupId&quot;: &quot;sg-903004f8&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加入站规则"><a href="#添加入站规则" class="headerlink" title="添加入站规则"></a>添加入站规则</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 authorize-security-group-ingress --group-id sg-903004f8 --protocol tcp --port 22 --cidr 203.0.113.0/24</span><br></pre></td></tr></table></figure><h4 id="创建EC2"><a href="#创建EC2" class="headerlink" title="创建EC2"></a>创建EC2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 run-instances --image-id ami-xxxxxxxx --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids sg-903004f8 --subnet-id subnet-6e7f829e</span><br></pre></td></tr></table></figure><h4 id="列出EC2"><a href="#列出EC2" class="headerlink" title="列出EC2"></a>列出EC2</h4><p>列出类型为t2.micro的实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-instances --filters &quot;Name=instance-type,Values=t2.micro&quot; --query &quot;Reservations[].Instances[].InstanceId&quot;</span><br></pre></td></tr></table></figure><h3 id="IAM"><a href="#IAM" class="headerlink" title="IAM"></a>IAM</h3><h4 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h4><p>使用 <code>create-group</code> 命令创建组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam create-group --group-name MyIamGroup</span><br><span class="line">&#123;</span><br><span class="line">    &quot;Group&quot;: &#123;</span><br><span class="line">        &quot;GroupName&quot;: &quot;MyIamGroup&quot;,</span><br><span class="line">        &quot;CreateDate&quot;: &quot;2018-12-14T03:03:52.834Z&quot;,</span><br><span class="line">        &quot;GroupId&quot;: &quot;AGPAJNUJ2W4IJVEXAMPLE&quot;,</span><br><span class="line">        &quot;Arn&quot;: &quot;arn:aws-cn:iam::123456789012:group/MyIamGroup&quot;,</span><br><span class="line">        &quot;Path&quot;: &quot;/&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>使用 <code>create-user</code> 命令创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam create-user --user-name MyUser</span><br><span class="line">&#123;</span><br><span class="line">    &quot;User&quot;: &#123;</span><br><span class="line">        &quot;UserName&quot;: &quot;MyUser&quot;,</span><br><span class="line">        &quot;Path&quot;: &quot;/&quot;,</span><br><span class="line">        &quot;CreateDate&quot;: &quot;2018-12-14T03:13:02.581Z&quot;,</span><br><span class="line">        &quot;UserId&quot;: &quot;AIDAJY2PE5XUZ4EXAMPLE&quot;,</span><br><span class="line">        &quot;Arn&quot;: &quot;arn:aws-cn:iam::123456789012:user/MyUser&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="将用户添加到组中"><a href="#将用户添加到组中" class="headerlink" title="将用户添加到组中"></a>将用户添加到组中</h4><p>使用 <code>add-user-to-group</code> 命令将用户添加到组中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam add-user-to-group --user-name MyUser --group-name MyIamGroup</span><br></pre></td></tr></table></figure><h4 id="将-IAM-托管策略附加到-IAM-用户"><a href="#将-IAM-托管策略附加到-IAM-用户" class="headerlink" title="将 IAM 托管策略附加到 IAM 用户"></a>将 IAM 托管策略附加到 IAM 用户</h4><ol><li><p>确定要附加的策略的 Amazon 资源名称 (ARN)。以下命令使用 <code>list-policies</code> 查找具有名称 <code>PowerUserAccess</code> 的策略的 ARN。然后，它会将该 ARN 存储在环境变量中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ export POLICYARN=$(aws iam list-policies --query &apos;Policies[?PolicyName==`PowerUserAccess`].&#123;ARN:Arn&#125;&apos; --output text)       ~</span><br><span class="line">$ echo $POLICYARN</span><br><span class="line">arn:aws-cn:iam::aws:policy/PowerUserAccess</span><br></pre></td></tr></table></figure></li><li><p>要附加策略，请使用 <code>attach-user-policy</code> 命令，并引用存放策略 ARN 的环境变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam attach-user-policy --user-name MyUser --policy-arn $POLICYARN</span><br></pre></td></tr></table></figure></li><li><p>通过运行 <code>list-attached-user-policies</code> 命令验证策略已附加到此用户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam list-attached-user-policies --user-name MyUser</span><br><span class="line">&#123;</span><br><span class="line">    &quot;AttachedPolicies&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;PolicyName&quot;: &quot;PowerUserAccess&quot;,</span><br><span class="line">            &quot;PolicyArn&quot;: &quot;arn:aws-cn:iam::aws:policy/PowerUserAccess&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="为-IAM-用户设置初始密码"><a href="#为-IAM-用户设置初始密码" class="headerlink" title="为 IAM 用户设置初始密码"></a>为 IAM 用户设置初始密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam create-login-profile --user-name MyUser --password My!User1Login8P@ssword --password-reset-required</span><br><span class="line">&#123;</span><br><span class="line">    &quot;LoginProfile&quot;: &#123;</span><br><span class="line">        &quot;UserName&quot;: &quot;MyUser&quot;,</span><br><span class="line">        &quot;CreateDate&quot;: &quot;2018-12-14T17:27:18Z&quot;,</span><br><span class="line">        &quot;PasswordResetRequired&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更改-IAM-用户的密码"><a href="#更改-IAM-用户的密码" class="headerlink" title="更改 IAM 用户的密码"></a>更改 IAM 用户的密码</h4><p>可以使用 <code>update-login-profile</code> 命令更改 IAM 用户的密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam update-login-profile --user-name MyUser --password My!User1ADifferentP@ssword</span><br></pre></td></tr></table></figure><h4 id="创建访问密钥"><a href="#创建访问密钥" class="headerlink" title="创建访问密钥"></a>创建访问密钥</h4><p>使用 <code>create-access-key</code> 命令为 IAM 用户创建访问密钥。访问密钥是一组安全凭证，由访问密钥 ID 和私有密钥组成。</p><p>IAM 用户一次只能创建两个访问密钥。如果您尝试创建第三组，则命令返回 <code>LimitExceeded</code> 错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam create-access-key --user-name MyUser</span><br><span class="line">&#123;</span><br><span class="line">    &quot;AccessKey&quot;: &#123;</span><br><span class="line">        &quot;UserName&quot;: &quot;MyUser&quot;,</span><br><span class="line">        &quot;AccessKeyId&quot;: &quot;AKIAIOSFODNN7EXAMPLE&quot;,</span><br><span class="line">        &quot;Status&quot;: &quot;Active&quot;,</span><br><span class="line">        &quot;SecretAccessKey&quot;: &quot;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&quot;,</span><br><span class="line">        &quot;CreateDate&quot;: &quot;2018-12-14T17:34:16Z&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除访问密钥"><a href="#删除访问密钥" class="headerlink" title="删除访问密钥"></a>删除访问密钥</h4><p>使用 <code>delete-access-key</code> 命令为 IAM 用户删除访问密钥。使用访问密钥 ID 指定要删除的访问密钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws iam delete-access-key --user-name MyUser --access-key-id AKIAIOSFODNN7EXAMPLE</span><br></pre></td></tr></table></figure><h3 id="S3"><a href="#S3" class="headerlink" title="S3"></a>S3</h3><h4 id="创建桶"><a href="#创建桶" class="headerlink" title="创建桶"></a>创建桶</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3 mb s3://bucket-name</span><br></pre></td></tr></table></figure><h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3 cp filename.txt s3://bucket-name</span><br><span class="line">$ aws s3 cp s3://bucket-name/filename.txt ./</span><br><span class="line"></span><br><span class="line"># 使用 cat 文本编辑器，将文本“hello world”流式传输到 s3://bucket-name/filename.txt 文件</span><br><span class="line">$ cat &quot;hello world&quot; | aws s3 cp - s3://bucket-name/filename.txt</span><br><span class="line"></span><br><span class="line"># 将 s3://bucket-name/filename.txt 文件流式传输到 stdout，并将内容输出到控制台</span><br><span class="line">$ aws s3 cp s3://bucket-name/filename.txt -</span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line"># 将 s3://bucket-name/pre 的内容流式传输到 stdout，使用 bzip2 命令压缩文件，并将名为 key.bz2 的新压缩文件上传到 s3://bucket-name</span><br><span class="line">$ aws s3 cp s3://bucket-name/pre - | bzip2 --best | aws s3 cp - s3://bucket-name/key.bz2</span><br></pre></td></tr></table></figure><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 将对象从 s3://bucket-name/example 移动到 s3://my-bucket/</span><br><span class="line">$ aws s3 mv s3://bucket-name/example s3://my-bucket/</span><br><span class="line"></span><br><span class="line"># 将本地文件从当前工作目录移动到 Amazon S3 存储桶</span><br><span class="line">$ aws s3 mv filename.txt s3://bucket-name</span><br><span class="line"></span><br><span class="line"># 将文件从 Amazon S3 存储桶移动到当前工作目录，其中 ./ 指定当前的工作目录。</span><br><span class="line">$ aws s3 mv s3://bucket-name/filename.txt ./</span><br></pre></td></tr></table></figure><h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p>s3 sync 命令同步一个存储桶与一个目录中的内容，或者同步两个存储桶中的内容。通常，s3 sync 在源和目标之间复制缺失或过时的文件或对象。不过，您还可以提供 –delete 选项来从目标中删除源中不存在的文件或对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ aws s3 sync . s3://my-bucket/path</span><br><span class="line">upload: MySubdirectory\MyFile3.txt to s3://my-bucket/path/MySubdirectory/MyFile3.txt</span><br><span class="line">upload: MyFile2.txt to s3://my-bucket/path/MyFile2.txt</span><br><span class="line">upload: MyFile1.txt to s3://my-bucket/path/MyFile1.txt</span><br><span class="line"></span><br><span class="line"># Delete local file</span><br><span class="line">$ rm ./MyFile1.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Sync with deletion - object is deleted from bucket</span><br><span class="line">$ aws s3 sync . s3://my-bucket/path --delete</span><br><span class="line">delete: s3://my-bucket/path/MyFile1.txt</span><br><span class="line"></span><br><span class="line"># Delete object from bucket</span><br><span class="line">$ aws s3 rm s3://my-bucket/path/MySubdirectory/MyFile3.txt</span><br><span class="line">delete: s3://my-bucket/path/MySubdirectory/MyFile3.txt</span><br><span class="line"></span><br><span class="line"># Sync with deletion - local file is deleted</span><br><span class="line">$ aws s3 sync s3://my-bucket/path . --delete</span><br><span class="line">delete: MySubdirectory\MyFile3.txt</span><br><span class="line"></span><br><span class="line"># Sync with Infrequent Access storage class</span><br><span class="line">$ aws s3 sync . s3://my-bucket/path --storage-class STANDARD_IA</span><br></pre></td></tr></table></figure><h3 id="删除桶以及桶内所有有内容"><a href="#删除桶以及桶内所有有内容" class="headerlink" title="删除桶以及桶内所有有内容"></a>删除桶以及桶内所有有内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3 rb s3://bucket-name --force</span><br></pre></td></tr></table></figure><h3 id="删除桶中对象"><a href="#删除桶中对象" class="headerlink" title="删除桶中对象"></a>删除桶中对象</h3><p>从 s3://bucket-name/example 中删除所有对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3 rm s3://bucket-name/example</span><br></pre></td></tr></table></figure><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS CLI </tag>
            
            <tag> AWS CLI基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS CLI(3)query示例</title>
      <link href="2020/11/19/AWS-CLI-3-query%E7%A4%BA%E4%BE%8B/"/>
      <url>2020/11/19/AWS-CLI-3-query%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS CLI(3)query示例</p><a id="more"></a><p>以下通过官方示例进行<code>query</code>参数选项的演示。</p><p>描述了连接到单独 Amazon EC2 实例的两个 Amazon Elastic Block Store (Amazon EBS) 卷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes</span><br><span class="line">&#123;</span><br><span class="line">    &quot;Volumes&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;AvailabilityZone&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">            &quot;Attachments&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;AttachTime&quot;: &quot;2013-09-17T00:55:03.000Z&quot;,</span><br><span class="line">                    &quot;InstanceId&quot;: &quot;i-a071c394&quot;,</span><br><span class="line">                    &quot;VolumeId&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">                    &quot;State&quot;: &quot;attached&quot;,</span><br><span class="line">                    &quot;DeleteOnTermination&quot;: true,</span><br><span class="line">                    &quot;Device&quot;: &quot;/dev/sda1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;VolumeType&quot;: &quot;standard&quot;,</span><br><span class="line">            &quot;VolumeId&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">            &quot;State&quot;: &quot;in-use&quot;,</span><br><span class="line">            &quot;SnapshotId&quot;: &quot;snap-f23ec1c8&quot;,</span><br><span class="line">            &quot;CreateTime&quot;: &quot;2013-09-17T00:55:03.000Z&quot;,</span><br><span class="line">            &quot;Size&quot;: 30</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;AvailabilityZone&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">            &quot;Attachments&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;AttachTime&quot;: &quot;2013-09-18T20:26:16.000Z&quot;,</span><br><span class="line">                    &quot;InstanceId&quot;: &quot;i-4b41a37c&quot;,</span><br><span class="line">                    &quot;VolumeId&quot;: &quot;vol-2e410a47&quot;,</span><br><span class="line">                    &quot;State&quot;: &quot;attached&quot;,</span><br><span class="line">                    &quot;DeleteOnTermination&quot;: true,</span><br><span class="line">                    &quot;Device&quot;: &quot;/dev/sda1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;VolumeType&quot;: &quot;standard&quot;,</span><br><span class="line">            &quot;VolumeId&quot;: &quot;vol-2e410a47&quot;,</span><br><span class="line">            &quot;State&quot;: &quot;in-use&quot;,</span><br><span class="line">            &quot;SnapshotId&quot;: &quot;snap-708e8348&quot;,</span><br><span class="line">            &quot;CreateTime&quot;: &quot;2013-09-18T20:26:15.000Z&quot;,</span><br><span class="line">            &quot;Size&quot;: 8</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以选择使用以下命令从 Volumes 列表中仅显示第一个卷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes --query &apos;Volumes[0]&apos;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;AvailabilityZone&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">    &quot;Attachments&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;AttachTime&quot;: &quot;2013-09-17T00:55:03.000Z&quot;,</span><br><span class="line">            &quot;InstanceId&quot;: &quot;i-a071c394&quot;,</span><br><span class="line">            &quot;VolumeId&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">            &quot;State&quot;: &quot;attached&quot;,</span><br><span class="line">            &quot;DeleteOnTermination&quot;: true,</span><br><span class="line">            &quot;Device&quot;: &quot;/dev/sda1&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;VolumeType&quot;: &quot;standard&quot;,</span><br><span class="line">    &quot;VolumeId&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">    &quot;State&quot;: &quot;in-use&quot;,</span><br><span class="line">    &quot;SnapshotId&quot;: &quot;snap-f23ec1c8&quot;,</span><br><span class="line">    &quot;CreateTime&quot;: &quot;2013-09-17T00:55:03.000Z&quot;,</span><br><span class="line">    &quot;Size&quot;: 30</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以使用通配符表示法 [*]循环访问列表中的所有卷，同时筛选出每个卷中的三个元素：<code>VolumeId</code>、<code>AvailabilityZone</code> 和 <code>Size</code>。词典表示法要求您为每个 JSON 键提供一个别名，如：<code>{Alias1:JSONKey1,Alias2:JSONKey2}</code>。词典本身是无序的，因此，此种结构中的键/别名的顺序可能不一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes --query &apos;Volumes[*].&#123;ID:VolumeId,AZ:AvailabilityZone,Size:Size&#125;&apos;</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;AZ&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">        &quot;ID&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">        &quot;Size&quot;: 30</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;AZ&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">        &quot;ID&quot;: &quot;vol-2e410a47&quot;,</span><br><span class="line">        &quot;Size&quot;: 8</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>还可以将键链接起来（如 <code>key1.key2[0].key3</code>）来筛选深度嵌套在结构中的元素。以下示例利用 <code>Attachments[0].InstanceId</code> 键演示此功能，别名指定为简单的 InstanceId。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes --query &apos;Volumes[*].&#123;ID:VolumeId,InstanceId:Attachments[0].InstanceId,AZ:AvailabilityZone,Size:Size&#125;&apos;</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;InstanceId&quot;: &quot;i-a071c394&quot;,</span><br><span class="line">        &quot;AZ&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">        &quot;ID&quot;: &quot;vol-e11a5288&quot;,</span><br><span class="line">        &quot;Size&quot;: 30</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;InstanceId&quot;: &quot;i-4b41a37c&quot;,</span><br><span class="line">        &quot;AZ&quot;: &quot;us-west-2a&quot;,</span><br><span class="line">        &quot;ID&quot;: &quot;vol-2e410a47&quot;,</span><br><span class="line">        &quot;Size&quot;: 8</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="筛选结果"><a href="#筛选结果" class="headerlink" title="筛选结果"></a>筛选结果</h3><p>要按特定字段的值筛选结果，请使用 JMESPath “?” 运算符。以下示例查询仅输出 us-west-2a 可用区中的卷。并且在指定诸如以上 JMESPath 查询表达式中的 “us-west-2” 这样的文字值时，必须将该值放在反引号 (<code></code>) 中，以便使它能够正确读取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes \</span><br><span class="line">    --query &apos;Volumes[?AvailabilityZone==`us-west-2a`]&apos;</span><br></pre></td></tr></table></figure><h3 id="大于某值"><a href="#大于某值" class="headerlink" title="大于某值"></a>大于某值</h3><p>以下示例列出了 Amazon EC2 卷。该服务在 us-west-2a 可用区中生成所有附加的卷的列表。–query 参数进一步将输出限制为只有 Size 值大于 50 的卷，并且仅显示具有用户定义名称的指定字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes \</span><br><span class="line">    --filters &quot;Name=availability-zone,Values=us-west-2a&quot; &quot;Name=status,Values=attached&quot; \</span><br><span class="line">    --query &apos;Volumes[?Size &gt; `50`].&#123;Id:VolumeId,Size:Size,Type:VolumeType&#125;&apos;</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Id&quot;: &quot;vol-0be9bb0bf12345678&quot;,</span><br><span class="line">        &quot;Size&quot;: 80,</span><br><span class="line">        &quot;Type&quot;: &quot;gp2&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>以下示例显示如何列出在指定日期之后创建的所有快照，从而在输出中仅包括几个可用字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-snapshots --owner self \</span><br><span class="line">    --output json \</span><br><span class="line">    --query &apos;Snapshots[?StartTime&gt;=`2018-02-07`].&#123;Id:SnapshotId,VId:VolumeId,Size:VolumeSize&#125;&apos; \</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: &quot;snap-0effb42b7a1b2c3d4&quot;,</span><br><span class="line">        &quot;vid&quot;: &quot;vol-0be9bb0bf12345678&quot;,</span><br><span class="line">        &quot;Size&quot;: 8</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>使用 –query 参数按 CreationDate 使用<code>sort_by</code>对输出进行排序,使用<code>[-1]</code>从而仅选择最新的。最终，它显示这一个映像的 ImageId。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-images \</span><br><span class="line">    --owners amazon \</span><br><span class="line">    --filters &quot;Name=name,Values=amzn*gp2&quot; &quot;Name=virtualization-type,Values=hvm&quot; &quot;Name=root-device-type,Values=ebs&quot; \</span><br><span class="line">    --query &quot;sort_by(Images, &amp;CreationDate)[-1].ImageId&quot; \</span><br><span class="line">    --output text</span><br><span class="line">ami-00ced3122871a4921</span><br></pre></td></tr></table></figure><p>以下示例列出了您创建的五个最新 Amazon 系统映像 (AMI)，使用<code>reverse</code>从最新到最旧排序。</p><p>$ aws ec2 describe-images <br>    –owners self <br>    –query ‘reverse(sort_by(Images,&amp;CreationDate))[:5].{id:ImageId,date:CreationDate}’<br>[<br>    {<br>        “id”: “ami-0a1b2c3d4e5f60001”,<br>        “date”: “2018-11-28T17:16:38.000Z”<br>    },<br>    {<br>        “id”: “ami-0a1b2c3d4e5f60002”,<br>        “date”: “2018-09-15T13:51:22.000Z”<br>    },<br>    {<br>        “id”: “ami-0a1b2c3d4e5f60003”,<br>        “date”: “2018-08-19T10:22:45.000Z”<br>    },<br>    {<br>        “id”: “ami-0a1b2c3d4e5f60004”,<br>        “date”: “2018-05-03T12:04:02.000Z”<br>    },<br>    {<br>        “id”: “ami-0a1b2c3d4e5f60005”,<br>        “date”: “2017-12-13T17:16:38.000Z”<br>    }</p><p>]</p><h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><p>计算输出中的项目数量。以下示例通过使用 <code>length</code> 计算列表中的数量，以显示超过 1000 IOPS 的可用卷数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-volumes \</span><br><span class="line">    --filters &quot;Name=status,Values=available&quot; \</span><br><span class="line">    --query &apos;length(Volumes[?Iops &gt; `1000`])&apos;</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS CLI </tag>
            
            <tag> AWS CLI基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS CLI(2)使用</title>
      <link href="2020/11/18/AWS-CLI-2-%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/18/AWS-CLI-2-%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS CLI的使用过程中的常见操作</p><a id="more"></a><h3 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h3><p>首先当然是获取帮助啦，获取帮助用<code>help</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ aws help</span><br><span class="line">$ aws ec2 help</span><br><span class="line">$ aws ec2 describe-instances help</span><br></pre></td></tr></table></figure><h3 id="wait命令"><a href="#wait命令" class="headerlink" title="wait命令"></a>wait命令</h3><p><code>wait</code> 命令是一个特殊的命令，很多service都有<code>wait</code>这个子命令，<code>wait</code>之后还要接一个子命令。它也是一个承上启下的命令，尤其是在编写AWS脚本很常用。举个例子，在使用创建EC2的CLI命令后，希望在EC2的<code>status</code>处于<code>ok</code>状态之后告诉你EC2已经正常运行起来了（EC2有很多状态，启动状态initial，运行状态running，停止状态stopping）</p><p><code>wait</code> 命令是在command命令之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 wait instance-status-ok --instance-ids i-1234567890abcdef0</span><br></pre></td></tr></table></figure><p>并不是说有服务都有<code>wait</code>子命令,通常有状态变化或者需要一段时间才能完成的服务才有<code>wait</code>子命令，例如EC2和CloudFormation。</p><p><code>wait</code> 每15秒轮询一次，直到达到成功状态为止。40次失败检查后，将以255的返回码退出。</p><h3 id="CLI参数"><a href="#CLI参数" class="headerlink" title="CLI参数"></a>CLI参数</h3><p>CLI参数类型不多，但是也不算简单</p><ol><li><p>字符串<br>最简单的参数，<code>--instance-id</code>后面的参数就是字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-instance --instance-id i-1234567890abcdef0</span><br></pre></td></tr></table></figure><p>如果字符串参数包含空格，则字符串必须用引号引起来</p></li><li><p>时间戳参数</p><p>时间戳参数适用于类似<code>--start-time</code> 或 <code>--end-time</code>的参数选项，或者叫<code>date</code>参数.<br>可接受格式包括</p><ul><li><code>YYYY-MM-DDThh:mm:ss.sssTZD (UTC)</code>，例如，2014-10-01T20:30:00.000Z</li><li><code>YYYY-MM-DDThh:mm:ss.sssTZD（带偏移量</code>，例如，2014-10-01T12:30:00.000-08:00</li><li><code>YYYY-MM-DD</code>，例如，2014-10-01</li><li>以秒为单位的 Unix 时间，如 <code>1412195400</code>。表示自 1970 年 1 月 1 日午夜 (UTC) 以来经历的秒数。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-spot-price-history --start-time 2014-10-13T19:00:00Z</span><br></pre></td></tr></table></figure></li></ul></li><li><p>列表参数<br>以空格分隔的一个或多个字符串。如果任何字符串项目包含空格，则必须用引号括起该项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-spot-price-history --instance-types m1.xlarge m1.medium</span><br></pre></td></tr></table></figure></li><li><p>整数参数<br>同样很好理解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 describe-spot-price-history --max-items 5</span><br></pre></td></tr></table></figure></li><li><p>二进制参数<br>简单来说二进制参数就是一个非文本和数字类型的参数，例如，图片，音频和视频</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws s3api put-object --bucket my-bucket --key testimage.png --body /tmp/image.png</span><br></pre></td></tr></table></figure></li><li><p>映射参数<br>映射参数通常比较复杂，像这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ aws dynamodb get-item --table-name my-table --key &apos;&#123;&quot;id&quot;: &#123;&quot;N&quot;:&quot;1&quot;&#125;&#125;&apos;</span><br><span class="line"></span><br><span class="line">$ aws ec2 run-instances \</span><br><span class="line">    --image-id ami-12345678 \</span><br><span class="line">    --block-device-mappings &apos;[&#123;&quot;DeviceName&quot;:&quot;/dev/sdb&quot;,&quot;Ebs&quot;:&#123;&quot;VolumeSize&quot;:20,&quot;DeleteOnTermination&quot;:false,&quot;VolumeType&quot;:&quot;standard&quot;&#125;&#125;]&apos;</span><br></pre></td></tr></table></figure></li><li><p>文件参数<br>使用文件参数加载参数值有时候会很有用，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws sqs create-queue --queue-name my-queue --attributes file://attributes.json</span><br></pre></td></tr></table></figure><p><code>attributes.json</code>文件内容为，在文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;RedrivePolicy&quot;: &quot;&#123;\&quot;deadLetterTargetArn\&quot;:\&quot;arn:aws-cn:sqs:us-west-2:0123456789012:deadletter\&quot;, \&quot;maxReceiveCount\&quot;:\&quot;5\&quot;&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件参数还包括远程文件和二进制文件，具体看这：<a href="https://docs.amazonaws.cn/cli/latest/userguide/cli-usage-parameters-file.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cli-usage-parameters-file.html</a></p></li></ol><h3 id="控制命令输出"><a href="#控制命令输出" class="headerlink" title="控制命令输出"></a>控制命令输出</h3><p>前面说了CLI大致有四种输出<code>json</code>，<code>yaml</code>，<code>text</code>和<code>table</code>，并且可以通过配置文件<code>~/.aws/config</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[default]</span><br><span class="line">output=text</span><br></pre></td></tr></table></figure><p>环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ export AWS_DEFAULT_OUTPUT=&quot;table&quot;</span><br></pre></td></tr></table></figure><p>以及CLI<code>--output</code>选项进行配置，其中CLI的优先级最高</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws swf list-domains --registration-status REGISTERED --output json</span><br></pre></td></tr></table></figure><p>使用<code>json</code>输出时，可以考虑使用 <code>jq</code>进行高级筛选，这是一个命令行 <code>JSON</code> 处理器。可以通过 <a href="http://mikefarah.github.io/jq/" target="_blank" rel="noopener">http://mikefarah.github.io/jq/</a> 下载它并查找文档。</p><p>使用<code>yaml</code>输出时，可以考虑使用 <code>yq</code>进行高级筛选，这是一个命令行 <code>YAML</code> 处理器。可以通过 <a href="http://mikefarah.github.io/yq/" target="_blank" rel="noopener">http://mikefarah.github.io/yq/</a> 下载它并查找文档。</p><p>使用<code>text</code>输出时，强烈建议使用<code>--query</code>，脚本中本人最常用的输出格式，因为不用额外安装 <code>jq</code> 或 <code>yq</code></p><p>使用<code>table</code>输出时，也是和<code>--query</code>结合使用，最便于认为阅读，不适合脚本中使用</p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>AWS CLI 使用的凭证存储在纯文本文件中，并且<code>不加密</code>。</p><ul><li>$HOME/.aws/credentials 文件存储访问 AWS 资源所需的长期凭证。这包括访问密钥 ID 和秘密访问密钥。</li><li>短期凭证（例如承担的角色或用于 AWS Single Sign-On 服务的角色的凭证）也分别存储在 $HOME/.aws/cli/cache 和 $HOME/.aws/sso/cache 文件夹中。</li></ul><p>强烈建议您在 $HOME/.aws 文件夹及其子文件夹和文件上配置文件系统权限，仅限授权用户访问。<br>尽可能使用具有临时凭证的角色，以减少凭证泄露时造成损坏的机会。仅使用长期凭证来请求和刷新短期角色凭证。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><p>系统时间与实际时间不匹配导致验证不通过,需要调整系统时间</p></li><li><p>~/.aws/credential 文件中格式不正确或者包含错误的字符串.需要生成格式正确的<code>credential</code>文件</p></li></ol><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS CLI </tag>
            
            <tag> AWS CLI基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS CLI(1)安装和配置</title>
      <link href="2020/11/16/AWS-CLI-1-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>2020/11/16/AWS-CLI-1-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS CLI安装和配置</p><a id="more"></a><p>到文章发布AWS CLI有两个版本，V1和V2. V2中添加很多修改，具体看这里 <a href="https://docs.amazonaws.cn/cli/latest/userguide/cliv2-migration.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cliv2-migration.html</a></p><p><strong>默认情况下，AWS CLI 版本 2 会对所有输出使用分页程序,在Linux 和 macOS 上是 <code>less</code> 程序</strong></p><p>如果不想使用分页程序或者换成其他分页程序，可以配置 <code>AWS_PAGER</code> 环境变量或者在<code>~/.aws/config</code>文件中添加<code>cli_pager</code>。设置为空则表示不使用分页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ export AWS_PAGER=&quot;&quot;</span><br><span class="line"></span><br><span class="line">$ aws configure set cli_pager &apos;&apos;</span><br><span class="line"></span><br><span class="line">$ cat ~/.aws/config</span><br><span class="line">[default]</span><br><span class="line">cli_pager=</span><br></pre></td></tr></table></figure><p>所以下面我们直接安装V2版本，推荐用官方的方式安装，由于 AWS 不维护第三方存储库，因此不能保证它们包含最新版本的 AWS CLI。</p><h2 id="CLI-安装更新和删除"><a href="#CLI-安装更新和删除" class="headerlink" title="CLI 安装更新和删除"></a>CLI 安装更新和删除</h2><h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><figure class="highlight plain"><figcaption><span>X86</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 下载最新版本</span><br><span class="line">$ curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;</span><br><span class="line"></span><br><span class="line"># 下载指定版本，例如版本 2.0.30</span><br><span class="line"># $ curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.0.30.zip&quot; -o &quot;awscliv2.zip&quot;</span><br><span class="line"></span><br><span class="line"># 解压</span><br><span class="line">$ unzip awscliv2.zip</span><br><span class="line"></span><br><span class="line"># 安装至指定路径</span><br><span class="line"># -i – 此选项指定要将所有文件复制到的目录，程序实际所在路径，默认值为 /usr/local/aws-cli</span><br><span class="line"># -b – 此选项指定安装目录中的主 aws 程序通过符号链接指向指定路径中的 aws 文件，默认值为 /usr/local/bin，所以无需再将安装目录添加到用户的 $PATH 变量中</span><br><span class="line">$ sudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 验证安装</span><br><span class="line">$ aws --version</span><br><span class="line">aws-cli/2.0.47 Python/3.7.4 Linux/4.14.133-113.105.amzn2.x86_64 botocore/2.0.0</span><br></pre></td></tr></table></figure><p>版本列表: <a href="https://github.com/aws/aws-cli/blob/v2/CHANGELOG.rst" target="_blank" rel="noopener">https://github.com/aws/aws-cli/blob/v2/CHANGELOG.rst</a></p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>更新其实就是用新文件覆盖旧文件,和安装基本一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 下载最新版本</span><br><span class="line">$ curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;</span><br><span class="line"></span><br><span class="line"># 解压</span><br><span class="line">$ unzip awscliv2.zip</span><br><span class="line"></span><br><span class="line"># 使用 which 命令查找符号链接</span><br><span class="line">$ which aws</span><br><span class="line">/usr/local/bin/aws</span><br><span class="line"></span><br><span class="line"># 使用 ls 命令查找符号链接指向的目录</span><br><span class="line">$ ls -l /usr/local/bin/aws</span><br><span class="line">lrwxrwxrwx 1 ec2-user ec2-user 49 Oct 22 09:49 /usr/local/bin/aws -&gt; /usr/local/aws-cli/v2/current/bin/aws</span><br><span class="line"></span><br><span class="line"># 使用带有 --update 参数的 install 命令。</span><br><span class="line"># --bin-dir - which命令返回的目录</span><br><span class="line"># --install-dir - ls显示的链接的实际路径</span><br><span class="line">$ sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>卸载其实就是删除相关文件和链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 首先使用 which 命令查找符号链接</span><br><span class="line">$ which aws</span><br><span class="line">/usr/local/bin/aws</span><br><span class="line"></span><br><span class="line"># 使用 ls 命令查找符号链接指向的目录</span><br><span class="line">$ ls -l /usr/local/bin/aws</span><br><span class="line">lrwxrwxrwx 1 ec2-user ec2-user 49 Oct 22 09:49 /usr/local/bin/aws -&gt; /usr/local/aws-cli/v2/current/bin/aws</span><br><span class="line"></span><br><span class="line"># 最后删除链接和目录</span><br><span class="line">$ sudo rm /usr/local/bin/aws</span><br><span class="line">$ sudo rm /usr/local/bin/aws_completer</span><br><span class="line">$ sudo rm -rf /usr/local/aws-cli</span><br></pre></td></tr></table></figure><p>其他系统安装方式可以参考官方文档，官方文档： <a href="https://docs.amazonaws.cn/cli/latest/userguide/install-cliv2-linux.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/install-cliv2-linux.html</a></p><h2 id="配置CLI"><a href="#配置CLI" class="headerlink" title="配置CLI"></a>配置CLI</h2><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><ol><li><p>默认配置命令 <code>aws configure</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 创建默认名称为default的配置文件</span><br><span class="line">$ aws configure</span><br><span class="line">AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE</span><br><span class="line">AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</span><br><span class="line">Default region name [None]: us-west-2</span><br><span class="line">Default output format [None]: json</span><br><span class="line"></span><br><span class="line"># 创建名为 produser的配置文件</span><br><span class="line">$ aws configure --profile produser</span><br></pre></td></tr></table></figure><ul><li>AWS Access Key ID：源于IAM创建的访问密钥</li><li>AWS Secret Access Key：源于IAM创建的访问密钥</li><li>Region：运行CLI命令时，命令发送的区域，取决于服务部署在哪个Region</li><li>Output：输出格式</li></ul><p>CLI 为使用 <code>aws configure</code> 配置的默认配置文件生成的文件看起来类似于以下内容。</p><p><code>~/.aws/credentials</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[default]</span><br><span class="line">aws_access_key_id=AKIAIOSFODNN7EXAMPLE</span><br><span class="line">aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</span><br></pre></td></tr></table></figure><p><code>~/.aws/config</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[default]</span><br><span class="line">region=us-east-1</span><br><span class="line">output=json</span><br></pre></td></tr></table></figure></li><li><p>使用<code>configure</code>的 <code>set</code>, <code>get</code> 和 <code>list</code>, <code>list-profiles</code> 子命令:<br>进行单独配置，对于<code>assume role</code>操作很有用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 使用set配置</span><br><span class="line">$ aws configure set aws_access_key_id AKIAIOSFODNN7EXAMPLE --profile example</span><br><span class="line">$ aws configure set aws_secret_access_key wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY --profile example</span><br><span class="line">$ aws configure set region us-east-1 --profile example</span><br><span class="line">$ aws configure set aws_access_key_id AKIAIOSFODNN7EXAMPLE --profile example</span><br><span class="line"></span><br><span class="line"># 使用get获取</span><br><span class="line">$ aws configure get aws_access_key_id --profile example</span><br><span class="line">AKIAIOSFODNN7EXAMPLE</span><br><span class="line"></span><br><span class="line"># 使用lit获取</span><br><span class="line">$ aws configure get aws_access_key_id --profile example</span><br><span class="line">      Name                    Value             Type    Location</span><br><span class="line">      ----                    -----             ----    --------</span><br><span class="line">  profile                  example           manual    --profile</span><br><span class="line">access_key     ****************MPLE shared-credentials-file    </span><br><span class="line">secret_key     ****************EKEY shared-credentials-file    </span><br><span class="line">    region                us-east-1      config-file    ~/.aws/config</span><br><span class="line"></span><br><span class="line"># 查看当前的profile</span><br><span class="line">$ aws configure list-profiles</span><br><span class="line">default</span><br><span class="line">example</span><br></pre></td></tr></table></figure><p><code>assume role</code>举例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">KST=($(aws sts assume-role \</span><br><span class="line">--role-arn &quot;arn:aws:iam::$&#123;AWSAccount&#125;:role/$&#123;RoleName&#125;&quot; \</span><br><span class="line">--role-session-name &quot;role-session&quot; \</span><br><span class="line">--query &apos;Credentials.[AccessKeyId,SecretAccessKey,SessionToken]&apos; \</span><br><span class="line">--profile &apos;bot-aws-profile&apos; \</span><br><span class="line">--output text))</span><br><span class="line"></span><br><span class="line">echo &quot;Setting AWS configs:&quot;</span><br><span class="line">aws configure set aws_access_key_id &quot;$&#123;KST[0]&#125;&quot; --profile role-profile</span><br><span class="line">aws configure set aws_secret_access_key &quot;$&#123;KST[1]&#125;&quot; --profile role-profile</span><br><span class="line">aws configure set aws_session_token &quot;$&#123;KST[2]&#125;&quot; --profile role-profile</span><br><span class="line">aws configure set region &quot;$&#123;REGION&#125;&quot; --profile role-profile</span><br></pre></td></tr></table></figure></li><li><p><code>import</code></p><p>这是最方便的方式，当需要配置本机CLI时，大概率你手里已经有了credentials.csv文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws configure import –-csv file://./credentials.csv</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h3><p>config文件支持大量的字段,下面介绍一些常用的：</p><ul><li>cli_pager<br>分页功能，仅适用于 AWS CLI 版本 2，可以被 AWS_PAGER 环境变量覆盖</li><li>duration_seconds<br>指定角色会话的最大持续时间（以秒为单位），默认为3600秒</li><li>max_attempts<br>指定 AWS CLI 重试处理程序使用的最大重试次数值，其中初始调用计入您提供的 max_attempts 值。可以使用 AWS_MAX_ATTEMPTS 环境变量覆盖此值。</li><li>output<br>CLI命令的输出格式<ul><li>json – 输出采用 JSON 字符串的格式。</li><li>yaml – 输出采用 YAML 字符串的格式。（仅在 AWS CLI 版本 2 中可用。）</li><li>yaml-stream – 输出被流式处理并采用 YAML 字符串的格式。流式处理支持更快地处理大型数据类型。（仅在 AWS CLI 版本 2 中可用。）</li><li>text – 输出采用多个制表符分隔字符串值行的格式。这对于将输出传递到文本处理器（如 grep、sed 或 awk）很有用。</li><li>table – 输出采用表格形式，使用字符 +|- 以形成单元格边框。它通常以“人性化”格式呈现信息，这种格式比其他格式更容易阅读，但从编程方面来讲不是那么有用。</li></ul></li><li>region<br>对于使用该配置文件请求的命令，指定要将请求发送到的 AWS 区域</li><li>role_arn<br>指定要用于运行 AWS CLI 命令的 IAM 角色的 Amazon 资源名称 (ARN)。此外，还必须指定以下参数之一以标识有权代入此角色的凭证：<ul><li>source_profile</li><li>credential_source</li></ul></li><li>source_profile<br>指定包含长期凭证的命名配置文件，AWS CLI 可使用这些凭证代入通过 role_arn 参数指定的角色。不能在同一配置文件中同时指定 source_profile 和 credential_source。</li><li>credential_source<br>在 Amazon EC2 实例或 EC2 容器中使用，指定 AWS CLI 在何处可以找到要用于代入通过 role_arn 参数指定的角色的凭证。不能在同一配置文件中同时指定 source_profile 和 credential_source。<br>此参数具有三个值：<ul><li>Environment – 指定 AWS CLI 从环境变量检索源凭证。</li><li>Ec2InstanceMetadata – 指定 AWS CLI 将使用附加到 EC2 实例配置文件的 IAM 角色以获取源凭证。</li><li>EcsContainer – 指定 AWS CLI 将附加到 ECS 容器的 IAM 角色用作源凭证。</li></ul></li><li>retry_mode<br>重试操作，有三种类型传统重试模式（legacy），标准重试模式（standard）和自适应重试模式（adaptive）<br>传统模式：AWS CLI 版本 1 使用的默认模式，重试4次，总共可发出 5 次调用尝试。<br>标准模式：AWS CLI 版本 2 使用的默认模式，最大重试次数的默认值为 2，总共可发出 3 次调用尝试。多了一些报错代码。<br>自适应模式：自适应模式是一种试验模式，AWSCLI会自己根据情况改变重试次数</li><li>max_attempts<br>最大重试次数</li></ul><h3 id="config中的s3设置"><a href="#config中的s3设置" class="headerlink" title="config中的s3设置"></a>config中的s3设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[profile development]</span><br><span class="line">s3 =</span><br><span class="line">  max_concurrent_requests = 20</span><br><span class="line">  max_queue_size = 10000</span><br><span class="line">  multipart_threshold = 64MB</span><br><span class="line">  multipart_chunksize = 16MB</span><br><span class="line">  max_bandwidth = 50MB/s</span><br><span class="line">  use_accelerate_endpoint = true</span><br><span class="line">  addressing_style = path</span><br></pre></td></tr></table></figure><p>具体信息：<a href="https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-files.html#cli-configure-files-where" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-files.html#cli-configure-files-where</a></p><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>AWS CLI 凭证和配置设置的优先顺序如下：</p><ol><li>命令行选项 – 覆盖任何其他位置的设置。可以在命令行上指定 –region、–output 和 –profile 作为参数。</li><li>环境变量 – 您可以在系统的环境变量中存储值。 环境变量参考：<a href="https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-envvars.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-envvars.html</a></li><li>CLI 凭证文件 – credentials 文件。credentials 文件位于 ~/.aws/credentials（在 Linux 或 macOS 上）或 C:\Users\USERNAME.aws\credentials（在 Windows 上）。该文件可以包含 default 配置文件和任何命名配置文件的<code>凭证详细信息</code>。</li><li>CLI 配置文件 – config 文件。config 文件位于 ~/.aws/config（在 Linux 或 macOS 上）或 C:\Users\USERNAME.aws\config（在 Windows 上）。该文件包含默认配置文件和任何命名配置文件的<code>配置设置</code>。</li><li>容器凭证 – ECS的IAM role</li><li>实例配置文件凭证 – EC2的IAM role</li></ol><h2 id="CLI常用命令行选项"><a href="#CLI常用命令行选项" class="headerlink" title="CLI常用命令行选项"></a>CLI常用命令行选项</h2><ol><li><p><strong>–profile</strong></p><p>最常用的选项没有之一，当你具有多个配置文件时，用于让AWS命令运行在不同配置下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws --profile dev servicename commandname options</span><br></pre></td></tr></table></figure></li><li><p><strong>–region</strong><br>一般般，当你的资源在同一个AWS账号下但是不在同一个region时，在不同region之间控制资源需要用到。</p></li><li><p><strong>–output &lt;json|yaml|text|table&gt;</strong><br>比较常用，尤其是编程时与<code>--query</code>结合</p></li><li><p><strong>–query <string></string></strong><br>比较常用，尤其是编程时与<code>--output</code>结合</p></li><li><p><strong>–debug</strong><br>不算常用，但是在CLI出现意料之外的情况时很有用。通常可以将错误输出到错误日志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aws servicename commandname options --debug 2&gt; debug.txt</span><br></pre></td></tr></table></figure></li><li><p><strong>–generate-cli-skeleton</strong><br>不常用，至少我自己没用过。它可以帮你生成CLI命令的模版,模版中包括该命令的所有参数，你可以修改这个模版，删除你不需要的参数，然后填上你需要的参数。<br>最后运行CLI命令时使用<code>--cli-input-yaml</code>选项，就可以自动将你的参数带入命令中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ aws ec2 run-instances --generate-cli-skeleton yaml-input &gt; ec2runinst.yaml</span><br><span class="line">$ vim ec2runinst.yaml</span><br><span class="line">DryRun: true</span><br><span class="line">ImageId: &apos;ami-dfc39aef&apos;</span><br><span class="line">KeyName: &apos;mykey&apos;</span><br><span class="line">SecurityGroups:</span><br><span class="line">- &apos;my-sg&apos;</span><br><span class="line">InstanceType: &apos;t2.micro&apos;</span><br><span class="line">Monitoring: </span><br><span class="line">  Enabled: true</span><br><span class="line">$ aws ec2 run-instances --cli-input-yaml file://ec2runinst.yaml</span><br></pre></td></tr></table></figure></li></ol><h2 id="返场："><a href="#返场：" class="headerlink" title="返场："></a>返场：</h2><ol><li><p>设置AWS自动补全</p><p>通常AWS安装后会有自动补全功能如果没有，首先找到AWS的命令补全程序的位置(通常和<code>aws</code>在同一目录下)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which aws_completer</span><br><span class="line">/usr/local/bin/aws_completer</span><br></pre></td></tr></table></figure><p><code>/usr/local/bin</code>已经在我的$PATH,如果路径不在<code>$PATH</code>需要在<code>~/.bash_profile</code>文件末尾中添加这一行，并应用生效<code>source ~/.bash_profile</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/other/path/folder:$PATH</span><br></pre></td></tr></table></figure><p>最后<code>bash</code>使用内置命令 <code>complete</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ complete -C &apos;/usr/local/aws/bin/aws_completer&apos; aws</span><br></pre></td></tr></table></figure><p><a href="https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-completion.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/cli/latest/userguide/cli-configure-completion.html</a></p></li></ol><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS CLI </tag>
            
            <tag> AWS CLI基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS S3 IAM Policy 及存储桶策略</title>
      <link href="2020/11/14/AWS-S3%E5%AD%98%E5%82%A8%E6%A1%B6%E7%AD%96%E7%95%A5/"/>
      <url>2020/11/14/AWS-S3%E5%AD%98%E5%82%A8%E6%A1%B6%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<p>描述: S3存储桶策略可以基于各种条件进行访问限定</p><a id="more"></a><h1 id="注意-所有Effect为Deny的Action字段不要用s3-否则会出现严重的问题，除非你知道怎么解决。"><a href="#注意-所有Effect为Deny的Action字段不要用s3-否则会出现严重的问题，除非你知道怎么解决。" class="headerlink" title="注意: 所有Effect为Deny的Action字段不要用s3:*,否则会出现严重的问题，除非你知道怎么解决。"></a>注意: 所有<code>Effect</code>为<code>Deny</code>的<code>Action</code>字段不要用<code>s3:*</code>,否则会出现严重的问题，除非你知道怎么解决。</h1><h2 id="IAM-Policy"><a href="#IAM-Policy" class="headerlink" title="IAM Policy"></a>IAM Policy</h2><p>IAM Policy是附加到用户，用户组或是角色的策略</p><h3 id="允许-IAM-用户访问某个存储桶"><a href="#允许-IAM-用户访问某个存储桶" class="headerlink" title="允许 IAM 用户访问某个存储桶"></a>允许 IAM 用户访问某个存储桶</h3><p>在本示例中，授予 AWS 账户中的 IAM 用户访问其中一个存储桶 awsexamplebucket1 的权限，以便该用户能够添加、更新和删除对象。</p><p><strong>注意：这个示例策略是加给用户或角色的，而不是加到bucket policy</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">   &quot;Statement&quot;:[</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">         &quot;Action&quot;: &quot;s3:ListAllMyBuckets&quot;,</span><br><span class="line">         &quot;Resource&quot;:&quot;arn:aws:s3:::*&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">         &quot;Action&quot;:[&quot;s3:ListBucket&quot;,&quot;s3:GetBucketLocation&quot;],</span><br><span class="line">         &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">         &quot;Action&quot;:[</span><br><span class="line">            &quot;s3:PutObject&quot;,</span><br><span class="line">            &quot;s3:PutObjectAcl&quot;,</span><br><span class="line">            &quot;s3:GetObject&quot;,</span><br><span class="line">            &quot;s3:GetObjectAcl&quot;,</span><br><span class="line">            &quot;s3:DeleteObject&quot;</span><br><span class="line">         ],</span><br><span class="line">         &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1/*&quot;</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="允许每个-IAM-用户访问存储桶中的文件夹"><a href="#允许每个-IAM-用户访问存储桶中的文件夹" class="headerlink" title="允许每个 IAM 用户访问存储桶中的文件夹"></a>允许每个 IAM 用户访问存储桶中的文件夹</h3><p>两个 IAM 用户（Alice 和 Bob）可以访问 examplebucket 存储桶，以便他们可以添加、更新和删除对象。但是，想要限制每个用户对存储桶中单个文件夹的访问权限。可以使用与用户名称匹配的名称创建文件夹。</p><ol><li><p>对用户单独创建策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;:[</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">        &quot;Action&quot;:[</span><br><span class="line">            &quot;s3:PutObject&quot;,</span><br><span class="line">            &quot;s3:GetObject&quot;,</span><br><span class="line">            &quot;s3:GetObjectVersion&quot;,</span><br><span class="line">            &quot;s3:DeleteObject&quot;,</span><br><span class="line">            &quot;s3:DeleteObjectVersion&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1/Alice/*&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样，对Bob也创建一个</p></li><li><p>使用策略变量的策略并将该策略附加到一个组，而不是将策略附加到单个用户。然后将 Alice 和 Bob 添加到该组中。</p><p>策略变量 ${aws:username} 将替换为请求者的用户名称。例如，如果 Alice 发送了一个请求以放置对象，只有当 Alice 将对象上传到 examplebucket/Alice 文件夹后，才允许该操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;:[</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">        &quot;Action&quot;:[</span><br><span class="line">            &quot;s3:PutObject&quot;,</span><br><span class="line">            &quot;s3:GetObject&quot;,</span><br><span class="line">            &quot;s3:GetObjectVersion&quot;,</span><br><span class="line">            &quot;s3:DeleteObject&quot;,</span><br><span class="line">            &quot;s3:DeleteObjectVersion&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1/$&#123;aws:username&#125;/*&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Bucket-Policy"><a href="#Bucket-Policy" class="headerlink" title="Bucket Policy"></a>Bucket Policy</h2><p>对于Bucket的策略，</p><ol><li>在Bucket是<code>Public</code>的情况下只允许<code>XXX</code>访问，则<code>Effect</code>字段应设置为<code>Deny</code>然后在<code>Condition</code>字段添加<code>Not</code>条件。</li><li>在Bucket是<code>NotPublic</code>的情况下允许<code>XXX</code>访问，则<code>Effect</code>字段应设置为<code>Allow</code>然后设定在<code>Condition</code>字段添加<code>Not</code>条件</li></ol><h3 id="基于IP限制"><a href="#基于IP限制" class="headerlink" title="基于IP限制"></a>基于IP限制</h3><p>除特定外部 IP 地址外，阻止所有的流量 - 只允许特定IP访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Sid&quot;: &quot;IPAllow&quot;,</span><br><span class="line">      &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">      &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;: &quot;s3:Get*&quot;,</span><br><span class="line">      &quot;Resource&quot;: &quot;arn:aws:s3:::examplebucket/*&quot;,</span><br><span class="line">      &quot;Condition&quot;: &#123;</span><br><span class="line">         &quot;NotIpAddress&quot;: &#123;</span><br><span class="line">            &quot;aws:SourceIp&quot;: [</span><br><span class="line">                &quot;54.240.143.0/24&quot;,</span><br><span class="line">                &quot;2001:DB8:1234:5678::/64&quot;</span><br><span class="line">              ]</span><br><span class="line">         &#125;</span><br><span class="line">      &#125; </span><br><span class="line">    &#125; </span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阻止特定外部 IP 地址的流量 - - 不允许特定IP访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Id&quot;:&quot;PolicyId2&quot;,</span><br><span class="line">  &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Sid&quot;:&quot;AllowIPmix&quot;,</span><br><span class="line">      &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">      &quot;Principal&quot;:&quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;:&quot;s3:*&quot;,</span><br><span class="line">      &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1/*&quot;,</span><br><span class="line">      &quot;Condition&quot;: &#123;</span><br><span class="line">        &quot;NotIpAddress&quot;: &#123;</span><br><span class="line">          &quot;aws:SourceIp&quot;: [</span><br><span class="line">          &quot;54.240.143.128/30&quot;,</span><br><span class="line">          &quot;2001:DB8:1234:5678:ABCD::/80&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>允许特定IP访问，阻止特定IP访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Id&quot;:&quot;PolicyId2&quot;,</span><br><span class="line">  &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Sid&quot;:&quot;AllowIPmix&quot;,</span><br><span class="line">      &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">      &quot;Principal&quot;:&quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;:&quot;s3:*&quot;,</span><br><span class="line">      &quot;Resource&quot;:&quot;arn:aws:s3:::awsexamplebucket1/*&quot;,</span><br><span class="line">      &quot;Condition&quot;: &#123;</span><br><span class="line">        &quot;IpAddress&quot;: &#123;</span><br><span class="line">          &quot;aws:SourceIp&quot;: [</span><br><span class="line">            &quot;54.240.143.0/24&quot;,</span><br><span class="line">    &quot;2001:DB8:1234:5678::/64&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;NotIpAddress&quot;: &#123;</span><br><span class="line">          &quot;aws:SourceIp&quot;: [</span><br><span class="line">     &quot;54.240.143.128/30&quot;,</span><br><span class="line">     &quot;2001:DB8:1234:5678:ABCD::/80&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="限制对特定-HTTP-引用站点的访问"><a href="#限制对特定-HTTP-引用站点的访问" class="headerlink" title="限制对特定 HTTP 引用站点的访问"></a>限制对特定 HTTP 引用站点的访问</h3><p>假设你拥有一个网站，其域名为 <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 或 example.com，并且带有指向存储在 Amazon S3 存储桶 awsexamplebucket1 中的照片和视频的链接。默认情况下，所有 Amazon S3 资源都是私有的，因此只有创建资源的 AWS 账户才能访问它们。要允许从您的网站对这些对象进行读取访问，您可以添加一个存储桶策略允许 s3:GetObject 权限，并附带使用 aws:Referer 键的条件，即获取请求必须来自特定的网页。以下策略指定带有 StringLike 条件键的 aws:Referer 条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Id&quot;:&quot;http referer policy example&quot;,</span><br><span class="line">  &quot;Statement&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Sid&quot;:&quot;Allow get requests originating from www.example.com and example.com.&quot;,</span><br><span class="line">      &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">      &quot;Principal&quot;:&quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;:[</span><br><span class="line">        &quot;s3:GetObject&quot;,</span><br><span class="line">        &quot;s3:GetObjectVersion&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;Resource&quot;:&quot;arn:aws:s3:::`awsexamplebucket1`/*&quot;,</span><br><span class="line">      &quot;Condition&quot;:&#123;</span><br><span class="line">        &quot;StringLike&quot;:&#123;</span><br><span class="line">          &quot;aws:Referer&quot;:[</span><br><span class="line">            &quot;http://www.example.com/*&quot;,</span><br><span class="line">            &quot;http://example.com/*&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>确保您使用的浏览器在请求中包含 HTTP referer 标头。</p><h3 id="特定用户或角色仅允许访问指定bucket"><a href="#特定用户或角色仅允许访问指定bucket" class="headerlink" title="特定用户或角色仅允许访问指定bucket"></a>特定用户或角色仅允许访问指定bucket</h3><p>我想授予用户的 Amazon Simple Storage Service (Amazon S3) 控制台访问某个存储桶的权限。但是，我不希望用户能够查看其他账户中的存储桶。如何限制用户的控制台访问权限，使之只能访问某个存储桶？</p><p>要做到这个除了bucket policy之外，还需要一个额外的操作：</p><ul><li>删除用户或角色的<code>s3:ListAllMyBuckets</code>的权限</li></ul><p>以下示例策略用于访问存储桶。该策略允许用户仅对 <code>AWSDOC-EXAMPLE-BUCKET</code> 执行 <code>s3:ListBucket</code>、<code>s3:PutObject</code> 和 <code>s3:GetObject</code> 操作：</p><figure class="highlight plain"><figcaption><span>策略</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;Version&quot;:&quot;2012-10-17&quot;,</span><br><span class="line">   &quot;Statement&quot;:[</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">         &quot;Action&quot;:[</span><br><span class="line">            &quot;s3:ListBucket&quot;</span><br><span class="line">         ],</span><br><span class="line">         &quot;Resource&quot;:&quot;arn:aws:s3:::AWSDOC-EXAMPLE-BUCKET&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;Effect&quot;:&quot;Allow&quot;,</span><br><span class="line">         &quot;Action&quot;:[</span><br><span class="line">            &quot;s3:PutObject&quot;,</span><br><span class="line">            &quot;s3:GetObject&quot;</span><br><span class="line">         ],</span><br><span class="line">         &quot;Resource&quot;:&quot;arn:aws:s3:::AWSDOC-EXAMPLE-BUCKET/*&quot;</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改这些权限后，用户在访问主 Amazon S3 控制台时会收到“访问被拒绝”错误。用户必须使用指向存储桶或文件夹的直接控制台链接访问存储桶。指向存储桶的直接控制台链接与以下类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://s3.console.aws.amazon.com/s3/buckets/AWSDOC-EXAMPLE-BUCKET/</span><br></pre></td></tr></table></figure><h3 id="特定用户或角色仅允许访问指定bucket的特定文件夹（前缀）"><a href="#特定用户或角色仅允许访问指定bucket的特定文件夹（前缀）" class="headerlink" title="特定用户或角色仅允许访问指定bucket的特定文件夹（前缀）"></a>特定用户或角色仅允许访问指定bucket的特定文件夹（前缀）</h3><p>我想授予用户的 Amazon Simple Storage Service (Amazon S3) 控制台访问某个特定存储桶文件夹（前缀）的权限。但是，我不希望用户能够查看其他账户中的存储桶或其他存储桶中的文件夹。如何限制用户的控制台访问权限，使之只能访问某个存储桶的文件夹？</p><p>要做到这个除了bucket policy之外，还需要一个额外的操作：</p><ul><li>删除用户或角色的<code>s3:ListAllMyBuckets</code>的权限</li></ul><p>以下示例策略用于访问文件夹。例如，以下策略允许用户对 <code>AWSDOC-EXAMPLE-BUCKET</code>中的 <code>folder2</code> 执行 <code>s3:ListBucket</code>、<code>s3:PutObject</code> 和 <code>s3:GetObject</code> 操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Sid&quot;: &quot;AllowUsersToAccessFolder2Only&quot;,</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:GetObject*&quot;,</span><br><span class="line">                &quot;s3:PutObject*&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::AWSDOC-EXAMPLE-BUCKET/folder1/folder2/*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket*&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::AWSDOC-EXAMPLE-BUCKET&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Condition&quot;: &#123;</span><br><span class="line">                &quot;StringLike&quot;: &#123;</span><br><span class="line">                    &quot;s3:prefix&quot;: [</span><br><span class="line">                        &quot;folder1/folder2/*&quot;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改这些权限后，用户在访问主 Amazon S3 控制台时会收到“访问被拒绝”错误。用户必须使用指向存储桶或文件夹的直接控制台链接访问存储桶。指向存储桶的直接控制台链接与以下类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://s3.console.aws.amazon.com/s3/buckets/AWSDOC-EXAMPLE-BUCKET/folder1/folder2/</span><br></pre></td></tr></table></figure><h3 id="特定Bucket仅允许特定角色访问"><a href="#特定Bucket仅允许特定角色访问" class="headerlink" title="特定Bucket仅允许特定角色访问"></a>特定Bucket仅允许特定角色访问</h3><p>有一个存放着公司绝密的文件的bucket，只允许特定角色和根用户访问，不能以IAM用户身份访问，即使拥有管理员权限也无法访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">      # 警告 这个示例很危险不要轻易尝试，除非你知道自己在做什么</span><br><span class="line">      &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;: &quot;s3:Get*&quot;,</span><br><span class="line">      &quot;Resource&quot;: [</span><br><span class="line">        &quot;arn:aws:s3:::MyExampleBucket&quot;,</span><br><span class="line">        &quot;arn:aws:s3:::MyExampleBucket/*&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;Condition&quot;: &#123;</span><br><span class="line">        &quot;StringNotLike&quot;: &#123;</span><br><span class="line">          &quot;aws:userId&quot;: [</span><br><span class="line">            &quot;AROAEXAMPLEID:*&quot;,</span><br><span class="line">            &quot;111111111111&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>AROAEXAMPLEID</code>: 通过AWS CLI的<code>iam get-role</code>获取的<code>RoleId</code>，代表role</li><li><code>111111111111</code>: AWS AccountId，代表根用户</li></ul><p>可以和下方的特定用户配合使用</p><h3 id="特定Bucket仅允许特定IAM用户访问"><a href="#特定Bucket仅允许特定IAM用户访问" class="headerlink" title="特定Bucket仅允许特定IAM用户访问"></a>特定Bucket仅允许特定IAM用户访问</h3><p>有一个存放着公司绝密的文件的bucket，只允许特定的用户（CEO）和根用户访问，即使拥有管理员权限也无法访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Statement&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">      # 警告 这个示例很危险不要轻易尝试，除非你知道自己在做什么</span><br><span class="line">      &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">      &quot;Action&quot;: &quot;s3:Get*&quot;,</span><br><span class="line">      &quot;Resource&quot;: [</span><br><span class="line">        &quot;arn:aws:s3:::MyExampleBucket&quot;,</span><br><span class="line">        &quot;arn:aws:s3:::MyExampleBucket/*&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;Condition&quot;: &#123;</span><br><span class="line">        &quot;StringNotLike&quot;: &#123;</span><br><span class="line">          &quot;aws:userId&quot;: [</span><br><span class="line">            &quot;AIDAEXAMPLEID&quot;,</span><br><span class="line">            &quot;111111111111&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>AIDAEXAMPLEID</code>: 通过AWS CLI的<code>iam get-user</code>获取的<code>UserId</code>，代表user</li><li><code>111111111111</code>: AWS AccountId，代表根用户</li></ul><p>可以和上方的特定角色配合使用</p><h3 id="仅允许从VPC-endpoint访问"><a href="#仅允许从VPC-endpoint访问" class="headerlink" title="仅允许从VPC endpoint访问"></a>仅允许从VPC endpoint访问</h3><p>允许VPC内的机器能够直接访问S3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">  &quot;Id&quot;: &quot;VPCe and SourceIP&quot;,</span><br><span class="line">  &quot;Statement&quot;: [&#123;</span><br><span class="line">    &quot;Sid&quot;: &quot;VPCe and SourceIP&quot;,</span><br><span class="line">    &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">    &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">    &quot;Action&quot;: &quot;s3:*&quot;,</span><br><span class="line">    &quot;Resource&quot;: [</span><br><span class="line">      &quot;arn:aws:s3:::awsexamplebucket&quot;,</span><br><span class="line">      &quot;arn:aws:s3:::awsexamplebucket/*&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;Condition&quot;: &#123;</span><br><span class="line">      &quot;StringNotEquals&quot;: &#123;</span><br><span class="line">        &quot;aws:sourceVpce&quot;: [</span><br><span class="line">          &quot;vpce-1111111&quot;,</span><br><span class="line">          &quot;vpce-2222222&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;StringNotLike&quot;: &#123;</span><br><span class="line">        &quot;aws:userId&quot;: [</span><br><span class="line">          &quot;AROAEXAMPLEID:*&quot;,</span><br><span class="line">          &quot;AIDAEXAMPLEID&quot;,</span><br><span class="line">          &quot;111111111111&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>AROAEXAMPLEID</code>: 通过AWS CLI的<code>iam get-role</code>获取的<code>RoleId</code>，代表role</li><li><code>AIDAEXAMPLEID</code>: 通过AWS CLI的<code>iam get-user</code>获取的<code>UserId</code>，代表user</li><li><code>111111111111</code>: AWS AccountId，代表根用户</li></ul><h3 id="向-OAI-Origin-Access-Identity-授予读写访问权限"><a href="#向-OAI-Origin-Access-Identity-授予读写访问权限" class="headerlink" title="向 OAI(Origin Access Identity ) 授予读写访问权限"></a>向 OAI(Origin Access Identity ) 授予读写访问权限</h3><p>这是配合CloudFront使用的策略，允许通过CloudFront访问，不能直接访问Bucket</p><p>下面的示例允许 OAI 读取和写入指定存储桶（s3:GetObject 和 s3:PutObject）中的对象。这样允许查看器将文件通过 CloudFront 上传到您的 Amazon S3 存储桶。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Id&quot;: &quot;PolicyForCloudFrontPrivateContent&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Principal&quot;: &#123;</span><br><span class="line">                &quot;AWS&quot;: &quot;arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity EH1HDMB1FH2TC&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:GetObject&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: &quot;arn:aws:s3:::aws-example-bucket/*&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="VPC-endpoint与Access-Point结合"><a href="#VPC-endpoint与Access-Point结合" class="headerlink" title="VPC endpoint与Access Point结合"></a>VPC endpoint与Access Point结合</h3><p>当Bucket越来越多，每次新增bucket都需要修改endpoint，使用该策略限制从S3请求必须通过Access Point。这是VPC endpoint策略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2008-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Sid&quot;: &quot;AllowUseOfS3&quot;,</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">            &quot;Action&quot;: &quot;s3:*&quot;,</span><br><span class="line">            &quot;Resource&quot;: &quot;*&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Sid&quot;: &quot;OnlyIfAccessedViaAccessPoints&quot;,</span><br><span class="line">            &quot;Effect&quot;: &quot;Deny&quot;,</span><br><span class="line">            &quot;Principal&quot;: &quot;*&quot;,</span><br><span class="line">            &quot;Action&quot;: &quot;s3:*&quot;,</span><br><span class="line">            &quot;Resource&quot;: &quot;*&quot;,</span><br><span class="line">            &quot;Condition&quot;: &#123;</span><br><span class="line">                &quot;ArnNotLikeIfExists&quot;: &#123;</span><br><span class="line">                    &quot;s3:DataAccessPointArn&quot;: &quot;arn:aws:s3:us-east-1:&lt;Account ID&gt;:accesspoint/*&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a> 和 <a href="https://amazonaws-china.com/cn/premiumsupport/knowledge-center/" target="_blank" rel="noopener">知识中心</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS S3(3)常见选项及意义</title>
      <link href="2020/11/14/AWS-S3-3-%E5%B8%B8%E8%A7%81%E9%80%89%E9%A1%B9%E5%8F%8A%E6%84%8F%E4%B9%89/"/>
      <url>2020/11/14/AWS-S3-3-%E5%B8%B8%E8%A7%81%E9%80%89%E9%A1%B9%E5%8F%8A%E6%84%8F%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS S3(3)常见选项及意义</p><a id="more"></a><h3 id="服务器端加密"><a href="#服务器端加密" class="headerlink" title="服务器端加密"></a>服务器端加密</h3><p>服务器端加密是指，Amazon S3 在将对象保存到其磁盘上之前对其进行加密，并在下载对象时对其进行解密。</p><p>启用默认加密后将会应用以下加密行为：</p><ul><li>在启用默认加密之前，存储桶中已存在的对象的加密没有变化。</li><li>在启用默认加密后上传对象时：<ul><li>如果 PUT 请求标头不包含加密信息，则 Amazon S3 将使用存储桶的默认加密设置来加密对象。</li><li>如果 PUT 请求标头包含加密信息，则 Amazon S3 将使用 PUT 请求中的加密信息加密对象，然后再将对象存储在 Amazon S3 中。</li></ul></li><li>如果您将 SSE-KMS 选项用于默认加密配置，则您将受到 AWS KMS 的 RPS (每秒请求数) 限制</li></ul><h3 id="Amazon-S3-Transfer-Acceleration"><a href="#Amazon-S3-Transfer-Acceleration" class="headerlink" title="Amazon S3 Transfer Acceleration"></a>Amazon S3 Transfer Acceleration</h3><p>Transfer Acceleration 利用 Amazon CloudFront 的全球分布式边缘站点进行加速，所以当然要收费。</p><p>什么时候会用到呢？</p><ol><li>位于全球各地的客户需要上传到集中式存储桶。</li><li>定期跨大洲传输数 GB 至数 TB 数据。</li><li>在上传到 Amazon S3 时无法充分利用 Internet 上的所有可用带宽。</li></ol><p>如何知道使用和没使用的区别呢？</p><p>将以下 URL 复制到浏览器窗口中，并分别将 region 和 yourBucketName 替换为使用的区域 (例如 us-west-2) 和要评估的存储桶的名称：</p><p><strong><a href="https://s3-accelerate-speedtest.s3-accelerate.amazonaws.com/en/accelerate-speed-comparsion.html?region=`region`&amp;origBucketName=`yourBucketName`" target="_blank" rel="noopener">https://s3-accelerate-speedtest.s3-accelerate.amazonaws.com/en/accelerate-speed-comparsion.html?region=`region`&amp;origBucketName=`yourBucketName`</a></strong></p><p><a href="https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/transfer-acceleration.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/transfer-acceleration.html</a></p><h3 id="申请方付款存储桶"><a href="#申请方付款存储桶" class="headerlink" title="申请方付款存储桶"></a>申请方付款存储桶</h3><p>申请方付款请求费用简单明了：请求方支付数据传输和请求方面的费用；存储桶拥有者支付数据存储方面的费用。</p><p><a href="https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/RequesterPaysBuckets.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/RequesterPaysBuckets.html</a></p><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS S3的服务等级协议(SLA)</title>
      <link href="2020/11/13/AWS-S3%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AD%89%E7%BA%A7%E5%8D%8F%E8%AE%AE-SLA/"/>
      <url>2020/11/13/AWS-S3%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AD%89%E7%BA%A7%E5%8D%8F%E8%AE%AE-SLA/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS S3 服务等级协议(SLA)</p><a id="more"></a><p>首先给出官方原版文件：</p><p><a href="https://amazonaws-china.com/s3/sla/?nc1=h_ls" target="_blank" rel="noopener">AWS S3 服务等级协议</a><br><a href="https://d1.awsstatic-china.com/legal/amazons3service/Amazon-S3-Service-Level-Agreement-Chinese.pdf" target="_blank" rel="noopener">AWS S3 服务等级协议中文版</a></p><p>简单解释一下</p><p>当AWS的S3服务的每月正常运行时间低于某个值时，你可以申请AWS的S3服务积分，S3服务积分可以抵扣AWS的<strong>S3</strong>账单相当于S3优惠卷。<br>正常运行时间比|服务积分|大致的达成条件<br>-|-|-<br>99.9%-99%|10%|30天内平均每1000个请求至少失败一个或累计44分钟无法正常工作<br>99%-95%|25%|30天内平均每100个请求至少失败一个或累计7个半小时无法正常工作<br>&lt;95%|100%|30天内平均每20个请求至少失败一个或累计36个小时无法正常工作</p><p>之所以是大致达成条件是因为AWS的条件限制以5分钟内的平均失败率为准</p><p>举个例子：</p><p>假设，某月（30天）AWS S3持续故障一小时，并且公司A在这一小时内受到影响，导致完全无法使用S3，月内其余时间S3正常运行。</p><ul><li>情况1：</li></ul><p>这一小时内，公司A每5分钟访问S3一或多次，并且都得到error消息。<br>计算：<br>在这一个小时内，一共有12次100%的错误率<br>60 ➗ 5 = 12<br>整体错误率 = 平均每5分钟的错误率 = 每个5分钟错误率之和 / 30天内5分钟的数量<br>（12 * 100% + 0%【其余时间没有错误】）➗ （30 ✖️ 24 ✖️ 60 ➗ 5）= 0.139%<br>正常运行时间比<br>100% - 0.139% = 99.861%  </p><p><strong>结论：可以申请服务积分</strong></p><ul><li>情况2：</li></ul><p>这一小时内，公司A已知S3故障只有第一个5分钟内访问过S3一或多次，并且得到error消息。其余55分钟没有访问。<br>如果5分钟内没有任何请求，则该间隔错误率为0.</p><p>计算：<br>在这一个小时内，只有第一个5分钟是100%的错误率，其余时间没有访问所以错误率为0.<br>5 ➗ 5 = 1<br>整体错误率 = 平均每5分钟的错误率 = 每个5分钟错误率之和 / 30天内5分钟的数量<br>（1 * 100% + 0%【其余时间没有错误】）➗ （30 ✖️ 24 ✖️ 60 ➗ 5）= 0.0116%<br>正常运行时间比<br>100% - 0.0116% = 99.9884%  </p><p><strong>结论：无法申请服务积分</strong></p><p>以上只是申请理赔的必要条件，简单来说申请服务积分还需要</p><ol><li>必须在故障发生的第二个账单周期结束前通过AWS support center提交申请<br>一般理解为事故发生的两个月内，例如1月15日发生的故障必须在3月之前提交申请</li><li>申请的主题必须包含”SLA Credit Request”字样</li><li>带上发生故障AWS的region，发生的时间日期和发生次数</li><li>发生错误的日志<br>日志内的敏感信息以*号代替</li></ol><p>S3的免责条款大致内容</p><ol><li>不可抗力和网络接入<br>不可抗力很好理解，个人理解”网络接入”可能是指防火墙之类的</li><li>用户或第三方自愿作为或不作为<br>作为是指做了禁止的事，不作为指有义务做但是没做的事，例如需要升级CLI才能访问S3但是用户不升级导致无法访问</li><li>用户或第三方设备软件或其他技术导致</li><li>AWS协议中止或终止用户使用S3的权利导致<br>类似删号和封号</li></ol><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3关键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS S3(2)存储类型和价格</title>
      <link href="2020/11/13/AWS-S3-2-%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B%E5%92%8C%E4%BB%B7%E6%A0%BC/"/>
      <url>2020/11/13/AWS-S3-2-%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B%E5%92%8C%E4%BB%B7%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<p>描述: AWS S3存储类型和价格</p><a id="more"></a><h3 id="S3-存储分类"><a href="#S3-存储分类" class="headerlink" title="S3 存储分类"></a>S3 存储分类</h3><p>存储大致分为4类，每种的适用性不同，</p><ol><li>经常访问对象的存储类 </li></ol><p>S3标准，频繁访问层，适用于经常访问的数据，标准费用</p><ol start="2"><li>不经常访问对象的存储类</li></ol><p>S3标准-IA（Infrequent Access），不频繁访问层，不经常访问对象的存储类称为IA，费用比标准费用低一些。又分为两类，S3 标准-IA（也就是多可用区）和S3 单区-IA</p><table><thead><tr><th>类别</th><th>价格</th><th>可用性</th></tr></thead><tbody><tr><td>S3 标准-IA</td><td>高</td><td>高</td></tr><tr><td>S3 单区-IA</td><td>低</td><td>低</td></tr></tbody></table><ol start="3"><li>S3智能分层</li></ol><p>结合了<code>1</code>和<code>2</code>，当数据30天内没有访问就自动将对象从<code>S3标准</code>转变为<code>S3标准IA</code>,如果不频繁访问层中的对象被访问，则对象将自动移回频繁访问层。但是智能分层要收取一个0.0025 USD/1000 个对象的管理费. 在 S3 智能分层存储类中的访问层之间移动对象时，不会产生额外的分层费用。</p><ol start="4"><li>存档对象的存储类</li></ol><p><code>S3 Glacier</code> 和 <code>S3 Glacier Deep Archive</code> 存储类别是专门为低成本的数据存档而设计的。费用很低，只有标准存储的5分之一，适合在政策层面上要求长时间存储的数据，对象不可用于实时访问。而上述<code>1</code>，<code>2</code>，<code>3</code>都可以实时访问。</p><p>例如，证券公司或者财务公司要求对客户资料必须存储2年以上，但其实存储之后并不会频繁访问而仅是用于备份。如果需要访问存档对象的话，需要提前<code>解冻</code>时间在几分钟到2天不等。</p><p>简单理解就是存档对象进行了加压，读取时需要解压所以需要时间</p><h3 id="S3-价格"><a href="#S3-价格" class="headerlink" title="S3 价格"></a>S3 价格</h3><p>S3价格由4各方面组成</p><ol><li>存储费用</li><li>请求和检索费用 - 可以理解为API的调用费用，PUT，LIST</li><li>数据传输费用 - 带宽也是要钱的</li><li>管理和复制费用 - 这个可以理解为S3 bucket的功能费用，使用了相关功能就需要付费，例如跨区复制功能和对象标记功能</li></ol><p>我主要讲讲存储和数据传输费用,因为请求和检索费用以及管理和复制费用取决于个人的使用情况不太好分析。</p><h4 id="存储费用"><a href="#存储费用" class="headerlink" title="存储费用"></a>存储费用</h4><p>这个价格基于<code>us-east-1</code>区域<br>存储类别|价格<br>-|-<br>S3标准|每 GB 0.023 USD<br>S3标准-IA|每 GB 0.0125 USD<br>S3单区-IA|每 GB 0.01 USD<br>S3 Glacier|每 GB 0.004 USD<br>S3 Glacier Deep Archive|每 GB 0.00099 USD</p><p>智能分层还要收取一个0.0025 USD/1000 个对象的管理费.</p><h4 id="数据传输费用"><a href="#数据传输费用" class="headerlink" title="数据传输费用"></a>数据传输费用</h4><ol><li>所有传入不收费</li><li>传出到同一区域的EC2（不论是不是你的）不收费</li><li>传出到CloudFront不收费，因为CloudFront要收费,CloudFront是AWS的CDN服务，以后单讲</li></ol><p>所以传出费用大概是每 GB 0.09 USD，这是传出的最高值，具体规则参考官方文档。</p><p>所以举例说明，假如你只存了1G数据在S3上并公开，但是有人疯狂下载，S3费用可能也会很高。</p><p>费用详情请参考官方文档：<a href="https://amazonaws-china.com/cn/s3/pricing/" target="_blank" rel="noopener">https://amazonaws-china.com/cn/s3/pricing/</a></p><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS S3(1) 概述</title>
      <link href="2020/11/13/AWS-S3-1-%E6%A6%82%E8%BF%B0/"/>
      <url>2020/11/13/AWS-S3-1-%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>描述:</p><a id="more"></a><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Amazon Simple Storage Service (Amazon S3) 是一项面向 Internet 的对象存储服务。您可以通过 Amazon S3 随时在 Web 上的任何位置存储和检索的任意大小的数据。</p><p>我们使用一个东西我们会问，它能用来干什么：</p><ol><li>备份和存储 – 为其他应用程序提供数据备份和存储服务。</li><li>应用程序托管 – 提供部署、安装和管理 Web 应用程序的服务。</li><li>媒体托管 – 构建托管视频、照片或音乐上传和下载的高可用性、冗余式、可扩展基础设施。</li><li>软件传输 – 托管可供客户下载的软件应用程序。</li></ol><p>下一个问题，对象存储服务很多公司都有，为什么选择S3：</p><ol><li>无限容量 - 单个bucket没有容量限制，可以无限存储，但是单个对象最大为5T</li><li>对象版本控制 - 版本控制无需解释吧</li><li>对象生命周期控制 - 例如对象只存储7天，自动删除</li><li>智能分层 - 短时间频繁访问的数据，一周后不一定还有人访问，可以将不频繁访问的数据自动归档节约成本</li><li>可以托管静态网站 - 例如放入html可以当个网站来用</li><li>精细的权限控制</li><li>可以使用 BitTorrent 协议</li><li>使用基于标准的 REST 接口</li><li>在指定年度内为对象提供 99.999999999% 的持久性和 99.99% 的可用性</li><li>落盘加密,Amazon S3 在将对象保存到其磁盘上之前对其进行加密，并在下载对象时对其进行解密。</li></ol><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li>存储桶 - bucket 存储对象的容器</li><li>对象 - object 要存储的对象（文件，音频，视频等）</li><li>键 - key 对象存入存储桶后唯一的标识符</li><li>区域 - 你选择的AWS S3服务的所在位置</li></ul><h3 id="常见的操作"><a href="#常见的操作" class="headerlink" title="常见的操作"></a>常见的操作</h3><ul><li>创建存储桶 – 创建和命名要在其中存储对象的您自己的存储桶。</li><li>写入对象 – 通过创建或覆盖对象存储数据。在编写对象时，在存储桶的命名空间中指定唯一键值。此时，也适合为对象指定任何您想要的访问控制。</li><li>读取对象 – 读回数据。您可以通过 HTTP 或 BitTorrent 下载数据。</li><li>删除对象 – 删除您的某些数据。</li><li>列出键 – 列出包含在某个存储桶中的键。您可以基于前缀筛选键列表。</li></ul><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><ol><li>分区中bucket名字必须唯一,只能由小写字母、数字、句点 (.) 和连字符 (-) 组成。<br>分区唯一 ，分区是一组区域。AWS 目前有三个分区：aws（标准区域）、aws-cn（中国区域）和 aws-us-gov（AWS GovCloud [美国] 区域）</li><li>单个文件5T大小限制</li><li>每个 AWS 账户中创建多达 100 个存储桶,通过提交服务限制提高请求将账户的存储桶限制提高至最多 1,000 个存储桶</li><li>存储桶归创建它的 AWS 账户所有。存储桶所有权不可转让</li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>使用S3最重要就是注意S3的权限，千万不能把机密的bucket公开可访问。创建bucket时默认是不公开的。</li><li>因为bucket名字是唯一的，可能某些原因你删除了bucket，再想创建时可能就被其他人提前创建，而导致你无法创建。跟进一步的问题可能是，程序代码中有写到向这个S3发送东西，会造成意想不到的事。尤其是bucket的访问日志存储桶。所以如果bucket后续还要使用，请不要删除。</li><li>S3存储是最终一致性的，存储了一个对象，马上去访问不一定能拿到你要的结果，但最终会是你要的结果。A和B同时存储一个对象</li></ol><h3 id="AWS-集成"><a href="#AWS-集成" class="headerlink" title="AWS 集成"></a>AWS 集成</h3><p>可以单独使用 Amazon S3，也可以将其与一个或多个 Amazon 产品配合使用。以下是最常用于 Amazon S3 的产品：</p><ul><li>Amazon EC2</li><li>Amazon EMR</li><li>Amazon SQS</li><li>Amazon CloudFront</li></ul><p>以上完全基于<a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">AWS官方文档</a>，并结合自身理解创作</p><p><a href="https://github.com/HKCM/HKCM.github.io/issues" target="_blank" rel="noopener">全文有任何错误或疏漏，烦请不吝指正</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> S3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS S3 </tag>
            
            <tag> S3基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（11）临时文件mktemp和trap</title>
      <link href="2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8811%EF%BC%89%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6mktemp%E5%92%8Ctrap/"/>
      <url>2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8811%EF%BC%89%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6mktemp%E5%92%8Ctrap/</url>
      
        <content type="html"><![CDATA[<p>描述: 临时文件安全性以及mktemp和trap的使用</p><a id="more"></a><h3 id="mktemp"><a href="#mktemp" class="headerlink" title="mktemp"></a>mktemp</h3><p><code>mktemp</code>命令可生成的临时文件名为随机值，且权限是只有用户本人可读写的临时文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mktemp</span><br><span class="line">/tmp/tmp.4GcsWSG4vj</span><br><span class="line"></span><br><span class="line">$ ls -l /tmp/tmp.4GcsWSG4vj</span><br><span class="line">-rw------- 1 ruanyf ruanyf 0 12月 28 12:49 /tmp/tmp.4GcsWSG4vj</span><br></pre></td></tr></table></figure><p>Bash 脚本使用<code>mktemp</code>命令的用法如下.为了确保临时文件创建成功，<code>mktemp</code>命令后面最好使用 <code>OR</code>运算符（||），保证创建失败时退出脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">TMPFILE=$(mktemp) || exit 1</span><br><span class="line">echo &quot;Our temp file is $TMPFILE&quot;</span><br></pre></td></tr></table></figure><p>参数</p><ul><li>-d: 参数可以创建一个临时目录。</li><li>-p: 参数可以指定临时文件所在的目录。默认是使用$TMPDIR环境变量指定的目录，如果这个变量没设置，那么使用/tmp目录。</li><li>-t: 参数可以指定临时文件的文件名模板，模板的末尾必须至少包含三个连续的X字符，表示随机字符，建议至少使用六个X。默认的文件名模板是tmp.后接十个随机字符。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ TMPDIR=$(mktemp -d)</span><br><span class="line">$ echo $&#123;TMPDIR&#125;</span><br><span class="line">/tmp/tmp.Wcau5UjmN6</span><br><span class="line"></span><br><span class="line">$ mktemp -p /home/ruanyf/</span><br><span class="line">/home/ruanyf/tmp.FOKEtvs2H3</span><br><span class="line"></span><br><span class="line">$ mktemp -t mytemp.XXXXXXX</span><br><span class="line">/tmp/mytemp.yZ1HgZV</span><br></pre></td></tr></table></figure></li></ul><h3 id="trap"><a href="#trap" class="headerlink" title="trap"></a>trap</h3><p><code>trap</code>命令用来在 Bash 脚本中响应系统信号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ trap -l</span><br><span class="line"> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1</span><br><span class="line">11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM</span><br><span class="line">16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP</span><br><span class="line">21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR</span><br><span class="line">31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-164) SIGRTMAX</span><br></pre></td></tr></table></figure><p><code>trap</code>的命令格式如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ trap [动作] [信号1] [信号2] ...</span><br></pre></td></tr></table></figure><p>上面代码中，“动作”是一个 Bash 命令，“信号”常用的有以下几个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HUP：编号1，脚本与所在的终端脱离联系。</span><br><span class="line">INT：编号2，用户按下 Ctrl + C，意图让脚本终止运行。</span><br><span class="line">QUIT：编号3，用户按下 Ctrl + 斜杠，意图退出脚本。</span><br><span class="line">KILL：编号9，该信号用于杀死进程。</span><br><span class="line">TERM：编号15，这是kill命令发出的默认信号。</span><br><span class="line">EXIT：编号0，这不是系统信号，而是 Bash 脚本特有的信号，不管什么情况，只要退出脚本就会产生。</span><br></pre></td></tr></table></figure><p><code>trap</code>命令响应EXIT信号的写法如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ trap &apos;rm -f &quot;$TMPFILE&quot;&apos; EXIT</span><br></pre></td></tr></table></figure><p>上面命令中，脚本遇到<code>EXIT</code>信号时，就会执行<code>rm -f &quot;$TMPFILE&quot;</code>。</p><p><code>trap</code> 命令的常见使用场景，就是在 Bash 脚本中指定退出时执行的清理命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">trap &apos;rm -f &quot;$TMPFILE&quot;&apos; EXIT</span><br><span class="line"></span><br><span class="line">TMPFILE=$(mktemp) || exit 1</span><br><span class="line">ls /etc &gt; $TMPFILE</span><br><span class="line">if grep -qi &quot;kernel&quot; $TMPFILE; then</span><br><span class="line">  echo &apos;find&apos;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>上面代码中，不管是脚本正常执行结束，还是用户按 <code>Ctrl + C</code> 终止，都会产生<code>EXIT</code>信号，从而触发删除临时文件。</p><p><strong>注意，<code>trap</code>命令必须放在脚本的开头。否则，它上方的任何命令导致脚本退出，都不会被它捕获。</strong></p><p>如果<code>trap</code>需要触发多条命令，可以封装一个 Bash 函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function egress &#123;</span><br><span class="line">  command1</span><br><span class="line">  command2</span><br><span class="line">  command3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">trap egress EXIT</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（10）脚本设置set和shopt</title>
      <link href="2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8810%EF%BC%89%E8%84%9A%E6%9C%AC%E8%AE%BE%E7%BD%AE/"/>
      <url>2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%8810%EF%BC%89%E8%84%9A%E6%9C%AC%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>描述: 脚本设置set,shopt和排错</p><a id="more"></a><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p><code>set</code>命令用来修改子 Shell 环境的运行参数，即定制环境。一共有十几个参数可以定制，<a href="https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html" target="_blank" rel="noopener">官方手册</a>有完整清单，本章介绍其中最常用的几个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set -u # 脚本中遇到未定义变量时报错并退出</span><br><span class="line">set -x # 运行代码前先将代码输出，排错推荐</span><br><span class="line"></span><br><span class="line"># 到 -e遇到管道命令时只有管道的最后命令成功-e就会认为成功</span><br><span class="line">set -e # 返回值不为0时终止脚本</span><br><span class="line">set -o pipefail # 解决-e的管道问题</span><br></pre></td></tr></table></figure><p>如果命令可能失败，但是希望继续运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">command || true</span><br><span class="line"># 或在某段代码前暂时关闭set -e</span><br><span class="line">set +e</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">set -e</span><br></pre></td></tr></table></figure><p>最后推荐，写脚本时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set -euxo pipefail</span><br><span class="line"># 或</span><br><span class="line">set -eux</span><br><span class="line">set -o pipefail</span><br></pre></td></tr></table></figure><h3 id="shopt"><a href="#shopt" class="headerlink" title="shopt"></a>shopt</h3><p><code>set</code>是从 <code>Ksh</code> 继承的，属于 <code>POSIX</code> 规范的一部分，而<code>shopt</code>是 <code>Bash</code> 特有的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ shopt         # 查看所有参数的状态</span><br><span class="line">$ shopt &lt;p&gt;     # 查看所有参数p的状态</span><br><span class="line"></span><br><span class="line">$ shopt -s &lt;p&gt;  # 开启参数p</span><br><span class="line">$ shopt -u &lt;p&gt;  # 关闭参数p</span><br></pre></td></tr></table></figure><p>目前我还是习惯用set,运行脚本前使用<code>bash -n script</code>可以检查脚本语法是否正确</p><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（9）函数</title>
      <link href="2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%889%EF%BC%89%E5%87%BD%E6%95%B0/"/>
      <url>2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%889%EF%BC%89%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>描述: Bash脚本中的函数</p><a id="more"></a><h3 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h3><p>函数定义一定要在函数使用之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function today() &#123;</span><br><span class="line">  echo -n &quot;Today&apos;s date is: &quot;</span><br><span class="line">  date +&quot;%A, %B %-d, %Y&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数返回值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function func_return_value &#123;</span><br><span class="line">  return 10</span><br><span class="line">&#125;</span><br><span class="line">$ func_return_value</span><br><span class="line">$ echo &quot;Value returned by function is: $?&quot;</span><br><span class="line">Value returned by function is: 10</span><br></pre></td></tr></table></figure><p>函数内变量<code>local</code>,很好理解函数内变量只能被函数使用，非函数内变量都是全局变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">foo=0</span><br><span class="line">function fn () &#123;</span><br><span class="line">  local bar=0</span><br><span class="line">  bar=1</span><br><span class="line">  foo=1</span><br><span class="line">  echo &quot;fn: foo = $foo&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fn</span><br><span class="line">echo &quot;global: foo = $foo&quot;</span><br></pre></td></tr></table></figure><p>查看现有函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有函数和定义</span><br><span class="line">$ declare -f </span><br><span class="line"></span><br><span class="line"># 查看所有函数</span><br><span class="line">$ declare -F </span><br><span class="line"></span><br><span class="line"># 查看指定函数</span><br><span class="line">$ declare -f function</span><br></pre></td></tr></table></figure><p>删除函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset -f functionName</span><br></pre></td></tr></table></figure><p>常用函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function usage() &#123;</span><br><span class="line">  echo "Usage:</span><br><span class="line"></span><br><span class="line">./deploy.sh -p &lt;profile&gt; -k &lt;keypair&gt;</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">  ./deploy.sh -p &lt;profile&gt; -k &lt;keypair&gt;</span><br><span class="line">"</span><br><span class="line">  exit 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while getopts "p:k:h" opt; do</span><br><span class="line">  case "$opt" in</span><br><span class="line">  p) PROFILE="$OPTARG" ;;</span><br><span class="line">  k) KeyName="$OPTARG" ;;</span><br><span class="line">  *) usage ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（8）循环语句</title>
      <link href="2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%888%EF%BC%89%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
      <url>2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%888%EF%BC%89%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<p>描述: while</p><a id="more"></a><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">number=0</span><br><span class="line">while [ &quot;$number&quot; -lt 10 ]; do</span><br><span class="line">  echo &quot;Number = $number&quot;</span><br><span class="line">  number=$((number + 1))</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="until"><a href="#until" class="headerlink" title="until"></a>until</h3><p>until循环与while循环恰好相反，只要不符合判断条件（判断条件失败），就不断循环执行指定的语句。一旦符合判断条件，就退出循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">number=0</span><br><span class="line">until [ &quot;$number&quot; -ge 10 ]; do</span><br><span class="line">  echo &quot;Number = $number&quot;</span><br><span class="line">  number=$((number + 1))</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="for…in循环"><a href="#for…in循环" class="headerlink" title="for…in循环"></a>for…in循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in $(ls *.md); do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (( i=0; i&lt;5; i=i+1 )); do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="break，continue"><a href="#break，continue" class="headerlink" title="break，continue"></a>break，continue</h3><p><code>break</code>命令立即终止循环，程序继续执行循环块之后的语句，即不再执行剩下的循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for number in 1 2 3 4 5 6</span><br><span class="line">do</span><br><span class="line">  echo &quot;number is $number&quot;</span><br><span class="line">  if [ &quot;$number&quot; = &quot;3&quot; ]; then</span><br><span class="line">    break</span><br><span class="line">  fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>上面例子只会打印3行结果。一旦变量<code>$number</code>等于3，就会跳出循环，不再继续执行。</p><p><code>continue</code>命令立即终止本轮循环，开始执行下一轮循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">while read -p &quot;What file do you want to test?&quot; filename</span><br><span class="line">do</span><br><span class="line">  if [ ! -e &quot;$filename&quot; ]; then</span><br><span class="line">    echo &quot;The file does not exist.&quot;</span><br><span class="line">    continue</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  echo &quot;You entered a valid file..&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p><code>select</code>结构主要用来生成简单的菜单。它的语法与<code>for...in</code>循环基本一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo &quot;Which Operating System do you like?&quot;</span><br><span class="line"></span><br><span class="line">select os in Ubuntu LinuxMint Windows8 Windows7 WindowsXP</span><br><span class="line">do</span><br><span class="line">  case $os in</span><br><span class="line">    &quot;Ubuntu&quot;|&quot;LinuxMint&quot;)</span><br><span class="line">      echo &quot;I also use $os.&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;Windows8&quot; | &quot;Windows7&quot; | &quot;WindowsXP&quot;)</span><br><span class="line">      echo &quot;Why don&apos;t you try Linux?&quot;</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">      echo &quot;Invalid entry.&quot;</span><br><span class="line">      break</span><br><span class="line">    ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（7）条件判断if和case</title>
      <link href="2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%887%EF%BC%89%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%ADif%E5%92%8Ccase/"/>
      <url>2020/11/11/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%887%EF%BC%89%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%ADif%E5%92%8Ccase/</url>
      
        <content type="html"><![CDATA[<p>描述: if和case</p><a id="more"></a><h3 id="if-结构"><a href="#if-结构" class="headerlink" title="if 结构"></a>if 结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if commands; then</span><br><span class="line">  commands</span><br><span class="line">[elif commands; then</span><br><span class="line">  commands...]</span><br><span class="line">[else</span><br><span class="line">  commands]</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>if 还能与逻辑运算结合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 使用否定操作符!时，最好用圆括号确定转义的范围 -a </span><br><span class="line">if [ ! \( $INT -ge $MIN_VAL -a $INT -le $MAX_VAL \) ]; then</span><br><span class="line">    echo &quot;$INT is outside $MIN_VAL to $MAX_VAL.&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;$INT is in range.&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>AND运算：符号&amp;&amp;，也可使用参数-a。<br>OR运算：符号||，也可使用参数-o。<br>NOT运算：符号!。</p><h3 id="文件和目录判定"><a href="#文件和目录判定" class="headerlink" title="文件和目录判定"></a>文件和目录判定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[ -e filename ]  如果 filename存在，则为真  [ -e /var/log/syslog ]</span><br><span class="line">[ -d filename ]  如果 filename为目录，则为真  [ -d /tmp/mydir ]</span><br><span class="line">[ -f filename ]  如果 filename为常规文件，则为真  [ -f /usr/bin/grep ]</span><br><span class="line">[ -L filename ]  如果 filename为符号链接，则为真  [ -L /usr/bin/grep ]</span><br><span class="line">[ -r filename ]  如果 filename可读，则为真  [ -r /var/log/syslog ]</span><br><span class="line">[ -w filename ]  如果 filename可写，则为真  [ -w /var/mytmp.txt ]</span><br><span class="line">[ -x filename ]  如果 filename可执行，则为真  [ -L /usr/bin/grep ]</span><br><span class="line">[ filename1 -nt filename2 ] 如果 filename1比 filename2新，则为真  [ /tmp/install/etc/services -nt /etc/services ]</span><br><span class="line">[ filename1 -ot filename2 ] 如果 filename1比 filename2旧，则为真  [ /boot/bzImage -ot arch/i386/boot/bzImage ]</span><br></pre></td></tr></table></figure><h3 id="字符串比较运算符"><a href="#字符串比较运算符" class="headerlink" title="字符串比较运算符"></a>字符串比较运算符</h3><p>请注意引号的使用，这是防止空格扰乱代码的好方法</p><p><code>[[]]</code> 和 <code>[]</code>的区别是双括号内支持正则表达式, <code>=~</code>是正则比较运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ string ] 如果string不为空（长度大于0），则判断为真 [ &quot;$&#123;myvar1&#125;&quot; ]</span><br><span class="line">[ -z string ] 如果 string长度为零，则为真  [ -z &quot;$&#123;myvar1&#125;&quot; ]</span><br><span class="line">[ -n string ] 如果 string长度非零，则为真  [ -n &quot;$&#123;myvar1&#125;&quot; ]</span><br><span class="line">[ string1 = string2 ] 如果 string1与 string2相同，则为真  [ &quot;$&#123;myvar1&#125;&quot; = &quot;$&#123;myvar2&#125;&quot; ]</span><br><span class="line">[ string1 == string2 ] 如果 string1与 string2相同，则为真  [ &quot;$&#123;myvar1&#125;&quot; == &quot;$&#123;myvar2&#125;&quot; ]</span><br><span class="line">[ string1 != string2 ] 如果 string1与 string2不同，则为真  [ &quot;$&#123;myvar1&#125;&quot; != &quot;$&#123;myvar2&#125;&quot; ]</span><br><span class="line">[[ string1 =~ string2 ]] 如果 string2是 string1的一部分，则为真  [[ &quot;$&#123;myvar1&#125;&quot; =~ &quot;$&#123;myvar2&#125;&quot; ]]</span><br><span class="line">[[ string1 = *string2* ]] 如果 string2是 string1的一部分，则为真  [[ &quot;$&#123;myvar1&#125;&quot; =~ *&quot;$&#123;myvar2&#125;&quot;* ]]</span><br></pre></td></tr></table></figure><h3 id="算术比较运算符"><a href="#算术比较运算符" class="headerlink" title="算术比较运算符"></a>算术比较运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ num1 -eq num2 ] 等于 [ 3 -eq $&#123;mynum&#125; ]</span><br><span class="line">[ num1 -ne num2 ] 不等于 [ 3 -ne $&#123;mynum&#125; ]</span><br><span class="line">[ num1 -lt num2 ] 小于 [ 3 -lt $&#123;mynum&#125; ]</span><br><span class="line">[ num1 -le num2 ] 小于或等于 [ 3 -le $&#123;mynum&#125; ]</span><br><span class="line">[ num1 -gt num2 ] 大于 [ 3 -gt $&#123;mynum&#125; ]</span><br><span class="line">[ num1 -ge num2 ] 大于或等于 [ 3 -ge $&#123;mynum&#125; ]</span><br></pre></td></tr></table></figure><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">case expression in</span><br><span class="line">  pattern )</span><br><span class="line">    commands ;;</span><br><span class="line">  pattern )</span><br><span class="line">    commands ;;</span><br><span class="line">  * )</span><br><span class="line">    commands ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>case的匹配模式可以使用各种通配符，下面是一些例子。</p><ul><li>a)：匹配a。</li><li>a|b)：匹配a或b。</li><li>[[:alpha:]])：匹配单个字母。</li><li>???)：匹配3个字符的单词。</li><li>*.txt)：匹配.txt结尾。</li><li>*)：匹配任意输入，通过作为case结构的最后一个模式。</li></ul><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（6）脚本基础参数及用户输入</title>
      <link href="2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%886%EF%BC%89%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80%E5%8F%82%E6%95%B0%E5%8F%8A%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/"/>
      <url>2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%886%EF%BC%89%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80%E5%8F%82%E6%95%B0%E5%8F%8A%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>描述: Bash脚本入门</p><a id="more"></a><h3 id="Shebang-行"><a href="#Shebang-行" class="headerlink" title="Shebang 行"></a>Shebang 行</h3><p>  脚本的第一行通常是指定解释器，Bash 脚本的解释器一般是<code>/bin/sh</code>或<code>/bin/bash</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># 或者</span><br><span class="line">#!/bin/bash</span><br></pre></td></tr></table></figure><p>  如果 Bash 解释器不放在目录<code>/bin</code>，脚本就无法执行了。为了保险，可以写成下面这样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br></pre></td></tr></table></figure><p>  通过环境变量寻找<code>bash</code>所在位置并执行</p><h3 id="脚本执行位置"><a href="#脚本执行位置" class="headerlink" title="脚本执行位置"></a>脚本执行位置</h3><p>当写了一个经常使用的脚本时，可以在主目录新建一个<code>~/bin</code>子目录，专门存放可执行脚本，然后把<code>~/bin</code>加入<code>$PATH</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:~/bin</span><br></pre></td></tr></table></figure><p>上面命令改变环境变量<code>$PATH</code>，将<code>~/bin</code>添加到<code>$PATH</code>的末尾。可以将这一行加到<code>~/.bashrc</code>文件里面，然后重新加载一次<code>.bashrc</code>，这个配置就可以生效了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/.bashrc</span><br></pre></td></tr></table></figure><p>以后不管在什么目录，直接输入脚本文件名，脚本就会执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ script.sh</span><br></pre></td></tr></table></figure><h3 id="脚本参数"><a href="#脚本参数" class="headerlink" title="脚本参数"></a>脚本参数</h3><p>  脚本文件内部，可以使用特殊变量，引用参数。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`$0`：脚本文件名，即script.sh。</span><br><span class="line">`$1~$9`：对应脚本的第一个参数到第九个参数。</span><br><span class="line">`$#`：参数的总数。</span><br><span class="line">`$@`：全部的参数，参数之间使用空格分隔。</span><br><span class="line">`$*`：全部的参数，参数之间使用变量$IFS值的第一个字符分隔，默认为空格，但是可以自定义。</span><br></pre></td></tr></table></figure></p><p>  下面是一个脚本内部读取命令行参数的例子。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># script.sh</span><br><span class="line"></span><br><span class="line">echo &quot;全部参数：&quot; $@</span><br><span class="line">echo &quot;命令行参数数量：&quot; $#</span><br><span class="line">echo &apos;$0 = &apos; $0</span><br><span class="line">echo &apos;$1 = &apos; $1</span><br><span class="line">echo &apos;$2 = &apos; $2</span><br><span class="line">echo &apos;$3 = &apos; $3</span><br></pre></td></tr></table></figure></p><p>  执行结果如下。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ./script.sh a b c</span><br><span class="line">全部参数：a b c</span><br><span class="line">命令行参数数量：3</span><br><span class="line">$0 =  script.sh</span><br><span class="line">$1 =  a</span><br><span class="line">$2 =  b</span><br><span class="line">$3 =  c</span><br></pre></td></tr></table></figure></p><p>  用户可以输入任意数量的参数，利用<code>for</code>循环，可以读取每一个参数。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in &quot;$@&quot;; do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><h3 id="getopts-命令"><a href="#getopts-命令" class="headerlink" title="getopts 命令"></a>getopts 命令</h3><p>  <code>getopts</code>命令用在脚本内部，可以解析复杂的脚本命令行参数，通常与<code>while</code>循环一起使用，取出脚本所有的带有前置连词线（-）的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">while getopts &apos;lhsa:&apos; OPTION; do</span><br><span class="line">  case &quot;$OPTION&quot; in</span><br><span class="line">    l) echo &quot;linuxconfig&quot;;;</span><br><span class="line">    s) echo &quot;s stands for s&quot;;;</span><br><span class="line">    a) avalue=&quot;$OPTARG&quot;</span><br><span class="line">       echo &quot;The value provided is $OPTARG&quot;</span><br><span class="line">       ;;</span><br><span class="line">    h) echo &quot;script usage: $(basename $0) [-l] [-s] [-h] [-a somevalue]&quot; &gt;&amp;2 ;;</span><br><span class="line">    *)</span><br><span class="line">      echo &quot;script usage: $(basename $0) [-l] [-s] [-h] [-a somevalue]&quot; &gt;&amp;2 # 消息重定向到标准错误里面</span><br><span class="line">      exit 1</span><br><span class="line">      ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br><span class="line">shift &quot;$(($OPTIND - 1))&quot; # 移除参数</span><br></pre></td></tr></table></figure><h3 id="read-命令接受用户输入"><a href="#read-命令接受用户输入" class="headerlink" title="read 命令接受用户输入"></a>read 命令接受用户输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo -n &quot;输入一些文本 &gt; &quot;</span><br><span class="line">read text</span><br><span class="line">echo &quot;你的输入：$text&quot;</span><br><span class="line"></span><br><span class="line">常用选项</span><br><span class="line"># -t 设置等待时间</span><br><span class="line"># -p 设置提示信息</span><br><span class="line"># -s 使得用户的输入不显示在屏幕上，这常常用于输入密码或保密信息。</span><br></pre></td></tr></table></figure><p>read命令除了读取键盘输入，可以用来读取文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">filename=&apos;/etc/hosts&apos;</span><br><span class="line"></span><br><span class="line">while read myline</span><br><span class="line">do</span><br><span class="line">  echo &quot;$myline&quot;</span><br><span class="line">done &lt; $filename</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（5）history</title>
      <link href="2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%885%EF%BC%89history/"/>
      <url>2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%885%EF%BC%89history/</url>
      
        <content type="html"><![CDATA[<p>描述: 介绍history命令</p><a id="more"></a><ol><li><p>history<br><code>history</code>命令能显示操作历史，即用户目录下<code>.bash_history</code>文件的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ history     # 能显示过去执行过的命令</span><br><span class="line">$ history -c  # 清除历史操作</span><br></pre></td></tr></table></figure></li><li><p><code>HISTTIMEFORMAT</code>环境变量</p><p>通过设置<code>HISTTIMEFORMAT</code>环境变量，可以让<code>history</code>显示操作时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 将HISTTIMEFORMAT写入/etc/profile可以全局通用</span><br><span class="line">$ echo &apos;export HISTTIMEFORMAT=&quot;%F %T  `whoami`: &quot;&apos; &gt;&gt; /etc/profile &amp;&amp; source /etc/profile</span><br><span class="line"></span><br><span class="line">HISTTIMEFORMAT=&quot;%Y-%m-%d:%H-%M-%S `whoami`:  &quot;    #记录每条历史命令的执行时间和执行者        </span><br><span class="line"></span><br><span class="line">export HISTTIMEFORMAT    # 仅对当前用户有效，应设置全局环境变量/etc/profile或用户.bashrc</span><br><span class="line"></span><br><span class="line"># 其中： date +%Y-%m-%d    ==2017-06-09</span><br><span class="line"># </span><br><span class="line"># %Y:4位数的年份；        </span><br><span class="line"># </span><br><span class="line"># %m:2位数的月份数；        </span><br><span class="line"># </span><br><span class="line"># %d:2位数的一个月中的日期数；        </span><br><span class="line"># </span><br><span class="line"># %H：2位数的小时数（24小时制）；        </span><br><span class="line"># </span><br><span class="line"># %M：2位数的分钟数；        </span><br><span class="line"># </span><br><span class="line"># %S：2位数的秒数</span><br></pre></td></tr></table></figure></li><li><p>size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HISTFILESIZE=2000   # 设置保存历史命令的文件大小        </span><br><span class="line"></span><br><span class="line">HISTSIZE=2000       # 保存历史命令条数        </span><br><span class="line"></span><br><span class="line">export HISTSIZE=0   # 将不保存操作记录</span><br></pre></td></tr></table></figure></li></ol><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
            <tag> shell技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（4）快捷键</title>
      <link href="2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%884%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>2020/11/10/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%884%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>描述: Bash命令行快捷键</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+l:清除屏幕</span><br><span class="line">Ctrl+a:跳到本行的行首</span><br><span class="line">Ctrl+e:跳到页尾</span><br><span class="line">Ctrl+u:删除当前光标前面的文字 （还有剪切功能）</span><br><span class="line">Ctrl+k:删除当前光标后面的文字(还有剪切功能)</span><br><span class="line">Ctrl+w:删除当前光标前一个单词</span><br><span class="line">Ctrl+y:粘贴</span><br><span class="line">Ctrl+c:终止当前命令</span><br><span class="line">Ctrl+d:删除当前字符，没有字符时会退出shell</span><br><span class="line">Alt+f:移动光标到后一个单词</span><br><span class="line">Alt+b:移动光标到前一个单词</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（3）字符串</title>
      <link href="2020/11/09/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%883%EF%BC%89%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>2020/11/09/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%883%EF%BC%89%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>描述:Bash基础入门（3）之字符串</p><a id="more"></a><h3 id="字符串的长度"><a href="#字符串的长度" class="headerlink" title="字符串的长度"></a>字符串的长度</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ myPath=/home/cam/book/long.file.name</span><br><span class="line">$ echo $&#123;#myPath&#125;</span><br><span class="line">29</span><br></pre></td></tr></table></figure><h3 id="子字符串"><a href="#子字符串" class="headerlink" title="子字符串"></a>子字符串</h3><p>语法<code>${varname:offset:length}</code>返回变量<code>$varname</code>的子字符串，从位置<code>offset</code>开始（从0开始计算），长度为<code>length</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ count=frogfootman</span><br><span class="line">$ echo $&#123;count:4:4&#125;</span><br><span class="line">foot</span><br><span class="line">$ echo $&#123;count:4&#125;</span><br><span class="line">footman</span><br><span class="line"></span><br><span class="line">$ foo=&quot;This string is long.&quot;</span><br><span class="line">$ echo $&#123;foo: -5&#125;</span><br><span class="line">long.</span><br><span class="line">$ echo $&#123;foo: -5:2&#125;</span><br><span class="line">lo</span><br><span class="line">$ echo $&#123;foo: -5:-2&#125;</span><br><span class="line">lon</span><br></pre></td></tr></table></figure><h3 id="搜索和替换"><a href="#搜索和替换" class="headerlink" title="搜索和替换"></a>搜索和替换</h3><ol><li><p>字符串头部的模式匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 如果 pattern 匹配变量 variable 的开头，</span><br><span class="line"># 删除最短匹配（非贪婪匹配）的部分，返回剩余部分</span><br><span class="line">$&#123;variable#pattern&#125;</span><br><span class="line"></span><br><span class="line"># 如果 pattern 匹配变量 variable 的开头，</span><br><span class="line"># 删除最长匹配（贪婪匹配）的部分，返回剩余部分</span><br><span class="line">$&#123;variable##pattern&#125;</span><br><span class="line"></span><br><span class="line">$ myPath=/home/cam/book/long.file.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;myPath#/*/&#125;</span><br><span class="line">cam/book/long.file.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;myPath##/*/&#125;</span><br><span class="line">long.file.name</span><br><span class="line"></span><br><span class="line"># 示例：匹配文件名</span><br><span class="line">$ path=/home/cam/book/long.file.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path##*/&#125;</span><br><span class="line">long.file.name</span><br><span class="line"></span><br><span class="line"># 示例：匹配替换</span><br><span class="line"># 模式必须出现在字符串的开头</span><br><span class="line">$&#123;variable/#pattern/string&#125;</span><br><span class="line"></span><br><span class="line">$ foo=JPG.JPG</span><br><span class="line">$ echo $&#123;foo/#JPG/jpg&#125;</span><br><span class="line">jpg.JPG</span><br></pre></td></tr></table></figure><p>如果匹配不成功，则返回原始字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ phone=&quot;555-456-1414&quot;</span><br><span class="line">$ echo $&#123;phone#444&#125;</span><br><span class="line">555-456-1414</span><br></pre></td></tr></table></figure></li><li><p>字符串尾部的模式匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 如果 pattern 匹配变量 variable 的结尾，</span><br><span class="line"># 删除最短匹配（非贪婪匹配）的部分，返回剩余部分</span><br><span class="line">$&#123;variable%pattern&#125;</span><br><span class="line"></span><br><span class="line"># 如果 pattern 匹配变量 variable 的结尾，</span><br><span class="line"># 删除最长匹配（贪婪匹配）的部分，返回剩余部分</span><br><span class="line">$&#123;variable%%pattern&#125;</span><br><span class="line"></span><br><span class="line">$ path=/home/cam/book/long.file.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path%.*&#125;</span><br><span class="line">/home/cam/book/long.file</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path%%.*&#125;</span><br><span class="line">/home/cam/book/long</span><br><span class="line"></span><br><span class="line"># 示例：匹配目录</span><br><span class="line">$ path=/home/cam/book/long.file.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path%/*&#125;</span><br><span class="line">/home/cam/book</span><br><span class="line"></span><br><span class="line"># 示例：匹配替换</span><br><span class="line"># 模式必须出现在字符串的结尾</span><br><span class="line">$&#123;variable/%pattern/string&#125;</span><br><span class="line"></span><br><span class="line">$ foo=JPG.JPG</span><br><span class="line">$ echo $&#123;foo/%JPG/jpg&#125;</span><br><span class="line">JPG.jpg</span><br></pre></td></tr></table></figure></li><li><p>任意位置的模式匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 如果 pattern 匹配变量 variable 的一部分，</span><br><span class="line"># 最长匹配（贪婪匹配）的那部分被 string 替换，但仅替换第一个匹配</span><br><span class="line">$&#123;variable/pattern/string&#125;</span><br><span class="line"></span><br><span class="line"># 如果 pattern 匹配变量 variable 的一部分，</span><br><span class="line"># 最长匹配（贪婪匹配）的那部分被 string 替换，所有匹配都替换</span><br><span class="line">$&#123;variable//pattern/string&#125;</span><br><span class="line"></span><br><span class="line">$ path=/home/cam/foo/foo.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path/foo/bar&#125;</span><br><span class="line">/home/cam/bar/foo.name</span><br><span class="line"></span><br><span class="line">$ echo $&#123;path//foo/bar&#125;</span><br><span class="line">/home/cam/bar/bar.name</span><br><span class="line"></span><br><span class="line"># 示例：将分隔符从:换成换行符</span><br><span class="line">$ echo -e $&#123;PATH//:/&apos;\n&apos;&#125;</span><br><span class="line">/usr/local/bin</span><br><span class="line">/usr/bin</span><br><span class="line">/bin</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>改变大小写<br>下面的语法可以改变变量的大小写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 转为大写</span><br><span class="line">$&#123;varname^^&#125;</span><br><span class="line"></span><br><span class="line"># 转为小写</span><br><span class="line">$&#123;varname,,&#125;</span><br><span class="line">下面是一个例子。</span><br><span class="line"></span><br><span class="line">$ foo=heLLo</span><br><span class="line">$ echo $&#123;foo^^&#125;</span><br><span class="line">HELLO</span><br><span class="line">$ echo $&#123;foo,,&#125;</span><br><span class="line">hello</span><br></pre></td></tr></table></figure></li></ol><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（2）变量相关</title>
      <link href="2020/11/09/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E5%8F%98%E9%87%8F%E7%9B%B8%E5%85%B3/"/>
      <url>2020/11/09/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E5%8F%98%E9%87%8F%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>描述:Bash基础入门（2）之环境变量</p><a id="more"></a><h3 id="查看环境变量"><a href="#查看环境变量" class="headerlink" title="查看环境变量"></a>查看环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ env</span><br><span class="line"># 或者</span><br><span class="line">$ printenv</span><br></pre></td></tr></table></figure><h3 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3><p>定义变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ variable=value          # 定义变量</span><br><span class="line">$ myvar=&quot;hello world&quot;     # 如果变量的值包含空格，则必须将值放在引号中</span><br><span class="line">$ e=$(ls -l foo.txt)      # 变量值可以是命令的执行结果</span><br><span class="line">$ foo=1;bar=2             # 定义多个变量</span><br></pre></td></tr></table></figure><p>注意，变量区分大小写，变量也会被覆盖</p><h3 id="读取变量"><a href="#读取变量" class="headerlink" title="读取变量"></a>读取变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ a=1</span><br><span class="line">$ echo log_$&#123;a&#125;</span><br><span class="line">log_1</span><br></pre></td></tr></table></figure><p>如果变量的值本身也是变量，可以使用${!varname}的语法，读取最终的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ a=SHELL</span><br><span class="line">$ echo $a</span><br><span class="line">SHELL</span><br><span class="line">$ echo $&#123;!a&#125;</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><h3 id="数组变量"><a href="#数组变量" class="headerlink" title="数组变量"></a>数组变量</h3><p>声明变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ array[0]=a</span><br><span class="line">$ array[1]=b</span><br><span class="line">$ array[2]=c</span><br><span class="line">$ array[3]=d</span><br><span class="line"></span><br><span class="line">$ array=(a b c d)</span><br><span class="line"></span><br><span class="line">$ files=($(ls *.txt))</span><br></pre></td></tr></table></figure><p>读取数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 读取单个元素</span><br><span class="line">$ echo $&#123;array[1]&#125;</span><br><span class="line"></span><br><span class="line"># 读取所有元素元素</span><br><span class="line">$ echo $&#123;array[@]&#125;</span><br><span class="line"></span><br><span class="line"># 配合for循环读取所有元素,一定要放在双引号内，避免数组中元素有空格出现意料之外的结果</span><br><span class="line">for i in &quot;$&#123;array[@]&#125;&quot;; do</span><br><span class="line">  echo $&#123;i&#125;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>如果直接读取数组变量不带下标的话，会返回下标为0的元素</p><p>数组长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#array[@]&#125;</span><br><span class="line">$&#123;#array[*]&#125;</span><br><span class="line"></span><br><span class="line"># 字符串长度也是一样的语法格式</span><br><span class="line">$&#123;#myval&#125;</span><br></pre></td></tr></table></figure><p>提取数组成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 从数组1号位置开始提取3个成员,原数组不变</span><br><span class="line">$&#123;array[@]:1:3&#125;</span><br><span class="line"></span><br><span class="line"># 从数组1号位置开始提取后面所有成员,原数组不变</span><br><span class="line">$&#123;array[@]:1&#125;</span><br><span class="line"></span><br><span class="line">array2=($&#123;array[@]:1&#125;)</span><br></pre></td></tr></table></figure><p>追加数组成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ foo=(a b c)</span><br><span class="line">$ foo+=(d e f)</span><br><span class="line">$ echo $&#123;foo[@]&#125;</span><br><span class="line">a b c d e f</span><br></pre></td></tr></table></figure><h3 id="删除变量"><a href="#删除变量" class="headerlink" title="删除变量"></a>删除变量</h3><p>删除数组和删除变量一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ unset NAME</span><br><span class="line"># 或</span><br><span class="line">$ NAME=&apos;&apos;</span><br></pre></td></tr></table></figure><p>删除数组单个元素会导致该元素为<code>&#39;&#39;</code>,但不会减少数组长度</p><h3 id="输出变量"><a href="#输出变量" class="headerlink" title="输出变量"></a>输出变量</h3><p>用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用export命令。这样输出的变量，对于子 Shell 来说就是环境变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NAME=value</span><br></pre></td></tr></table></figure><p>子 Shell 如果修改继承的变量，不会影响父 Shell。</p><h3 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h3><ol><li><p>$?<br>为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是0，表示上一个命令执行成功；如果是非零，上一个命令执行失败。</p></li><li><p>$$<br>为当前 Shell 的进程 ID，这个特殊变量可以用来命名临时文件。Like <code>LOGFILE=/tmp/output_log.$$</code>,有时也可以用来杀死自己</p></li><li><p>$_<br>为上一个命令的最后一个参数，也可以使用<code>esc + .</code></p></li><li><p>$0<br>为当前 Shell 的名称（在命令行直接执行时）或者脚本名（在脚本中执行时）。</p></li></ol><h3 id="变量的默认值"><a href="#变量的默认值" class="headerlink" title="变量的默认值"></a>变量的默认值</h3><p>Bash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$&#123;varname:-word&#125;# 如果变量varname存在且不为空，则返回它的值，否则返回word</span><br><span class="line">$&#123;varname:=word&#125;# 如果变量varname存在且不为空，则返回它的值，否则将它设为word，并且返回word</span><br><span class="line">$&#123;varname:+word&#125;# 如果变量名存在且不为空，则返回word，否则返回空值。</span><br><span class="line">$&#123;varname:?message&#125;# 如果变量varname存在且不为空，则返回它的值，否则打印出varname: message，并中断脚本的执行</span><br><span class="line">filename=$&#123;1:?&quot;filename missing.&quot;&#125; # 如果参数1不存在，就退出脚本并报错。</span><br></pre></td></tr></table></figure><h3 id="declare-命令"><a href="#declare-命令" class="headerlink" title="declare 命令"></a>declare 命令</h3><p>declare命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">declare OPTION VARIABLE=value</span><br><span class="line"></span><br><span class="line"># -a：声明数组变量。</span><br><span class="line"># -f：输出所有函数定义。</span><br><span class="line"># -F：输出所有函数名。</span><br><span class="line"># -i：声明整数变量。</span><br><span class="line"># -l：声明变量为小写字母。</span><br><span class="line"># -p：查看变量信息。</span><br><span class="line"># -r：声明只读变量。</span><br><span class="line"># -u：声明变量为大写字母。</span><br><span class="line"># -x：该变量输出为环境变量。</span><br><span class="line"></span><br><span class="line">$ declare -x foo# 等同于 export foo</span><br><span class="line"></span><br><span class="line">$ declare -r bar=1# 只读变量不可更改,不可unset</span><br><span class="line"></span><br><span class="line">$ a=10;b=20</span><br><span class="line">$ declare -i c=a*b# 将参数声明整数变量以后，可以直接进行数学运算</span><br><span class="line">$ echo $&#123;c&#125;</span><br><span class="line">200</span><br><span class="line"></span><br><span class="line">$ declare -l foo=“foo”# 变量小写 Mac中不支持</span><br><span class="line">$ declare -u bar=&quot;bar&quot;# 变量大写 Mac中不支持</span><br><span class="line"></span><br><span class="line">$ declare -p a # 输出变量信息</span><br><span class="line">declare -- a=&quot;10&quot;</span><br><span class="line"></span><br><span class="line">$ declare -f# 输出当前环境的所有函数，包括它的定义。</span><br><span class="line">$ declare -F# 输出当前环境的所有函数，包括它的定义</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>本文采用知识共享 署名-相同方式共享 3.0协议</p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协&gt;议进行授权。</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash基础入门（1）</title>
      <link href="2020/11/08/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89/"/>
      <url>2020/11/08/Bash%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="描述-Bash基础入门（1）"><a href="#描述-Bash基础入门（1）" class="headerlink" title="描述: Bash基础入门（1）"></a>描述: Bash基础入门（1）</h1><a id="more"></a><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p><code>Ctrl + L</code>：清除屏幕并将当前行移到页面顶部。<br><code>Ctrl + C</code>：中止当前正在执行的命令。<br><code>Ctrl + U</code>：从光标位置删除到行首。<br><code>Ctrl + K</code>：从光标位置删除到行尾。<br><code>Ctrl + D</code>：关闭 Shell 会话。<br><code>Tab</code>：自动补全</p><h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>分号（<code>;</code>）是命令的结束符，使得一行可以放置多个命令，上一个命令执行结束后，再执行第二个命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 例1</span><br><span class="line">for i in `ls`;do </span><br><span class="line">    echo $i is file name\!;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 例2</span><br><span class="line">touch file; ls</span><br></pre></td></tr></table></figure><p>例如for循环，例2中，Bash 先执行touch命令，执行完成后，再执行ls命令。</p><p>注意，使用分号时，第二个命令总是接着第一个命令执行，无论touch执行成功或失败。</p><h3 id="amp-amp-和"><a href="#amp-amp-和" class="headerlink" title="&amp;&amp; 和 ||"></a>&amp;&amp; 和 ||</h3><p><code>&amp;&amp;</code>和<code>||</code>可以处理命令之间的执行关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &amp;&amp; echo &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>表示如果<code>ls</code>命令成功，才运行<code>echo</code>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch 123 || ls</span><br></pre></td></tr></table></figure><p>表示如果<code>touch</code>命令运行失败，才运行<code>ls</code>命令，如果<code>touch</code>成功则不执行<code>ls</code>。</p><h3 id="和-匹配"><a href="#和-匹配" class="headerlink" title="?和*匹配"></a><code>?</code>和<code>*</code>匹配</h3><p><code>?</code>匹配单个字符,<code>*</code>匹配任意数量的任意字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls ?.txt</span><br><span class="line">1.txt 2.txt</span><br><span class="line"></span><br><span class="line">$ ls *.txt</span><br><span class="line">1.txt 2.txt 123.txt</span><br></pre></td></tr></table></figure><p>注意，<code>*</code>不会匹配隐藏文件（以<code>.</code>开头的文件），即<code>ls *</code>不会输出隐藏文件。</p><p>如果要匹配隐藏文件，需要写成<code>.*</code>。</p><h3 id="方括号匹配"><a href="#方括号匹配" class="headerlink" title="方括号匹配"></a>方括号匹配</h3><p>匹配括号之中的任意一个字符。比如，[12345]可以匹配五个数字的任意一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ls [12345].txt</span><br><span class="line">1.txt 2.txt</span><br><span class="line"></span><br><span class="line"># 只存在文件 a.txt</span><br><span class="line">$ ls [12345].txt</span><br><span class="line">1.txt</span><br></pre></td></tr></table></figure><p>反向匹配，<code>[^abc]</code>或<code>[!abc]</code>表示匹配除了a、b、c以外的字符.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 存在 111、123、222 三个文件</span><br><span class="line">$ ls ?[!2]?</span><br><span class="line">111</span><br></pre></td></tr></table></figure><p>连续匹配<code>[0-9]</code>,<code>[a-z]</code>,<code>[A-Z]</code>，还有<code>[!1-9]</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls demo[0-9].txt</span><br><span class="line">demo1.txt demo3.txt</span><br></pre></td></tr></table></figure><ul><li>[a-z]：所有小写字母。</li><li>[a-zA-Z]：所有小写字母与大写字母。</li><li>[a-zA-Z0-9]：所有小写字母、大写字母与数字。</li><li>[abc]*：所有以a、b、c字符之一开头的文件名。</li><li>program.[co]：文件program.c与文件program.o。</li><li>BACKUP.[0-9][0-9][0-9]：所有以BACKUP.开头，后面是三个数字的文件名。</li></ul><p>注意，如果需要匹配<code>[</code>字符，可以放在方括号内，比如<code>[[aeiou]</code>。如果需要匹配连字号<code>-</code>，只能放在方括号内部的开头或结尾，比如<code>[-aeiou]</code>或<code>[aeiou-]</code></p><h3 id="大括号扩展"><a href="#大括号扩展" class="headerlink" title="大括号扩展"></a>大括号扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 例1,创建3个文件</span><br><span class="line">$ touch &#123;1,2,3&#125;.txt</span><br><span class="line"></span><br><span class="line"># 例2，创建9个文件夹</span><br><span class="line">$ mkdir &#123;1,2,3&#125;/&#123;1,2,3&#125;</span><br><span class="line"></span><br><span class="line"># 例3，嵌套扩展</span><br><span class="line">$ touch 1.&#123;j&#123;p,pe&#125;g,png&#125;</span><br><span class="line">1.jpeg  1.jpg   1.png</span><br><span class="line"></span><br><span class="line"># 例4，for循环连用</span><br><span class="line">for i in &#123;1..4&#125;</span><br><span class="line">do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>注意，大括号扩展内部的逗号前后不能有空格。否则，大括号扩展会失效。</p><h3 id="字符"><a href="#字符" class="headerlink" title="$字符"></a><code>$</code>字符</h3><p>Bash将<code>$</code>开头的的词视为变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$SHELL</span><br><span class="line">或</span><br><span class="line">$&#123;SHELL&#125;</span><br></pre></td></tr></table></figure><p>Bash会先返回<code>$(Command)</code>中<code>Command</code>的运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo $(date)</span><br></pre></td></tr></table></figure><h3 id="特别匹配"><a href="#特别匹配" class="headerlink" title="特别匹配"></a>特别匹配</h3><ul><li>[[:alnum:]]：匹配任意英文字母与数字</li><li>[[:alpha:]]：匹配任意英文字母</li><li>[[:blank:]]：空格和 Tab 键。</li><li>[[:cntrl:]]：ASCII 码 0-31 的不可打印字符。</li><li>[[:digit:]]：匹配任意数字 0-9。</li><li>[[:graph:]]：A-Z、a-z、0-9 和标点符号。</li><li>[[:lower:]]：匹配任意小写字母 a-z。</li><li>[[:print:]]：ASCII 码 32-127 的可打印字符。</li><li>[[:punct:]]：标点符号（除了 A-Z、a-z、0-9 的可打印字符）。</li><li>[[:space:]]：空格、Tab、LF（10）、VT（11）、FF（12）、CR（13）。</li><li>[[:upper:]]：匹配任意大写字母 A-Z。</li><li>[[:xdigit:]]：16进制字符（A-F、a-f、0-9）。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有以大写字母开头的文件</span><br><span class="line">$ ls [[:upper:]]*</span><br></pre></td></tr></table></figure></li></ul><h3 id="量词匹配"><a href="#量词匹配" class="headerlink" title="量词匹配"></a>量词匹配</h3><p><code>?(XXX)</code>匹配0个或1个<code>XXX</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 匹配0个或1个.txt</span><br><span class="line">$ ls abc?(.txt)</span><br><span class="line">abc abc.txt</span><br></pre></td></tr></table></figure><p><code>+(XXX)</code>匹配1个或多个<code>XXX</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls abc+(.txt)</span><br><span class="line">abc.txt abc.txt.txt</span><br></pre></td></tr></table></figure><h3 id="引号和转义"><a href="#引号和转义" class="headerlink" title="引号和转义"></a>引号和转义</h3><p><code>&#39;</code>单引号效力最强，会让一切转义失效保留原样。<code>&quot;</code>双引号保留美元符号（<code>$</code>）、反引号（<code>\``）和反斜杠（</code>`）的效力</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ a=1</span><br><span class="line"></span><br><span class="line">$ echo &apos;$a&apos;</span><br><span class="line">$a</span><br><span class="line"></span><br><span class="line"># 双引号使用变量</span><br><span class="line">$ echo &quot;$a&quot;</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"># -e 参数转义</span><br><span class="line">$ echo -e &quot;a\tb&quot;</span><br><span class="line">ab</span><br><span class="line"></span><br><span class="line"># 反引号</span><br><span class="line">$ echo &quot;I&apos;d say: \&quot;hello!\&quot;&quot;</span><br><span class="line">I&apos;d say: &quot;hello!&quot;</span><br><span class="line"></span><br><span class="line"># 输出多行文本</span><br><span class="line">$ echo &quot;hello</span><br><span class="line">world&quot;</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line"></span><br><span class="line"># 单行输出</span><br><span class="line">$ echo $(cal)</span><br><span class="line">一月 2020 日 一 二 三 四 五 六 1 2 3 ... 31</span><br><span class="line"></span><br><span class="line"># 原始格式输出</span><br><span class="line">$ echo &quot;$(cal)&quot;</span><br><span class="line">      一月 2020</span><br><span class="line">日 一 二 三 四 五 六</span><br><span class="line">          1  2  3  4</span><br><span class="line"> 5  6  7  8  9 10 11</span><br><span class="line">12 13 14 15 16 17 18</span><br><span class="line">19 20 21 22 23 24 25</span><br><span class="line">26 27 28 29 30 31</span><br></pre></td></tr></table></figure><p>来自网道项目：<a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p>署名-相同方式共享（BY-SA）：使用者可以对本创作进行转载、节选、混编、二次创作，可以将其运用于商业用途，唯须署名作者，并且采用本创作的内容必须同样采用本协议进行授权。</p>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bash </tag>
            
            <tag> Bash基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu别名alias</title>
      <link href="2020/11/08/Ubuntu%E5%88%AB%E5%90%8Dalias/"/>
      <url>2020/11/08/Ubuntu%E5%88%AB%E5%90%8Dalias/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-为命令添加别名"><a href="#描述-为命令添加别名" class="headerlink" title="描述: 为命令添加别名"></a>描述: 为命令添加别名</h3><a id="more"></a><ol><li><p>新建或打开 ~/.bashrc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>输入以下内容，这是git常用的几个命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alias pull="git pull"</span><br><span class="line">alias commit="git commit"</span><br><span class="line">alias push="git push"</span><br><span class="line">alias branch="git branch"</span><br><span class="line">alias check="git checkout"</span><br><span class="line">alias st="git status"</span><br></pre></td></tr></table></figure></li><li><p>让别名立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>让别名永久生效，新建或打开 ~/.bash_profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line">if [ -f ~/.bashrc ]; then</span><br><span class="line">  source ~/.bashrc</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>如果别名特别多，我们可以创建单独的<code>~/.alias</code>文件存放别名,并在<code>~/.bashrc</code>中读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -f ~/.alias ]; then</span><br><span class="line">  source ~/.alias</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>alias相关操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 新增别名 只在当前终端有效</span><br><span class="line">$ alias hw=&apos;echo &quot;hello world&quot;&apos;</span><br><span class="line"></span><br><span class="line"># 查看现有别名</span><br><span class="line">$ alias</span><br><span class="line">alias ll=&apos;ls -al&apos;</span><br><span class="line">alias hw=&apos;echo &quot;hello world&quot;&apos;</span><br><span class="line"></span><br><span class="line"># 取消别名</span><br><span class="line">$ unalias ll</span><br><span class="line"></span><br><span class="line"># 取消所有别名</span><br><span class="line">$ unalias -a</span><br></pre></td></tr></table></figure></li></ol><p>如果别名是写在文件中，即使取消了，重新登陆还是会有</p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu为history添加时间戳</title>
      <link href="2020/11/08/Ubuntu%E4%B8%BAhistory%E6%B7%BB%E5%8A%A0%E6%97%B6%E9%97%B4%E6%88%B3/"/>
      <url>2020/11/08/Ubuntu%E4%B8%BAhistory%E6%B7%BB%E5%8A%A0%E6%97%B6%E9%97%B4%E6%88%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="描述-为history添加时间戳"><a href="#描述-为history添加时间戳" class="headerlink" title="描述: 为history添加时间戳"></a>描述: 为history添加时间戳</h1><a id="more"></a><h4 id="设置系统环境变量"><a href="#设置系统环境变量" class="headerlink" title="设置系统环境变量"></a>设置系统环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;export HISTTIMEFORMAT=&quot;%F %T  `whoami` &quot;&apos; &gt;&gt; /etc/profile &amp;&amp; source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="时间参数解析"><a href="#时间参数解析" class="headerlink" title="时间参数解析"></a>时间参数解析</h3><ol><li><p>history的历史命令保存在~/.bash_history 文件中   #仅仅对当前用户有效，应设置全局环境变量/etc/profile</p></li><li><p>~/.bashrc文件可添加的history相关的说明        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">HISTFILESIZE=2000      #设置保存历史命令的文件大小        </span><br><span class="line"></span><br><span class="line">HISTSIZE=2000           #保存历史命令条数        </span><br><span class="line"></span><br><span class="line">HISTTIMEFORMAT=&quot;%Y-%m-%d:%H-%M-%S `whoami`:  &quot;    #记录每条历史命令的执行时间和执行者        </span><br><span class="line"></span><br><span class="line">export HISTTIMEFORMAT    </span><br><span class="line"></span><br><span class="line"># 其中： date +%Y-%m-%d    ==2017-06-09</span><br><span class="line"># </span><br><span class="line"># %Y:4位数的年份；        </span><br><span class="line"># </span><br><span class="line"># %m:2位数的月份数；        </span><br><span class="line"># </span><br><span class="line"># %d:2位数的一个月中的日期数；        </span><br><span class="line"># </span><br><span class="line"># %H：2位数的小时数（24小时制）；        </span><br><span class="line"># </span><br><span class="line"># %M：2位数的分钟数；        </span><br><span class="line"># </span><br><span class="line"># %S：2位数的秒数</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell技巧 </tag>
            
            <tag> shell </tag>
            
            <tag> shell命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客中图片插入</title>
      <link href="2020/11/08/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/"/>
      <url>2020/11/08/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-Hexo博客中图片插入"><a href="#描述-Hexo博客中图片插入" class="headerlink" title="描述: Hexo博客中图片插入"></a>描述: Hexo博客中图片插入</h3><a id="more"></a><ol><li>绝对路径</li></ol><p>可以将图片统一放在Hexo根目录的source/images文件夹中，在文章中通过markdown语法访问它们。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/images/image.jpg)</span><br></pre></td></tr></table></figure><p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p><ol start="2"><li>相对路径</li></ol><p>在Hexo项目根目录中修改<code>_config.yml</code>并找到<code>post_asset_folder</code>字段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 将post_asset_folder修改为true</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>之后<code>hexo new article</code>除了会在<code>source/_posts</code>目录下生成同名文章之外，还会有同名文件夹，图片放入文件夹中即可引用</p><p>在文章中引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 插入图片，当图片无法载入时会显示[]内的文字</span><br><span class="line">![](1.png)</span><br></pre></td></tr></table></figure><p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img image.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure><p>Like this:<br><img src="1.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Next主题下添加搜索功能</title>
      <link href="2020/11/08/Hexo-Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>2020/11/08/Hexo-Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-在Next主题下添加搜索功能"><a href="#描述-在Next主题下添加搜索功能" class="headerlink" title="描述: 在Next主题下添加搜索功能"></a>描述: 在Next主题下添加搜索功能</h3><a id="more"></a><p>有两种插件可用，安装一种即可</p><ol><li><p>hexo-generator-search插件<br>在hexo根目录安装<code>hexo-generator-search</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li><li><p>hexo-generator-searchdb插件<br>在hexo根目录安装<code>hexo-generator-searchdb</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li></ol><p>附上searchdb的repo: <a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">https://github.com/theme-next/hexo-generator-searchdb</a></p><p>剩下的步骤是一样的</p><p>在hexo根目录修改<code>_config.yml</code>文件,添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>path - file path. By default is search.xml. If the file extension is .json, the output format will be JSON. Otherwise XML format file will be exported.</li><li>field - the search scope you want to search, you can chose:<ul><li>post (Default) - will only cover all the posts of your blog.</li><li>page - will only cover all the pages of your blog.</li><li>all - will cover all the posts and pages of your blog.</li></ul></li><li>content - whether contains the whole content of each article. If false, the generated results only cover title and other meta info without mainbody. By default is true.</li><li>format - the form of the page contents, options are:<ul><li>html (Default) - original html string being minified.</li><li>striptags - original html string being minified, and remove all the tags.</li><li>raw - markdown text of each posts or pages.</li></ul></li></ul><p>最后在next主题的<code>_config.yml</code>文件中修改<code>local_search</code>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim themes/next/_config.yml</span><br><span class="line"></span><br><span class="line"># 找到并修改</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>enable 启用搜索</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu日志</title>
      <link href="2020/11/08/Ubuntu%E6%97%A5%E5%BF%97/"/>
      <url>2020/11/08/Ubuntu%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-Ubuntu-日志相关"><a href="#描述-Ubuntu-日志相关" class="headerlink" title="描述: Ubuntu 日志相关"></a>描述: Ubuntu 日志相关</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/var/log/messages：常规日志消息</span><br><span class="line">/var/log/boot：系统启动日志</span><br><span class="line">/var/log/debug：调试日志消息</span><br><span class="line">/var/log/auth.log：用户登录和身份验证日志</span><br><span class="line">/var/log/daemon.log：运行squid，ntpd等其他日志消息到这个文件</span><br><span class="line">/var/log/dmesg：Linux内核环缓存日志</span><br><span class="line">/var/log/dpkg.log：所有二进制包日志都包括程序包安装和其他信息</span><br><span class="line">/var/log/faillog：用户登录日志文件失败</span><br><span class="line">/var/log/kern.log：内核日志文件</span><br><span class="line">/var/log/lpr.log：打印机日志文件</span><br><span class="line">/var/log/mail.*：所有邮件服务器消息日志文件</span><br><span class="line">/var/log/mysql.*：MySQL服务器日志文件</span><br><span class="line">/var/log/user.log：所有用户级日志</span><br><span class="line">/var/log/xorg.0.log：X.org日志文件</span><br><span class="line">/var/log/apache2/*：Apache Web服务器日志文件目录</span><br><span class="line">/var/log/lighttpd/*：Lighttpd Web服务器日志文件目录</span><br><span class="line">/var/log/fsck/*：fsck命令日志</span><br><span class="line">/var/log/apport.log：应用程序崩溃报告/日志文件</span><br><span class="line">/var/log/syslog：系统日志</span><br><span class="line">/var/log/ufw：ufw防火墙日志</span><br><span class="line">/var/log/gufw：gufw防火墙日志</span><br></pre></td></tr></table></figure><h3 id="在脚本中写入系统日志"><a href="#在脚本中写入系统日志" class="headerlink" title="在脚本中写入系统日志"></a>在脚本中写入系统日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger –t ScriptName "Hello World"</span><br></pre></td></tr></table></figure><h3 id="在脚本中输出并记录日志"><a href="#在脚本中输出并记录日志" class="headerlink" title="在脚本中输出并记录日志"></a>在脚本中输出并记录日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "somethong wrong" | tee -a /var/log/script_log</span><br></pre></td></tr></table></figure><h3 id="在脚本中写日志函数"><a href="#在脚本中写日志函数" class="headerlink" title="在脚本中写日志函数"></a>在脚本中写日志函数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LOG_FILE='/var/log/script_'$(date +"%Y-%m-%d_%H-%M-%S")'.log'</span><br><span class="line"></span><br><span class="line">function write_log()</span><br><span class="line">&#123;</span><br><span class="line">  now_time='['$(date +"%Y-%m-%d %H:%M:%S")']'</span><br><span class="line">  echo $&#123;now_time&#125; $1 | tee -a $&#123;log_file&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write_log "everything is ok"</span><br></pre></td></tr></table></figure><h3 id="使用cat-tail-more-less和grep命令。"><a href="#使用cat-tail-more-less和grep命令。" class="headerlink" title="使用cat, tail, more,less和grep命令。"></a>使用cat, tail, more,less和grep命令。</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat -n /var/log/syslog |grep "key" |more</span><br><span class="line">tail -f /var/log/apport.log</span><br><span class="line">more /var/log/xorg.0.log</span><br><span class="line">cat /var/log/mysql.err</span><br><span class="line">less /var/log/messages</span><br><span class="line">grep -i fail /var/log/boot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell提示用户确认操作</title>
      <link href="2020/11/08/shell%E6%8F%90%E7%A4%BA%E7%94%A8%E6%88%B7%E7%A1%AE%E8%AE%A4%E6%93%8D%E4%BD%9C/"/>
      <url>2020/11/08/shell%E6%8F%90%E7%A4%BA%E7%94%A8%E6%88%B7%E7%A1%AE%E8%AE%A4%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-shell脚本中提示用户确认操作"><a href="#描述-shell脚本中提示用户确认操作" class="headerlink" title="描述: shell脚本中提示用户确认操作"></a>描述: shell脚本中提示用户确认操作</h3><a id="more"></a><h4 id="例1：确认提示（一次）"><a href="#例1：确认提示（一次）" class="headerlink" title="例1：确认提示（一次）"></a>例1：确认提示（一次）</h4><p>这个示例代码将为确认提示一次，如果你给输入错误，程序会以状态1退出。这个例子将只接受Y或N或YES或NO（不区分大小写）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">read -r -p "Are You Sure? [Y/n] " input</span><br><span class="line"></span><br><span class="line">case $input in</span><br><span class="line">    [yY][eE][sS]|[yY])</span><br><span class="line">echo "Yes"</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">    [nN][oO]|[nN])</span><br><span class="line">echo "No"</span><br><span class="line">       ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">echo "Invalid input..."</span><br><span class="line">exit 1</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h4 id="例2：提示进行确认（输入正常退出，输入错误则需重新输入）"><a href="#例2：提示进行确认（输入正常退出，输入错误则需重新输入）" class="headerlink" title="例2：提示进行确认（输入正常退出，输入错误则需重新输入）"></a>例2：提示进行确认（输入正常退出，输入错误则需重新输入）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -r -p "Are You Sure? [Y/n] " input</span><br><span class="line"></span><br><span class="line">case $input in</span><br><span class="line">    [yY][eE][sS]|[yY])</span><br><span class="line">echo "Yes"</span><br><span class="line">exit 1</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">    [nN][oO]|[nN])</span><br><span class="line">echo "No"</span><br><span class="line">exit 1       </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">echo "Invalid input..."</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWSEC2获取本机IP</title>
      <link href="2020/11/08/AWSEC2%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP/"/>
      <url>2020/11/08/AWSEC2%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP/</url>
      
        <content type="html"><![CDATA[<h3 id="描述-在EC2内部获取本机的private-IP和public-IP"><a href="#描述-在EC2内部获取本机的private-IP和public-IP" class="headerlink" title="描述: 在EC2内部获取本机的private IP和public IP"></a>描述: 在EC2内部获取本机的private IP和public IP</h3><a id="more"></a><p>One can use the following curl command to get private IPv4:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://169.254.169.254/latest/meta-data/local-ipv4</span><br></pre></td></tr></table></figure><p>And, to get public IPv4, run:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl http://169.254.169.254/latest/meta-data/public-ipv4</span><br><span class="line">curl http://checkip.amazonaws.com</span><br><span class="line">curl icanhazip.com</span><br><span class="line">curl ifconfig.me</span><br><span class="line">wget http://ipecho.net/plain -O - -q</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AWS </category>
          
          <category> EC2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS </tag>
            
            <tag> EC2 </tag>
            
            <tag> AWS EC2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell获取本机IP</title>
      <link href="2020/11/08/shell%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP/"/>
      <url>2020/11/08/shell%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP/</url>
      
        <content type="html"><![CDATA[<h3 id="shell获取本机IP"><a href="#shell获取本机IP" class="headerlink" title="shell获取本机IP"></a>shell获取本机IP</h3><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl icanhazip.com</span><br><span class="line">curl ifconfig.me</span><br><span class="line">curl http://checkip.amazonaws.com</span><br><span class="line">wget http://ipecho.net/plain -O - -q</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell获取用户家目录</title>
      <link href="2020/11/08/shell%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%AE%B6%E7%9B%AE%E5%BD%95/"/>
      <url>2020/11/08/shell%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%AE%B6%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="获取用户家目录"><a href="#获取用户家目录" class="headerlink" title="获取用户家目录"></a>获取用户家目录</h3><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $HOME</span><br><span class="line"></span><br><span class="line">env|grep ^HOME=|cut -c 6-</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本菜单目录实现</title>
      <link href="2020/11/08/shell%E8%84%9A%E6%9C%AC%E8%8F%9C%E5%8D%95%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0/"/>
      <url>2020/11/08/shell%E8%84%9A%E6%9C%AC%E8%8F%9C%E5%8D%95%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="一个简单shell菜单实现"><a href="#一个简单shell菜单实现" class="headerlink" title="一个简单shell菜单实现"></a>一个简单shell菜单实现</h3><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">cat &lt;&lt; EOF</span><br><span class="line">********please enter your choice:(1-6)****</span><br><span class="line">(1) List you selected directory</span><br><span class="line">(2) Change to you selected directory</span><br><span class="line">(3) Create a new file</span><br><span class="line">(4) Edit you selected file</span><br><span class="line">(5) Remove you selected file.</span><br><span class="line">(6) Exit Menu.</span><br><span class="line">EOF</span><br><span class="line">read -p "Now select the top option to: " input</span><br><span class="line">case $input in </span><br><span class="line">1) ls;;</span><br><span class="line">2) echo "Enter target directory:"</span><br><span class="line">read dir</span><br><span class="line">cd $dir;;</span><br><span class="line">3) echo "Enter a file name:"</span><br><span class="line">read file</span><br><span class="line">touch $file;;</span><br><span class="line">4) echo "Enter a file name:"</span><br><span class="line">read file</span><br><span class="line">vi $file;;</span><br><span class="line">5) echo "Enter a file name:"</span><br><span class="line">read file</span><br><span class="line">rm $file;;</span><br><span class="line">6) echo "Bye"</span><br><span class="line">exit 0;;</span><br><span class="line">*) echo "Invalid input,bye"</span><br><span class="line">exit 1;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>也可以通过<code>while ture</code> 循环菜单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">while true</span><br><span class="line">do</span><br><span class="line">  cat &lt;&lt; EOF</span><br><span class="line">  ********please enter your choice:(1-6)****</span><br><span class="line"></span><br><span class="line">  (1) List you selected directory</span><br><span class="line">  (2) Change to you selected directory</span><br><span class="line">  (3) Create a new file</span><br><span class="line">  (4) Edit you selected file</span><br><span class="line">  (5) Remove you selected file.</span><br><span class="line">  (6) Exit Menu.</span><br><span class="line">  EOF</span><br><span class="line">  read -p "Now select the top option to: " input</span><br><span class="line">  case $input in </span><br><span class="line">  1) ls;;</span><br><span class="line">  2) echo "Enter target directory:"</span><br><span class="line">  read dir</span><br><span class="line">  cd $dir;;</span><br><span class="line">  3) echo "Enter a file name:"</span><br><span class="line">  read file</span><br><span class="line">  touch $file;;</span><br><span class="line">  4) echo "Enter a file name:"</span><br><span class="line">  read file</span><br><span class="line">  vi $file;;</span><br><span class="line">  5) echo "Enter a file name:"</span><br><span class="line">  read file</span><br><span class="line">  rm $file;;</span><br><span class="line">  6) echo "Bye"</span><br><span class="line">  exit 0;;</span><br><span class="line">  *) echo "Invalid input,bye"</span><br><span class="line">  exit 1;;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell命令 </tag>
            
            <tag> shell脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo疑难</title>
      <link href="2020/11/07/Hexo%E7%96%91%E9%9A%BE/"/>
      <url>2020/11/07/Hexo%E7%96%91%E9%9A%BE/</url>
      
        <content type="html"><![CDATA[<p>描述: 主要记录在配置hexo过程中遇到的问题</p><a id="more"></a><ol><li>部署时<code>hexo d</code>出现问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object</span><br></pre></td></tr></table></figure></li></ol><p>node版本太高，我在node v14.15遇到切到v12.12问题解决，虽然出现了warning，hexo对node有一定要求，最好v14以下v10以上</p><ol start="2"><li>迁移</li></ol><p>本身hexo的根目录其实也是一个repo,所以定时push也是好的。</p><p>当使用了主题，并且<code>git add</code>时，可能会出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">warning: adding embedded git repository: themes/&lt;hexo-theme-name&gt;</span><br><span class="line">hint: You&apos;ve added another git repository inside your current repository.</span><br><span class="line">hint: Clones of the outer repository will not contain the contents of</span><br><span class="line">hint: the embedded repository and will not know how to obtain it.</span><br><span class="line">hint: If you meant to add a submodule, use:</span><br><span class="line">hint: </span><br><span class="line">hint:   git submodule add &lt;url&gt; themes/&lt;hexo-theme-name&gt;</span><br><span class="line">hint: </span><br><span class="line">hint: If you added this path by mistake, you can remove it from the</span><br><span class="line">hint: index with:</span><br><span class="line">hint: </span><br><span class="line">hint:   git rm --cached themes/&lt;hexo-theme-name&gt;</span><br><span class="line">hint: </span><br><span class="line">hint: See &quot;git help submodule&quot; for more information.</span><br></pre></td></tr></table></figure><p>这时有两个方案<br>    1. 可以按照提示，将相关主题作为子模块<br>    2. 进入该主题目录，删除隐藏的<code>.git</code>文件夹,并且重新<code>git add themes/&lt;hexo-theme-name&gt;/</code></p><ol start="3"><li>主题设置</li></ol><p>这里有位仁兄很详细的next的主题设置</p><p><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" target="_blank" rel="noopener">https://blog.csdn.net/nightmare_dimple/article/details/86661502</a></p><ol start="4"><li><p>更换电脑clone hexo到本地后<code>hexo server</code>启动主页空白</p><ol><li><p>检查相关的depends是否安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm ls --depth 0 </span><br><span class="line"># 如果没有安装，进入hexo根目录</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>检查hexo根目录下<code>_config.yml</code>的<code>theme</code>字段和<code>themes</code>文件夹中的名字是否一致</p></li></ol></li><li><p>hexo部署时遇到<code>fatal: in unpopulated submodule &#39;.deploy_git&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf .deploy_git</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实践 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo分类和标签</title>
      <link href="2020/11/07/Hexo%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/"/>
      <url>2020/11/07/Hexo%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>为Hexo创建分类和标签管理</p><a id="more"></a><ol><li>创建分类</li><li>1 打开命令行，进入博客所在文件夹。执行命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo new page categories</span><br></pre></td></tr></table></figure></li></ol><p>成功后会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Hexo_blog/source/categories/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-11-07 14:06:16</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>1.2 添加type: “categories”到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-11-07 14:06:16</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>1.3 给文章添加“categories”属性<br>打开需要添加分类的文章，为其添加categories属性。下方的categories: web前端表示添加这篇文章到“web前端”这个分类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo + GitHub搭建个人博客</span><br><span class="line">date: 2019-10-09 07:17:26</span><br><span class="line">categories:</span><br><span class="line">- 个人实践</span><br><span class="line">tags:</span><br><span class="line">- 个人实践</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>注意：hexo一篇文章只能属于一个分类，也就是说如果在“- 个人实践”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- 个人实践”下的 “-xxx ”分类）。</strong></p><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。</p><ol start="2"><li>创建“标签”选项</li><li>1 和上面类似，打开命令行，进入博客所在文件夹。执行命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo new page tags</span><br></pre></td></tr></table></figure></li></ol><p>成功后会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Hexo_blog/source/tags/index.md</span><br></pre></td></tr></table></figure><p>2.2 根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-11-07 14:07:08</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加type: “tags”到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-11-07 14:07:08</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>2.3 给文章添加“tags”属性<br>打开需要添加标签的文章，为其添加tags属性。下方的tags<code>- 个人实践</code>就是这篇文章的标签了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo + GitHub搭建个人博客</span><br><span class="line">date: 2019-10-09 07:17:26</span><br><span class="line">categories:</span><br><span class="line">- 个人实践</span><br><span class="line">tags:</span><br><span class="line">- 个人实践</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。</p><ol start="3"><li>修改模版</li></ol><p>我们可以打开scaffolds/post.md文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim scaffolds/post.md</span><br></pre></td></tr></table></figure><p>可以看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在tages:上面加入categories:,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了。</p><p>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p><p>参考链接：<a href="https://www.jianshu.com/p/e17711e44e00" target="_blank" rel="noopener">https://www.jianshu.com/p/e17711e44e00</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实践 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下ntfs硬盘只读问题</title>
      <link href="2020/11/07/Ubuntu%E4%B8%8Bntfs%E7%A1%AC%E7%9B%98%E5%8F%AA%E8%AF%BB%E9%97%AE%E9%A2%98/"/>
      <url>2020/11/07/Ubuntu%E4%B8%8Bntfs%E7%A1%AC%E7%9B%98%E5%8F%AA%E8%AF%BB%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Ubuntu挂载ntfs格式的硬盘后可以读取，无法写入</p><a id="more"></a><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li><p>打开日志,查看插入硬盘（U）盘后的日志,根据日志修复，下方是通用方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/syslog</span><br></pre></td></tr></table></figure></li><li><p>查看挂载位置,并记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta">#</span> 或</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure></li><li><p>卸载挂载,以sdb1为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/sdb1</span><br></pre></td></tr></table></figure></li><li><p>修复，安装ntfsfix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ntfsfix</span><br><span class="line">netsfix /dev/sdb1</span><br></pre></td></tr></table></figure></li></ol><p>附：有一种可能是Windows系统盘休眠导致的，需要将硬盘连接Windows,关闭休眠功能并正常关机后再连接Ubuntu</p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 疑难 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法基础</title>
      <link href="2019/10/09/MarkDown%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
      <url>2019/10/09/MarkDown%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>Markdown基础语法</p><p>新搭建好了博客,编辑内容时,需要标点和相关格式,hexo支持markdown语法.于是记录一下</p><a id="more"></a><p>标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><p>单行代码<br><code></code>echo “hello world”`<br>代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`echo &quot;hello world&quot;`</span><br><span class="line">`echo &quot;This is markdown&quot;`</span><br></pre></td></tr></table></figure><p>粗体斜体删除线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~删除线~~</span><br></pre></td></tr></table></figure><p>列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表2</span><br><span class="line"></span><br><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br></pre></td></tr></table></figure><p>超链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">行内式</span><br><span class="line">[HKCM](https://hkcm.github.io)</span><br><span class="line"></span><br><span class="line">直接式</span><br><span class="line">&lt;https://hkcm.github.io&gt;</span><br><span class="line"></span><br><span class="line">参考式</span><br><span class="line">这是我的个人博客[HKCM][1]</span><br><span class="line">[1]:https://hkcm.github.io</span><br></pre></td></tr></table></figure><p>锚点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">锚点只支持标题</span><br><span class="line">## 目录&#123;#index&#125;</span><br><span class="line"></span><br><span class="line">跳转到[目录](#index)</span><br></pre></td></tr></table></figure><p>图像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">行内式</span><br><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  &quot;美丽花儿&quot;)</span><br><span class="line"></span><br><span class="line">参考式</span><br><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿][flower]</span><br><span class="line">[flower]:http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  &quot;美丽花儿&quot;</span><br></pre></td></tr></table></figure><p>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在段落中填写[TOC]</span><br></pre></td></tr></table></figure><p>表格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure><p>最后附上Markdown中文官网链接: <a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener">Markdown中文文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + GitHub搭建个人博客</title>
      <link href="2019/10/09/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2019/10/09/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>通过Github结合hexo搭建个人博客</p><a id="more"></a><p>环境: Ubuntu18.04<br>前置条件1: 注册github账号并设置ssh key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/#github地址</span><br></pre></td></tr></table></figure><p>创建新仓库,仓库名必须为”username.github.io”(username必须为你的用户名)</p><p>获取Repository地址,必须为ssh的,后面有用,地址格式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure><p>配置ssh key,然后找到密钥文件将密钥添加到你的github配置文件中,并测试是否添加成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh#查看是否已有ssh key</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;#生成新的key</span><br><span class="line">cat ~/.ssh/id_rsa.pub#查看公钥并上传到github</span><br><span class="line">ssh -T git@github.com #测试是否添加成功(输入yes)</span><br><span class="line">git config --global user.name &quot;uesrname&quot;#配置用户名</span><br><span class="line">git config --global user.email &quot;youremail@example.com&quot;#配置邮箱</span><br></pre></td></tr></table></figure><p>前置条件2: 安装git和Node.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git#安装git</span><br><span class="line">sudo apt install Node.js#安装Node.js</span><br><span class="line">sudo apt install npm#安装npm</span><br><span class="line">npm install -g hexo-cli#安装hexo</span><br></pre></td></tr></table></figure><p>Node.js版本6.0以上,确认Node.js版本在v4时会出现报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Node.js安装方式:</span><br><span class="line">https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04</span><br></pre></td></tr></table></figure><p>创建文件夹hexo,并做相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/hexo# 创建文件夹</span><br><span class="line">cd ~/hexo</span><br><span class="line">hexo init# 初始化</span><br><span class="line">hexo install# 安装依赖包(非必须)</span><br><span class="line">npm install hexo-deployer-git --save# 安装git插件</span><br></pre></td></tr></table></figure><p>修改hexo中的_config.yml文件deploy部分,注意”deploy:”后面有一个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml#编辑配置文件</span><br><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git#这里要用上文中提到的clone地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>尝试发布一篇新的博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/hexo</span><br><span class="line">hexo new &quot;title&quot;#创建新文章,会在~/hexo/source/_posts目录下生成title.md文件</span><br><span class="line">vim source/_post/tile.md#编辑该文件内容即可</span><br><span class="line">hexo g -d#生成并发布</span><br><span class="line">hexo clean#清除当前缓存,尽量每次发布后执行一次</span><br></pre></td></tr></table></figure><p>以上github + hexo搭建个人博客相关配置就完成了,我们可以去username.github.io查看了</p><p>也可以进入到hexo目录下使用以下命令进行本地预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实践 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
